<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="04057_LapSalesRevenueByCustomer" language="groovy" pageWidth="900" pageHeight="595" orientation="Landscape" whenNoDataType="NoDataSection" columnWidth="860" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20" uuid="b406b291-7ccc-4e85-8d33-6ed4d9da73cd">
	<property name="ireport.zoom" value="1.2100000000001263"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<parameter name="TglInvFrom" class="java.util.Date"/>
	<parameter name="TglInvTo" class="java.util.Date"/>
	<queryString>
		<![CDATA[SELECT	XOX.CUST_GROUP
		,XOX.SALES
		,XOX.CAB_CODE
		,XOX.CAB_NAME
		,XOX.CUST_NAME
		,XOX.CUST_GROUP_SORT
		,XOX.NEW_CUST
		, ROW_NUMBER() OVER (PARTITION BY XOX.CAB_CODE ORDER BY XOX.CAB_CODE, XOX.CUST_GROUP_SORT, SUM(XOX.AMOUNT_TOTAL) DESC, XOX.CUST_NAME) NO_URUT
		,SUM(XOX.AMOUNT_SR) AS AMOUNT_SR
		,SUM(XOX.AMOUNT_UM) AS AMOUNT_UM
		,SUM(XOX.AMOUNT_OSO) AS AMOUNT_OSO
		,SUM(XOX.AMOUNT_TOTAL) AS AMOUNT_TOTAL
		,((SUM(XOX.AMOUNT_TOTAL) / (SUM(SUM(XOX.AMOUNT_TOTAL)) OVER (PARTITION BY 1)) ) * 100) AS PCG
FROM	(
SELECT	SUOX.CUST_GROUP
		, CASE WHEN SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) = SUBSTRING(CONVERT(varchar, TGC.TGL_CREATED_FILLTER, 105), 7,4) THEN 'YES' ELSE '' END AS NEW_CUST
		,CUS.[Salesperson Code] AS SALES
		,ISNULL(CABO.[Code], '10') AS CAB_CODE
		,ISNULL(CABO.[Name], 'JAKARTA') AS CAB_NAME
		,ISNULL(CUS.[Name], 'OTHERS - '+ISNULL(CABO.[Name], 'JAKARTA')) AS CUST_NAME
		,CASE WHEN SUOX.CUST_GROUP = 'OTHERS' THEN 2 ELSE 1 END AS CUST_GROUP_SORT
		,SUOX.AMOUNT_SR
		,SUOX.AMOUNT_UM
		,SUOX.AMOUNT_OSO
		,SUOX.AMOUNT_TOTAL
FROM	(
SELECT	SUO.CUST_NO
		, CASE WHEN SUO.CUST_NO NOT IN ('ADJUSTMENT', 'INTERCOY', 'SPONSORSHIP') AND
					(SUM(SUO.AMOUNT_SR) + SUM(SUO.AMOUNT_UM) + SUM(SUO.AMOUNT_OSO)) >= 200000000 THEN SUO.CUST_NO ELSE 'OTHERS' END AS CUST_GROUP
		,SUM(SUO.AMOUNT_SR) AS AMOUNT_SR
		,SUM(SUO.AMOUNT_UM) AS AMOUNT_UM
		,SUM(SUO.AMOUNT_OSO) AS AMOUNT_OSO
		,SUM(SUO.AMOUNT_SR) + SUM(SUO.AMOUNT_UM) + SUM(SUO.AMOUNT_OSO) AS AMOUNT_TOTAL
FROM	(
			SELECT	X.CUST_NO
					,SUM(X.AMOUNT) AS AMOUNT_SR
					, 0 AS AMOUNT_UM
					, 0 AS AMOUNT_OSO
			FROM	(
						SELECT	'SALES ALL' AS NOTE
								,CASE WHEN GLE.[Source No_] IN ('AUJA001', 'AUJA002', 'SOPE001') THEN 'INTERCOY' ELSE GLE.[Source No_] END  AS CUST_NO
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Source No_]
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'SPONSORSHIP' AS CUST_NO
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY GLE.[Source No_]
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.CUST_NO
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.CUST_NO
										,OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.CUST_NO
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														END AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
																AND GLE.[Document No_] LIKE 'UM%'
																AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
																AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Posting Date]
																	,SIH.[No_]
																	,SIH.[External Document No_]
																	,SIH.[Bill-to Customer No_]
																	,SIH.[Bill-to Name]
																	,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
								) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.CUST_NO
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.CUST_NO
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,SUM(ASPY.AMOUNT)  AS AMOUNT
						FROM	(
									SELECT	OUM.CUST_NO
											,OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.CUST_NO
														,UM.ITEM_CAT
														,UM.BRANCHES
														,UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [AUTOJAYA].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																			LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] LIKE 'UM%'
																	AND CM.NO_CM IS NULL
																	AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[External Document No_]
																		,SIH.[Bill-to Customer No_]
																		,SIH.[Bill-to Name]
																		,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] NOT LIKE 'UM%'
																		AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.CUST_NO
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.CUSTOMER AS CUST_NO
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.CUSTOMER) AS CUSTOMER
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
													FROM [AUTOJAYA].[dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN,DIMS.CUSTOMER
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'SPONSORSHIP' AS CUST_NO
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								,'INTERCOY' AS CUST_NO
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, GLE.[Amount]
									FROM [AUTOJAYA].[dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [AUTOJAYA].[dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, 'INTERCOY' AS CUST_NO
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [AUTOJAYA].[dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [AUTOJAYA].[dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES ALL' AS NOTE
								,CASE WHEN GLE.[Source No_] IN ('AUJA001', 'AUJA002', 'SOPE001') THEN 'INTERCOY' ELSE GLE.[Source No_] END  AS CUST_NO
								, DIMS.BRANCHES
								, DIMS.ITEM_CAT
								, DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> ''AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Source No_]
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'SPONSORSHIP' AS CUST_NO
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.CUST_NO
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.CUST_NO
										,OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.CUST_NO
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
														SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
													END
													END	 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
																AND GLE.[Document No_] LIKE 'UM%'
																AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
																AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Posting Date]
																	,SIH.[No_]
																	,SIH.[External Document No_]
																	,SIH.[Bill-to Customer No_]
																	,SIH.[Bill-to Name]
																	,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
								) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.CUST_NO
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.CUST_NO
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								, SUM(ASPY.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	OUM.CUST_NO
											,OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.CUST_NO
														, UM.ITEM_CAT
														, UM.BRANCHES
														, UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [AUTOJAYA].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																			LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] LIKE 'UM%'
																	AND CM.NO_CM IS NULL
																	AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[External Document No_]
																		,SIH.[Bill-to Customer No_]
																		,SIH.[Bill-to Name]
																		,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] NOT LIKE 'UM%'
																		AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.CUST_NO
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.CUSTOMER AS CUST_NO
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(CUSTOMER) AS CUSTOMER
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
													FROM [AUTOJAYA].[dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.CUSTOMER
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'SPONSORSHIP' AS CUST_NO
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [AUTOJAYA].[dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
															,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
															,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
															,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [AUTOJAYA].[dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								,'INTERCOY' AS CUST_NO
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [AUTOJAYA].[dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [AUTOJAYA].[dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								,'INTERCOY' AS CUST_NO
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [AUTOJAYA].[dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [AUTOJAYA].[dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
					) X
			GROUP BY X.CUST_NO
			UNION ALL
			SELECT	OSO.CUST_NO
					, 0 AS AMOUNT_SR
					, SUM(OSO.AMOUNT) AS AMOUNT_UM
					, 0 AS AMOUNT_OSO
			FROM	(
						SELECT	ISNULL(UMX.CUSTOMER, 'ADJUSTMENT')  AS CUST_NO
								,(SUM(UMX.AMOUNT)*-1) AS AMOUNT
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,CASE WHEN DIMS.CUSTOMER IS NULL AND GLE.[Posting Date] < '2019-01-01' THEN 'NGIN001' ELSE DIMS.CUSTOMER END AS CUSTOMER
											,(SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [AUTOJAYA].[dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.CUSTOMER) AS CUSTOMER
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
																FROM [AUTOJAYA].[dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											GLE.[Posting Date] <=  $P{TglInvTo}
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.CUSTOMER, GLE.[Posting Date]
									UNION ALL
									SELECT	DIMS.ITEM_CAT
											,CASE WHEN DIMS.CUSTOMER IS NULL AND GLE.[Posting Date] < '2019-01-01' THEN 'NGIN001' ELSE DIMS.CUSTOMER END AS CUSTOMER
											,(SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [AUTOJAYA].[dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.CUSTOMER) AS CUSTOMER
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
																FROM [AUTOJAYA].[dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME'AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											GLE.[Posting Date] <=  $P{TglInvTo}
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.CUSTOMER, GLE.[Posting Date]
								) UMX
						GROUP BY UMX.CUSTOMER
						UNION ALL
						SELECT	XXX.CUST_CODE AS CUST_NO
								, SUM(XXX.AMOUNT_UM_IDR) AS AMOUNT_UM_IDR
						FROM	(
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.CABANG
											, XY.CUST_CODE
											, XY.NO_PO_CUST
											, XY.STATUS_SO
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.UM_AMOUNT_IDR)
												ELSE
													(((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_UM_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														CASE WHEN XY.SHIP_DATE_ADJ < GETDATE() THEN	CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.SHIP_DATE_ADJ	END
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	SH.[No_] AS NO_SO
														,	CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																	END
																END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Order Date] AS ORDER_DATE
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[External Document No_] AS NO_PO_CUST
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Line]
																		WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR

																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR

																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [AUTOJAYA].[dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.CABANG
											, XY.CUST_CODE
											, XY.NO_PO_CUST
											, XY.STATUS_SO
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.UM_AMOUNT_IDR)
												ELSE
													(((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_UM_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														CASE WHEN XY.SHIP_DATE_ADJ < GETDATE() THEN	CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.SHIP_DATE_ADJ	END
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	SH.[No_] AS NO_SO
														,	CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																	END
																END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Order Date] AS ORDER_DATE
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[External Document No_] AS NO_PO_CUST
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Line]
																		WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR

																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR

																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [AUTOJAYA].[dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						WHERE
								(
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XXX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XXX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4)
									)
								) AND
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
						GROUP BY XXX.CUST_CODE
					) OSO
			GROUP BY OSO.CUST_NO
			UNION ALL
			SELECT	OSO.CUST_NO
					, 0 AS AMOUNT_SR
					, 0 AS AMOUNT_UM
					, SUM(OSO.AMOUNT_IDR) AS AMOUNT_OSO
			FROM	(
						SELECT	'OS2' AS GROUP_ITEM_CAT
								,'Outstanding SO' AS ITEM_CAT
								, XXX.CUST_CODE AS CUST_NO
								, XXX.CABANG
								, XXX.AMOUNT_IDR
						FROM	(
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.CABANG
											, XY.CUST_CODE
											, XY.NO_PO_CUST
											, XY.STATUS_SO
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														CASE WHEN XY.SHIP_DATE_ADJ < GETDATE() THEN	CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.SHIP_DATE_ADJ	END
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, SH.[No_] AS NO_SO
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Line]
																		WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [AUTOJAYA].[dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [AUTOJAYA].[dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.CABANG
											, XY.CUST_CODE
											, XY.NO_PO_CUST
											, XY.STATUS_SO
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														CASE WHEN XY.SHIP_DATE_ADJ < GETDATE() THEN	CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.SHIP_DATE_ADJ	END
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, SH.[No_] AS NO_SO
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Line]
																		WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [AUTOJAYA].[dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [AUTOJAYA].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [AUTOJAYA].[dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [AUTOJAYA].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						WHERE
								(
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XXX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XXX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4)
									)
								) AND
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
					) OSO
			GROUP BY OSO.CUST_NO
		) SUO
GROUP BY SUO.CUST_NO
		) SUOX
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Customer] CUS ON CUS.[No_] = SUOX.CUST_GROUP
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = CUS.[Salesperson Code]
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Customer] CUSO ON CUSO.[No_] = SUOX.CUST_NO
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Salesperson_Purchaser] SLSO ON SLSO.[Code] = CUSO.[Salesperson Code]
LEFT JOIN [AUTOJAYA].[dbo].[AUTOJAYA$Responsibility Center] CABO ON CABO.[Code] = SLSO.[Global Dimension 1 Code]
LEFT JOIN	(
				SELECT	LOE.[New Value] AS CUST_NO
						,MAX([Date and Time]) AS TGL_CREATED
						,CAST( CONVERT(VARCHAR, MAX([Date and Time]), 101) AS DATETIME) AS TGL_CREATED_FILLTER
				FROM	(
							SELECT	[New Value], [Date and Time]
							FROM [AUTOJAYA].[dbo].[AUTOJAYA$Change Log Entry]
							WHERE	[Table No_] = 18
									AND [Type of Change] = 1
									AND [Field No_] = 1
							UNION ALL
							SELECT	[New Value], [Date and Time]
							FROM [AUTOJAYA].[dbo].[AUTOJAYA$Change Log Entry]
							WHERE	[Table No_] = 18
									AND [Type of Change] = 0
									AND [Field No_] = 1
						) LOE
				GROUP BY LOE.[New Value]
			) TGC ON TGC.CUST_NO = SUOX.CUST_GROUP
		) XOX
GROUP BY XOX.CUST_GROUP
		,XOX.SALES
		,XOX.CAB_CODE
		,XOX.CAB_NAME
		,XOX.CUST_NAME
		,XOX.CUST_GROUP_SORT
		,XOX.NEW_CUST]]>
	</queryString>
	<field name="CUST_GROUP" class="java.lang.String"/>
	<field name="SALES" class="java.lang.String"/>
	<field name="CAB_CODE" class="java.lang.String"/>
	<field name="CAB_NAME" class="java.lang.String"/>
	<field name="CUST_NAME" class="java.lang.String"/>
	<field name="CUST_GROUP_SORT" class="java.lang.Integer"/>
	<field name="NEW_CUST" class="java.lang.String"/>
	<field name="NO_URUT" class="java.lang.Long"/>
	<field name="AMOUNT_SR" class="java.math.BigDecimal"/>
	<field name="AMOUNT_UM" class="java.math.BigDecimal"/>
	<field name="AMOUNT_OSO" class="java.math.BigDecimal"/>
	<field name="AMOUNT_TOTAL" class="java.math.BigDecimal"/>
	<field name="PCG" class="java.math.BigDecimal"/>
	<sortField name="CAB_CODE"/>
	<sortField name="CUST_GROUP_SORT"/>
	<sortField name="AMOUNT_TOTAL" order="Descending"/>
	<sortField name="CUST_NAME"/>
	<variable name="AMOUNT_SR_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_SR}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_UM_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_UM}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_OSO_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_OSO}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_TOTAL_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_TOTAL}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_SR_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Cabang" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_SR}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_UM_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Cabang" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_UM}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_OSO_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Cabang" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_OSO}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_TOTAL_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Cabang" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_TOTAL}]]></variableExpression>
	</variable>
	<variable name="PCG_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Cabang" calculation="Sum">
		<variableExpression><![CDATA[$F{PCG}]]></variableExpression>
	</variable>
	<group name="Cabang">
		<groupExpression><![CDATA[$F{CAB_CODE}]]></groupExpression>
		<groupHeader>
			<band height="14">
				<textField isStretchWithOverflow="true" isBlankWhenNull="true">
					<reportElement x="0" y="0" width="100" height="14" isPrintWhenDetailOverflows="true" uuid="94422629-cbb2-4009-8ba1-866b6ceeb1e4"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{CAB_NAME}]]></textFieldExpression>
				</textField>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="14">
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="485" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="c1643233-9a0e-4f66-aaff-7111397121d5"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_SR_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="565" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="87ea9439-ed21-44e3-b923-55624c06d127"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_UM_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="645" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="69cd5927-5523-441d-a87a-f0ec52ddbdc4"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_OSO_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="725" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="5e185d2a-99e0-4051-b1d5-ee118e5c54c1"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_TOTAL_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="805" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="0f4d8de9-3b6d-4b40-947f-2e9ce34edc64"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{PCG_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="185" y="0" width="250" height="14" uuid="6741fa2a-e273-4e31-9d99-59de348152da"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[Total per Cabang]]></text>
				</staticText>
				<staticText>
					<reportElement x="135" y="0" width="50" height="14" uuid="91a690ba-b348-4b5b-a1f7-b7013b5bcf70"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="100" y="0" width="35" height="14" uuid="736374bb-04f0-4164-a861-3a0914407317"/>
					<textElement textAlignment="Center">
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="0" width="100" height="14" uuid="b250f323-3727-4bd5-b744-b4cd5954bcf0"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="435" y="0" width="50" height="14" uuid="6990106c-8e3f-4d0a-8192-3670fdcd0801"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupFooter>
	</group>
	<title>
		<band height="112">
			<staticText>
				<reportElement x="185" y="98" width="250" height="14" uuid="a45ee7fe-af46-4c37-956e-47d209078a0e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Customer]]></text>
			</staticText>
			<staticText>
				<reportElement x="485" y="98" width="80" height="14" uuid="41949fda-5e83-4d94-be67-dac0a892bd14"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<text><![CDATA[Sales Revenue]]></text>
			</staticText>
			<staticText>
				<reportElement x="565" y="98" width="80" height="14" uuid="dcaca230-7619-4d1e-9f41-755a24e16b53"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<text><![CDATA[Uang Muka*]]></text>
			</staticText>
			<staticText>
				<reportElement x="645" y="98" width="80" height="14" uuid="8494c46c-fceb-4600-9944-13908698d92e"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<text><![CDATA[Outstanding SO*]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="28" width="250" height="14" uuid="15029370-8348-447f-9df8-595fe0cf9f42"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Dicetak Pada :]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="14" width="250" height="14" uuid="df54b1d8-5495-479a-9f0a-6a805a169451"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Periode :]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy">
				<reportElement x="485" y="14" width="80" height="14" uuid="d8a0f098-b4df-41ca-a855-c9533aa546c4"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglInvFrom}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="185" y="0" width="250" height="14" uuid="dc128852-8188-4812-a760-0d03d19a595c"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04057) Sales Revenue by Customer]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="485" y="28" width="240" height="14" uuid="d3bb6358-bf85-48d1-b55e-cf588ffd1a0a"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="565" y="14" width="80" height="14" uuid="64066e74-85b3-4522-ad8a-78901c892c61"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[S/D]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy">
				<reportElement x="645" y="14" width="80" height="14" uuid="abccbf47-37a4-4ca5-9074-9fe87212c145"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglInvTo}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="725" y="98" width="80" height="14" uuid="8ba3cb6c-b4aa-4cef-8bd5-91be5d1a986d"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<text><![CDATA[Total]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="42" width="250" height="14" uuid="d31a1a79-ccba-4d2c-a464-352dceba088d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="56" width="250" height="14" uuid="f5e1005c-fa64-4c9a-855a-bedbf050eba6"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Note :]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="70" width="250" height="14" uuid="79784e83-806e-49fe-a3e8-68af10a13a6f"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[* Uang Muka dan Oustanding SO --> as per Today]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="84" width="250" height="14" uuid="373a31ab-e55d-40bc-af02-e0fd1cbd64b8"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="435" y="98" width="50" height="14" uuid="cfb5cd89-1b4b-4dfd-b16b-145f628a0222"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Sales]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="98" width="100" height="14" uuid="94544382-3059-4510-8814-bb216a062742"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Cabang]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="84" width="100" height="14" uuid="ced3bfa7-60bf-446a-a77f-fa505ee6f133"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="70" width="100" height="14" uuid="54650bf1-fb60-493a-9891-dc65c624e951"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="100" height="14" uuid="56c96457-a180-4524-af04-d2897fc978e2"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="42" width="100" height="14" uuid="d58ec5f2-7af2-4b7f-848a-7aa1bb22215c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="28" width="100" height="14" uuid="a9dd9924-880c-463c-9012-fb3732a95f6c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="100" height="14" uuid="e322963d-e490-49c0-af2f-5a1ef8faf91b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="0" width="100" height="14" uuid="76865023-eb89-401f-a17c-45f46ae339df"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="435" y="14" width="50" height="14" uuid="8677f559-bc14-4291-919f-4dba1e32503d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="435" y="28" width="50" height="14" uuid="7acc47bc-32d1-4d35-8fb9-260ffd0a00ec"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="98" width="50" height="14" uuid="751e9356-52ed-4241-94d9-f9aefd6a7f15"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[New]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="98" width="35" height="14" uuid="d3160adc-9d50-478a-94a4-3004adbd5fc1"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[No.]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="14" width="50" height="14" uuid="7bd5f77d-532d-45bd-bdeb-8669fd93453e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="14" width="35" height="14" uuid="394cb7b1-7fb3-4ae4-987a-2351ec1f95d7"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="0" width="50" height="14" uuid="3ae7c326-7c9a-4bdb-b596-7e2438f65931"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="0" width="35" height="14" uuid="acda395b-b9a3-43fd-9429-c031031c565d"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="28" width="35" height="14" uuid="29513383-312a-49c7-bf9c-1b20bcce3862"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="42" width="50" height="14" uuid="7915e265-0a72-4181-b3aa-de03925ece5c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="42" width="35" height="14" uuid="be087430-8227-4a5f-a324-0b038a8101c6"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="28" width="50" height="14" uuid="d5ae0872-d30c-4400-af12-b0c3d941ae00"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="56" width="35" height="14" uuid="05816967-71b5-48a1-881d-d6ecb2765120"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="70" width="50" height="14" uuid="5f61f0b7-a1f8-417c-981b-b400f88bab84"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="70" width="35" height="14" uuid="e6e20610-4e0b-4d4e-9f50-37290fc39294"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="56" width="50" height="14" uuid="1db28c76-4a1c-474e-8397-c286a6726290"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="84" width="50" height="14" uuid="7bcf93d9-cf8a-415f-86bd-b3d6cd1c8cb2"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="84" width="35" height="14" uuid="c64d1f4f-14d0-43e4-872a-262d563febf3"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</title>
	<detail>
		<band height="14">
			<textField>
				<reportElement x="185" y="0" width="250" height="14" uuid="e8663322-7a03-4abc-9975-dac906959f34"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{CUST_NAME}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="485" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="a3285f61-3f75-492e-9aff-99c877b01745"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_SR}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="565" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="ff2724a2-db37-4519-84e4-e19099ed6c25"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_UM}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="645" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="5db44ad2-c8f3-464f-8153-06605f829699"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_OSO}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="725" y="0" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="806d1b3b-3bd2-411a-941d-f81e67814abc"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_TOTAL}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" isBlankWhenNull="true">
				<reportElement x="435" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="ac3e5097-3ac9-491f-807a-568d244f0cd1"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{SALES}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="0" width="100" height="14" uuid="44f497a5-7a6b-4287-9649-b52be9ff92bf"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="100" y="0" width="35" height="14" isPrintWhenDetailOverflows="true" uuid="112d9d3c-b56d-4c41-9b66-d5c6a5a08ac6"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{NO_URUT}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="805" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="463cc1ca-4a88-4e60-8d42-a00108318eb9"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{PCG}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="135" y="0" width="50" height="14" uuid="6424fece-f778-435a-949d-0f8b21a34ab0"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{NEW_CUST}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<summary>
		<band height="28">
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="485" y="14" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="8e97e09c-9088-4aed-b9fb-ba46d7719494"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_SR_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="565" y="14" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="bfc3f08d-0d2a-43ae-b790-a2cac27e9dd7"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_UM_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="645" y="14" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="5f11bc23-3924-49df-81a3-86d869cb17cd"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_OSO_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="725" y="14" width="80" height="14" isPrintWhenDetailOverflows="true" uuid="ece67cfc-dd9d-4c00-a977-651fa30140e0"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_TOTAL_1}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="0" width="100" height="14" uuid="8a7fea18-2aad-4a4f-ba39-fa36e3b95e3a"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="100" height="14" uuid="816e9585-e13a-46e2-9939-fcb5f6e18870"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[GRAND TOTAL]]></text>
			</staticText>
			<staticText>
				<reportElement x="185" y="14" width="250" height="14" uuid="9192d5ac-f337-44e4-ab9a-afd70e38ab23"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="135" y="14" width="50" height="14" uuid="2ae3601a-49e5-48b2-bdcd-d37fc4a4774b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="435" y="14" width="50" height="14" uuid="aefa72fc-6fb9-41cb-a3db-af634eb09b9d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="14" width="35" height="14" uuid="06d9e1fc-1d72-4471-b313-ead81ef0afdd"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</summary>
	<noData>
		<band height="145">
			<staticText>
				<reportElement x="0" y="70" width="250" height="14" uuid="bc2ea4e6-15fb-492b-9d85-73b6cceae0f5"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[TIDAK ADA DATA SESUAI KRITERIA]]></text>
			</staticText>
		</band>
	</noData>
</jasperReport>
