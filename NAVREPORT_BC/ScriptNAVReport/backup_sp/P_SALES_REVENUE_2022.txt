USE [NavBI]
GO
/****** Object:  StoredProcedure [dbo].[P_SALES_REVENUE_2022]    Script Date: 07-02-2023 4:59:27 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[P_SALES_REVENUE_2022] 
	@ProsesId  nvarchar(100) ,   
	@TglFrom  datetime , 
	@TglUpto  datetime , 
	@Company  nvarchar(15) ,
	@Action  nvarchar(15)
AS   
BEGIN
	DECLARE @TglInvFrom DATETIME = CAST(@TglFrom AS DATETIME);
	DECLARE @TglInvUpto DATETIME = CAST(@TglUpto AS DATETIME);
	--
	IF @Action = 'SR'
	BEGIN
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES 
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
							,X.ITEM_CAT
							,X.BRANCHES 
							,X.SALESMAN
							,SUM(X.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'SALES ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
							) X
					GROUP BY X.ITEM_CAT, X.BRANCHES, X.SALESMAN
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--
	--
	IF @Action IN ('SR2', 'SR3', 'SR4') 
	BEGIN
		--
		-- Insert Target Sales
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	0 AS GROUP_NO
							,	CASE WHEN DATEPART(month, @TglInvUpto) IN (1,2,3,4) THEN
									'Target - Semester I ' + CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								ELSE
									'Target - '+CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								END AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, '' AS ITEM_CAT
							, '' AS BRANCHES
							, SUM(TGT.AMT_TARGET) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CAST(CMP.[Description] AS DECIMAL(38,20)) AS AMT_TARGET
										,	CASE WHEN	SUBSTRING(CMP.[No_],1,4) = SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) THEN
												CASE WHEN (DATEPART(month, @TglInvUpto) IN (1,2,3,4)) THEN
													CASE WHEN SUBSTRING(CMP.[No_],9,2) = 'S1' THEN
														'Y'
													ELSE
														'N'
													END
												ELSE
													'Y'
												END
											ELSE
												'N'
											END AS TARGET_VALID
								FROM [ACS].[dbo].[AUTOJAYA$Campaign]  CMP
								WHERE	CMP.[Description] <> ''
										AND CMP.[Salesperson Code] = ''
							) TGT
					WHERE TGT.TARGET_VALID = 'Y'
					UNION ALL
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,XX.GROUP_ITEM_CAT
							,XX.ITEM_CAT
							,XX.BRANCHES 
							, SUM(XX.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN X.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN X.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN X.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN X.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN X.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN X.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,X.BRANCHES 
										,X.AMOUNT

								FROM (
								SELECT	'SALES ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								) X
							) XX
					GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT, XX.BRANCHES 
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SR5'
	BEGIN
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, XX.ITEM_CAT
							, XX.BRANCHES
							, SUM(XX.AMOUNT) AS AMOUNT	
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	
										CASE WHEN X.ITEM_CAT = 'HW01' THEN
											CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
													WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
													ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
											END
										ELSE
											'4. EBS & PS'
										END AS ITEM_CAT
										,X.BRANCHES
										,X.AMOUNT
								FROM	(
											SELECT	'SALES ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	DIMS.BRANCHES
																,DIMS.ITEM_CAT
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, GLE.[Amount]
														FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Document No_] <> '9SIAT200197'
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES ALL' AS NOTE
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> ''AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,DIMS.PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
										) X
							) XX
					GROUP BY XX.ITEM_CAT, XX.BRANCHES
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
					FROM	(
								SELECT	'PS' AS GROUP_ITEM_CAT
										,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
												CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.PRODUCT
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT	SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				) SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT	SAL.[Document No_]
																								, SAL.[Shortcut Dimension 2 Code]
																								, DIMS.PRODUCT
																								, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY OSO.ITEM_CAT, OSO.BRANCHES, OSO.Q_OUT_SO, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SRF'
	BEGIN
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.GROUP_NO, BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'SALES REVENUE' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, SUM(X.AMOUNT) AS AMOUNT
							, X.Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(				
								SELECT	'SALES ALL' AS NOTE
										,GLL.BRANCHES
										,GLL.ITEM_CAT
										,GLL.SALESMAN
										,GLL.Q_OUT_SO
										,SUM(GLL.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,CASE	WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM'
															WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'TJH'
															ELSE DIMS.SALESMAN END AS SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Document No_], GLE.[Posting Date]
										) GLL
								GROUP BY GLL.BRANCHES, GLL.ITEM_CAT, GLL.SALESMAN, GLL.Q_OUT_SO
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, GLE.[Amount] * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													,GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY GLE.[Posting Date]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY GLE.[Posting Date]
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
							) X
					GROUP BY X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, X.AMOUNT
							, X.Q_OUT_SO
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'OUTSTANDING SO' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, OSO.SALESMAN
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.SALESMAN
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.SALESMAN
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE	XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.SALESMAN
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SRF-P'
	BEGIN
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
			SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY TTLT.GROUP_NO, TTLT.GROUP_DESC, TTLT.ITEM_CAT, TTLT.BRANCHES, TTLT.SALESMAN) AS TEMP08_ID
					, @Action AS MODE
					, @ProsesId AS PROSES_ID
					, TTLT.GROUP_NO
					, TTLT.GROUP_DESC
					, '' AS GROUP_ITEM_CAT
					, TTLT.ITEM_CAT
					, TTLT.BRANCHES
					, TTLT.SALESMAN
					, TTLT.AMOUNT
					, 0 AS Q_OUT_SO
					, 0 AS YEAR_OUT_SO
			FROM	(
			SELECT	
					TTL.GROUP_NO
					, TTL.GROUP_DESC
					, TTL.PILLAR AS ITEM_CAT
					, TTL.CABANG AS BRANCHES
					, TTL.SALESMAN
					, SUM(TTL.AMOUNT) AS AMOUNT
			FROM	(
			-- SELES REVENUE
			SELECT	1 AS GROUP_NO
					, 'SALES REVENUE' AS GROUP_DESC	
					, XX.PILLAR 
					, CAB.[Name] AS CABANG
					, XX.SALESMAN
					,(SUM(XX.AMOUNT)) AS AMOUNT
			FROM	(
						SELECT
								CASE WHEN X.ITEM_CAT = 'HW01' THEN
									CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2'
											WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3'
											ELSE  '1'
									END
								ELSE
									'4'
								END AS PILLAR
								,X.SALESMAN
								,X.BRANCHES
								,X.AMOUNT
						FROM	(
									SELECT	'SALES ALL' AS NOTE
											,DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,CASE	WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM'
													WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'TJH'
													ELSE DIMS.SALESMAN END AS SALESMAN
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
											GLE.[G_L Account No_] <> '400.110.04' AND
											DIMS.ITEM_CAT <> '' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT,  GLE.[Document No_] 
									UNION ALL
									SELECT	'Sales - LAINNYA' AS NOTE
											,'10' BRANCHES
											,'HW01' AS ITEM_CAT
											,'OFC' AS SALESMAN
											,'XXX' AS PRODUCT
											,SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.04' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
											,DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
											GLE.[G_L Account No_] <> '400.110.04' AND
											DIMS.ITEM_CAT <> '' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
											,'10' BRANCHES
											,'HW01' AS ITEM_CAT
											,'OFC' AS SALESMAN
											,'XXX' AS PRODUCT
											,SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.04' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	DIMS.BRANCHES
														,DIMS.ITEM_CAT
														,DIMS.SALESMAN
														,DIMS.PRODUCT
														,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
														,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
														,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
														, GLE.[Amount]
												FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
												LEFT JOIN	(
																SELECT	DIM.DIM_ID
																		,MAX(DIM.BRANCHES) AS BRANCHES
																		,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																		,MAX(DIM.SALESMAN) AS SALESMAN
																		,MAX(DIM.PRODUCT) AS PRODUCT
																FROM	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																					,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																					,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																			FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																		) DIM
																GROUP BY DIM.DIM_ID
															) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
												WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
														AND GLE.[Document No_] <> '9SIAT200197'
														AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
														,'(-/+) Others Management Adjustment' AS SALES_TITLE2
														,'SLS-0303' AS SORT_SLS
														, DIMS.BRANCHES
														, DIMS.ITEM_CAT
														, DIMS.SALESMAN
														, DIMS.PRODUCT
														, GLE.[Amount]
												FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
												LEFT JOIN	(
																SELECT	DIM.DIM_ID
																		,MAX(DIM.BRANCHES) AS BRANCHES
																		,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																		,MAX(DIM.SALESMAN) AS SALESMAN
																		,MAX(DIM.PRODUCT) AS PRODUCT
																FROM	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																					,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																					,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																			FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																		) DIM
																GROUP BY DIM.DIM_ID
															) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
												WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
														AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES ALL' AS NOTE
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											, SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
											GLE.[G_L Account No_] <> '400.110.04' AND
											DIMS.ITEM_CAT <> ''AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
									UNION ALL
									SELECT	'Sales - LAINNYA' AS NOTE
											,'10' BRANCHES
											,'HW01' AS ITEM_CAT
											,'OFC' AS SALESMAN
											,'XXX' AS PRODUCT
											, SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.04' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
											,DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											, SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
											GLE.[G_L Account No_] <> '400.110.04' AND
											DIMS.ITEM_CAT <> '' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
											,'10' BRANCHES
											,'HW01' AS ITEM_CAT
											,'OFC' AS SALESMAN
											,'XXX' AS PRODUCT
											, SUM(GLE.[Amount]) * -1 AS AMOUNT
									FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.04' AND
											(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
														,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
														,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
														, DIMS.BRANCHES
														, DIMS.ITEM_CAT
														, DIMS.SALESMAN
														, DIMS.PRODUCT
														, GLE.[Amount]
												FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
												LEFT JOIN	(
																SELECT	DIM.DIM_ID
																		,MAX(DIM.BRANCHES) AS BRANCHES
																		,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																		,MAX(DIM.SALESMAN) AS SALESMAN
																		,MAX(DIM.PRODUCT) AS PRODUCT
																FROM	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																					,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																					,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																			FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																		) DIM
																GROUP BY DIM.DIM_ID
															) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
												WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
														AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
														,'(-/+) Others Management Adjustment' AS SALES_TITLE2
														,'SLS-0303' AS SORT_SLS
														, DIMS.BRANCHES
														, DIMS.ITEM_CAT
														, DIMS.SALESMAN
														, DIMS.PRODUCT
														, GLE.[Amount]
												FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
												LEFT JOIN	(
																SELECT	DIM.DIM_ID
																		,MAX(DIM.BRANCHES) AS BRANCHES
																		,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																		,MAX(DIM.SALESMAN) AS SALESMAN
																		,MAX(DIM.PRODUCT) AS PRODUCT
																FROM	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																					,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																					,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																			FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																		) DIM
																GROUP BY DIM.DIM_ID
															) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
												WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
														AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
								) X
					) XX
			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = XX.BRANCHES
			GROUP BY XX.PILLAR
					, CAB.[Name]
					, XX.SALESMAN
			UNION ALL
			-- OUT SO
			SELECT	3	 AS GROUP_NO
					, 'OUTSTANDING SO' AS GROUP_DESC	
					, CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
							CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2'
									WHEN XAX.PRODUCT IN ('H011', 'H022', 'H023', 'H024', 'H028') THEN '3'
									ELSE  '1'
							END
						ELSE
							'4'
						END AS PILLAR
					, XAX.CABANG
					, XAX.SALESMAN
					, XAX.AMOUNT_IDR AS AMOUNT
			FROM	(
						SELECT	XXX.ITEM_CATEGORY
								, XXX.PRODUCT
								, XXX.CABANG
								, XXX.SALESMAN
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										XXX.AMOUNT_IDR
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
											ELSE
												ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
											END
										ELSE
											XXX.AMOUNT_IDR
										END
									END AS AMOUNT_IDR
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												XOX.EST_REALISASI
											ELSE
												CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
														ELSE  XXX.EST_REALISASI
												END
											END
										ELSE
											XXX.EST_REALISASI
										END
									END AS EST_REALISASI
						FROM	(
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.SALESMAN
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Salesperson Code] AS SALESMAN
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT	SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																					ELSE
																					SAL.[Amount]
																					END AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															) SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT SAL.[Document No_]
																		, SAL.[Shortcut Dimension 2 Code]
																		, DIMS.PRODUCT
																		, SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.SALESMAN
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Salesperson Code] AS SALESMAN
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																					ELSE
																					SAL.[Amount]
																					END AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT	SAL.[Document No_]
																			, SAL.[Shortcut Dimension 2 Code]
																			, DIMS.PRODUCT
																			, SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						LEFT JOIN	(
										SELECT T01.[NO_SO]
												,T01.[JENIS_PAYMENT]
												,T01.[QTY]
												,T01.[EST_REALISASI]
												,T02.[ADD_NUM]
										FROM [NavBI].[dbo].[T01_SO_ADJ] T01
										LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
									) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
						WHERE
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001')AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
					) XAX
			WHERE	(
						(
							SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
							SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
						)
							OR
						(
							SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
							SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
						)
					)
					) TTL
		GROUP BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.PILLAR , TTL.CABANG, TTL.SALESMAN
					) TTLT;
			--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SRCS'
	BEGIN
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.ITEM_CAT, TTL.BRANCHES, TTL.SALESMAN) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, TTL.GROUP_NO
				, TTL.GROUP_DESC
				, TTL.GROUP_ITEM_CAT
				, TTL.ITEM_CAT
				, TTL.BRANCHES
				, TTL.SALESMAN
				, SUM(TTL.AMOUNT) AS AMOUNT
				, 0 AS Q_OUT_SO
				, 0 AS YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'SALES REVENUE' AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							,X.CUST_NO AS ITEM_CAT
							,X.BRANCHES
							,X.SALESMAN
							,SUM(X.AMOUNT) AS AMOUNT
					FROM	(
								SELECT	'SALES ALL' AS NOTE
										,	CASE WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'RAPP001'
											ELSE
												CASE	WHEN GLE.[Source No_] IN ('AUJA001', 'AUJA002', 'SOPE001') THEN 'INTERCOY' 
														ELSE GLE.[Source No_] END
												END  AS CUST_NO
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,CASE	WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM'
												WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'TJH'
												ELSE DIMS.SALESMAN END AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Source No_], GLE.[Document No_]
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY GLE.[Source No_]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.CUSTOMER AS CUST_NO
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
														,MAX(DIM.CUSTOMER) AS CUSTOMER
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN,DIMS.CUSTOMER
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, 'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										,CASE WHEN GLE.[Source No_] IN ('AUJA001', 'AUJA002', 'SOPE001') THEN 'INTERCOY' ELSE GLE.[Source No_] END  AS CUST_NO
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Source No_]
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.CUSTOMER AS CUST_NO
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
														,MAX(CUSTOMER) AS CUSTOMER
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	,CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END AS CUSTOMER
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.CUSTOMER
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >=@TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
							) X
					GROUP BY X.CUST_NO, X.BRANCHES, X.SALESMAN
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'OUTSTANDING SO' AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, OSO.CUST_NO AS ITEM_CAT
							, OSO.BRANCHES
							, OSO.SALESMAN
							, SUM(OSO.AMOUNT_IDR) AS AMOUNT
					FROM	(
								SELECT	'OS2' AS GROUP_ITEM_CAT
										,'Outstanding SO' AS ITEM_CAT
										, XAX.CUST_CODE AS CUST_NO
										, XAX.BRANCHES
										, XAX.SALESMAN
										, XAX.AMOUNT_IDR
								FROM	(
											SELECT	XXX.CUST_CODE
													, XXX.BRANCHES
													, XXX.SALESMAN
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.BRANCHES
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.NO_PO_CUST
																, XY.STATUS_SO
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[No_] AS NO_SO
																			, ISNULL( SH.[Shortcut Dimension 1 Code], '10') AS BRANCHES
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_]
																				)SL2 ON SL2.[Document No_] = SH.[No_]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																						) Y
																					GROUP BY Y.NO_SO
																				) UM ON UM.NO_SO = SH.[No_]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.BRANCHES
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.NO_PO_CUST
																, XY.STATUS_SO
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[No_] AS NO_SO
																			, ISNULL( SH.[Shortcut Dimension 1 Code], '10') AS BRANCHES
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_]
																				)SL2 ON SL2.[Document No_] = SH.[No_]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																						) Y
																					GROUP BY Y.NO_SO
																				) UM ON UM.NO_SO = SH.[No_]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE
										(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
											)
										)
							) OSO
					GROUP BY OSO.CUST_NO, OSO.BRANCHES, OSO.SALESMAN
				) TTL
		GROUP BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.GROUP_ITEM_CAT, TTL.ITEM_CAT, TTL.BRANCHES, TTL.SALESMAN;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'DELETE' 
	BEGIN
		DELETE FROM [dbo].[TEMP08_SALES_REVENUE]
		WHERE [PROSES_ID] = @ProsesId;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'DELETE SR BERHASIL', GETDATE());
		RETURN  ;
	END;
END;
