USE [NavBI]
GO
/****** Object:  StoredProcedure [dbo].[P_SALES_REVENUE_2]    Script Date: 07-02-2023 4:58:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[P_SALES_REVENUE_2] 
	@ProsesId  nvarchar(100) ,   
	@TglFrom  datetime , 
	@TglUpto  datetime , 
	@Company  nvarchar(15) ,
	@Action  nvarchar(15)
AS   
BEGIN
	DECLARE @TglInvFrom DATETIME = CAST(@TglFrom AS DATETIME);
	DECLARE @TglInvUpto DATETIME = CAST(@TglUpto AS DATETIME);
	--Laporan Sales Revenue per Sales
	IF @Action = 'SR'
	BEGIN
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, 'XXX' AS PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				, 'XXXXX' AS CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES 
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							, CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
							, X.ITEM_CAT 
							, X.BRANCHES 
							, X.SALESMAN
							, SUM(X.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'SALES ALL' AS NOTE
										,GLE.BRANCHES  COLLATE Latin1_General_CI_AS AS BRANCHES
										,GLE.ITEM_CAT COLLATE Latin1_General_CI_AS AS ITEM_CAT 
										,GLE.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
										GLE.GLA_NO <> '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	IUM.PROSES_ID
																		,IUM.COMPANY
																		,IUM.ITEM_CAT
																		,IUM.BRANCHES
																		,IUM.SALESMAN
																		,IUM.TGL_UM
																		,IUM.NO_UM																					
																		,IUM.NO_SO
																		,IUM.AMOUNT
																FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																WHERE	IUM.PROSES_ID = @ProsesId AND
																		(IUM.TGL_UM >= @TglInvFrom AND IUM.TGL_UM<= @TglInvUpto) AND
																		(UCM.NO_CM IS NULL OR (UCM.NO_CM IS NOT NULL AND UCM.TGL_CM > @TglInvUpto ))																			
															) UM
													LEFT JOIN [dbo].[TEMP24_INVOICE_UM_FINAL] INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																										INV.COMPANY = UM.COMPANY AND 
																										INV.NO_SO = UM.NO_SO AND 
																										INV.BRANCHES = UM.BRANCHES AND 
																										INV.ITEM_CAT = UM.ITEM_CAT AND 
																										INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	ICM.ITEM_CAT
													,ICM.BRANCHES
													,ICM.SALESMAN
													,ICM.TGL_CM
													,ICM.NO_CM
													,ICM.AMOUNT
											FROM [dbo].[TEMP25_INVOICE_CM_UM] ICM
											LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_CM = ICM.NO_CM  AND UCM.COMPANY = ICM.COMPANY  AND UCM.PROSES_ID = ICM.PROSES_ID 
											WHERE	ICM.PROSES_ID = @ProsesId AND
													(ICM.TGL_CM >= @TglInvFrom AND ICM.TGL_CM <= @TglInvUpto) AND
													(UCM.TGL_UM < @TglInvFrom)			
										) CMLM
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	IUM.PROSES_ID
																			,IUM.COMPANY
																			,IUM.ITEM_CAT
																			,IUM.BRANCHES
																			,IUM.SALESMAN
																			,IUM.TGL_UM
																			,IUM.NO_UM																					
																			,IUM.NO_SO
																			,IUM.AMOUNT
																	FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																	LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																	WHERE	IUM.PROSES_ID = @ProsesId AND
																			(IUM.TGL_UM < @TglInvFrom) AND
																			(UCM.NO_CM IS NULL)
																) UM
														LEFT JOIN	(
																		SELECT	UMF.PROSES_ID 
																				, UMF.COMPANY 
																				, UMF.NO_SO 
																				, UMF.BRANCHES
																				, UMF.ITEM_CAT 
																				, UMF.SALESMAN 
																				, UMF.AMOUNT
																		FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																		WHERE	UMF.PROSES_ID = @ProsesId AND
																				(UMF.TGL_INV >= @TglInvFrom AND UMF.TGL_INV <= @TglInvUpto)													
																	) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																				INV.COMPANY = UM.COMPANY AND 
																				INV.NO_SO = UM.NO_SO AND 
																				INV.BRANCHES = UM.BRANCHES AND 
																				INV.ITEM_CAT = UM.ITEM_CAT AND 
																				INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO <> '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AUTOJAYA' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.DOCUMENT_NO <> '9SIAT200197' AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AJ-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SOLUSI' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SP-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
							) X
					GROUP BY X.ITEM_CAT, X.BRANCHES, X.SALESMAN 
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue Summary, Detail 1 dan Detail 2
	IF @Action IN ('SR2', 'SR3', 'SR4') 
	BEGIN
		--
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, 'XXX' AS PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				, 'XXXXX' AS CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- INSERT Adjustment Uang Muka
		INSERT INTO [dbo].[TEMP26_ADJ_UM](		
				PROSES_ID 
				, COMPANY
				, POSTING_DATE
				, DOCUMENT_NO 					
				, BRANCHES 
				, ITEM_CAT
				, SALESMAN
				, PRODUCT
				, CUST_NO
				, AMOUNT
		)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.POSTING_DATE
				,X.DOCUMENT_NO
				,X.BRANCHES
				,X.ITEM_CAT 
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				, 'XXXXX' AS CUST_NO
				,SUM(X.AMOUNT) AS AMOUNT
		FROM	(
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME' AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME'AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
				) X
		GROUP BY X.COMPANY, X.POSTING_DATE, X.DOCUMENT_NO, X.BRANCHES, X.ITEM_CAT, X.SALESMAN;		
		--
		-- INSERT Sales Renevue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	0 AS GROUP_NO
							,	CASE WHEN DATEPART(month, @TglInvUpto) IN (1,2,3,4) THEN
									'Target - Semester I ' + CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								ELSE
									'Target - '+CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								END AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, '' AS ITEM_CAT
							, '' AS BRANCHES
							, SUM(TGT.AMT_TARGET) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CAST(CMP.[Description] AS DECIMAL(38,20)) AS AMT_TARGET
										,	CASE WHEN	SUBSTRING(CMP.[No_],1,4) = SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) THEN
												CASE WHEN (DATEPART(month, @TglInvUpto) IN (1,2,3,4)) THEN
													CASE WHEN SUBSTRING(CMP.[No_],9,2) = 'S1' THEN
														'Y'
													ELSE
														'N'
													END
												ELSE
													'Y'
												END
											ELSE
												'N'
											END AS TARGET_VALID
								FROM [ACS].[dbo].[AUTOJAYA$Campaign]  CMP
								WHERE	CMP.[Description] <> ''
										AND CMP.[Salesperson Code] = ''
							) TGT
					WHERE TGT.TARGET_VALID = 'Y'
					UNION ALL
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,XX.GROUP_ITEM_CAT
							,XX.ITEM_CAT
							,XX.BRANCHES 
							, SUM(XX.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN X.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN X.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN X.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN X.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN X.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN X.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,X.BRANCHES 
										,X.AMOUNT
								FROM	(
											SELECT	'SALES ALL' AS NOTE
													,GLE.BRANCHES  COLLATE Latin1_General_CI_AS AS BRANCHES
													,GLE.ITEM_CAT COLLATE Latin1_General_CI_AS AS ITEM_CAT 
													,GLE.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO = '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
											UNION ALL										
											SELECT	'(-) Accured Sales Current Year' AS NOTE
													,ASCY.BRANCHES COLLATE Latin1_General_CI_AS as BRANCHES
													,ASCY.ITEM_CAT COLLATE Latin1_General_CI_AS as ITEM_CAT
													,ASCY.SALESMAN COLLATE Latin1_General_CI_AS as SALESMAN
													,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
											FROM (
													SELECT	OUM.ITEM_CAT
															,OUM.BRANCHES
															,OUM.SALESMAN
															,OUM.AMOUNT
													FROM	(
																SELECT	UM.ITEM_CAT
																		,UM.BRANCHES
																		,UM.SALESMAN
																		,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																				CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																					SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				END
																			END AS AMOUNT
																FROM	(
																			SELECT	IUM.PROSES_ID
																					,IUM.COMPANY
																					,IUM.ITEM_CAT
																					,IUM.BRANCHES
																					,IUM.SALESMAN
																					,IUM.TGL_UM
																					,IUM.NO_UM																					
																					,IUM.NO_SO
																					,IUM.AMOUNT
																			FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																			LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																			WHERE	IUM.PROSES_ID = @ProsesId AND
																					(IUM.TGL_UM >= @TglInvFrom AND IUM.TGL_UM<= @TglInvUpto) AND
																					(UCM.NO_CM IS NULL OR (UCM.NO_CM IS NOT NULL AND UCM.TGL_CM > @TglInvUpto ))																			
																		) UM
																LEFT JOIN [dbo].[TEMP24_INVOICE_UM_FINAL] INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																													INV.COMPANY = UM.COMPANY AND 
																													INV.NO_SO = UM.NO_SO AND 
																													INV.BRANCHES = UM.BRANCHES AND 
																													INV.ITEM_CAT = UM.ITEM_CAT AND 
																													INV.SALESMAN = UM.SALESMAN
															) OUM
													WHERE OUM.AMOUNT > 0
													) ASCY
											GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN											
											UNION ALL											
											SELECT
													'(-) Accured Sales Current Year' AS NOTE
													,CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
											FROM	(
														SELECT	ICM.ITEM_CAT
																,ICM.BRANCHES
																,ICM.SALESMAN
																,ICM.TGL_CM
																,ICM.NO_CM
																,ICM.AMOUNT
														FROM [dbo].[TEMP25_INVOICE_CM_UM] ICM
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_CM = ICM.NO_CM  AND UCM.COMPANY = ICM.COMPANY  AND UCM.PROSES_ID = ICM.PROSES_ID 
														WHERE	ICM.PROSES_ID = @ProsesId AND
																(ICM.TGL_CM >= @TglInvFrom AND ICM.TGL_CM <= @TglInvUpto) AND
																(UCM.TGL_UM < @TglInvFrom)			
													) CMLM
											GROUP BY CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
											UNION ALL
											SELECT	'(+) Accured Sales Previous Year' AS NOTE
													,ASPY.BRANCHES
													,ASPY.ITEM_CAT
													,ASPY.SALESMAN
													,SUM(ASPY.AMOUNT)  AS AMOUNT
											FROM	(
														SELECT	OUM.ITEM_CAT
																,OUM.BRANCHES
																,OUM.SALESMAN
																,OUM.AMOUNT
														FROM	(
																	SELECT	UM.ITEM_CAT
																			,UM.BRANCHES
																			,UM.SALESMAN
																			,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																					CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																						UM.AMOUNT 
																					ELSE 
																						--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																						--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																						--ELSE
																							ISNULL(INV.AMOUNT,0)
																						--END
																					END
																				END AS AMOUNT
																	FROM	(
																				SELECT	IUM.PROSES_ID
																						,IUM.COMPANY
																						,IUM.ITEM_CAT
																						,IUM.BRANCHES
																						,IUM.SALESMAN
																						,IUM.TGL_UM
																						,IUM.NO_UM																					
																						,IUM.NO_SO
																						,IUM.AMOUNT
																				FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																				LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																				WHERE	IUM.PROSES_ID = @ProsesId AND
																						(IUM.TGL_UM < @TglInvFrom) AND
																						(UCM.NO_CM IS NULL)
																			) UM
																	LEFT JOIN	(
																					SELECT	UMF.PROSES_ID 
																							, UMF.COMPANY 
																							, UMF.NO_SO 
																							, UMF.BRANCHES
																							, UMF.ITEM_CAT 
																							, UMF.SALESMAN 
																							, UMF.AMOUNT
																					FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																					WHERE	UMF.PROSES_ID = @ProsesId AND
																							(UMF.TGL_INV >= @TglInvFrom AND UMF.TGL_INV <= @TglInvUpto)													
																				) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																							INV.COMPANY = UM.COMPANY AND 
																							INV.NO_SO = UM.NO_SO AND 
																							INV.BRANCHES = UM.BRANCHES AND 
																							INV.ITEM_CAT = UM.ITEM_CAT AND 
																							INV.SALESMAN = UM.SALESMAN
																) OUM
														WHERE OUM.AMOUNT > 0
													) ASPY
											GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
													GLE.GLA_NO = '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	GLE.BRANCHES
																,GLE.ITEM_CAT
																,GLE.SALESMAN
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'AUTOJAYA' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.DOCUMENT_NO <> '9SIAT200197' AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, GLE.BRANCHES
																, GLE.ITEM_CAT
																, GLE.SALESMAN
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'AJ-ADJ' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	GLE.BRANCHES
																,GLE.ITEM_CAT
																,GLE.SALESMAN
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'SOLUSI' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, GLE.BRANCHES
																, GLE.ITEM_CAT
																, GLE.SALESMAN
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'SP-ADJ' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
										) X
							) XX
					GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT, XX.BRANCHES 
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'Uang Muka (as per Today)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'HW' AS GROUP_ITEM_CAT, 'HW01 - Hardware' AS ITEM_CAT, '10' AS BRANCHES, -6319706797.98 AS AMOUNT
								UNION ALL
								SELECT	'HW' AS GROUP_ITEM_CAT, 'HW01 - Hardware' AS ITEM_CAT, '15' AS BRANCHES, -283743000.00 AS AMOUNT
								UNION ALL
								SELECT	'HW' AS GROUP_ITEM_CAT, 'HW01 - Hardware' AS ITEM_CAT, '17' AS BRANCHES, -344799481.00 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS01 - 3rd Party Software' AS ITEM_CAT, '10' AS BRANCHES, 8307310.33 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS01 - 3rd Party Software' AS ITEM_CAT, '17' AS BRANCHES, 296534573.00 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS02 - Own Software' AS ITEM_CAT, '10' AS BRANCHES, 1.00 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS03 - Technology Service' AS ITEM_CAT, '10' AS BRANCHES, 932686.65 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS04 - Hardware Service' AS ITEM_CAT, '10' AS BRANCHES, 3932920393.53 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS04 - Hardware Service' AS ITEM_CAT, '15' AS BRANCHES, 283743000.00 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS04 - Hardware Service' AS ITEM_CAT, '17' AS BRANCHES, 48264908.00 AS AMOUNT
								UNION ALL
								SELECT	'PS' AS GROUP_ITEM_CAT, 'PS05 - Manage Service' AS ITEM_CAT, '10' AS BRANCHES, 2377546406.47 AS AMOUNT
								UNION ALL
								SELECT	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN UMX.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN UMX.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN UMX.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN UMX.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN UMX.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN UMX.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, UMX.BRANCHES
										, SUM(UMX.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP26_ADJ_UM] UMX	 
								WHERE UMX.PROSES_ID = @ProsesId	
								GROUP BY UMX.ITEM_CAT, UMX.BRANCHES						
								UNION ALL
								SELECT	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN OUM.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN OUM.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN OUM.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN OUM.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN OUM.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN OUM.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,OUM.BRANCHES
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(	
														SELECT	IUM.PROSES_ID
																,IUM.COMPANY
																,IUM.ITEM_CAT
																,IUM.BRANCHES
																,IUM.TGL_UM
																,IUM.NO_UM																					
																,IUM.NO_SO
																,IUM.AMOUNT
														FROM [dbo].[TEMP23_INVOICE_UM] IUM	
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
														WHERE	IUM.PROSES_ID = @ProsesId AND
																(
																	(@TglInvUpto <= GETDATE() AND IUM.TGL_UM <=  GETDATE()) OR
																	(@TglInvUpto > GETDATE() AND IUM.TGL_UM <=  @TglInvUpto)
																) AND
																(
																	UCM.NO_CM IS NULL OR
																	(
																		UCM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND UCM.TGL_CM >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND UCM.TGL_CM >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.ITEM_CAT
																	, SUM(UMF.AMOUNT) AS AMOUNT
															FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
															WHERE	UMF.PROSES_ID = @ProsesId AND
																	(
																		(@TglInvUpto <= GETDATE() AND UMF.TGL_INV <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND UMF.TGL_INV <=  @TglInvUpto)
																	)	
															GROUP BY 	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.ITEM_CAT 										
														) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																	INV.COMPANY = UM.COMPANY AND 
																	INV.NO_SO = UM.NO_SO AND 
																	INV.BRANCHES = UM.BRANCHES AND 
																	INV.ITEM_CAT = UM.ITEM_CAT											
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO COLLATE Latin1_General_CI_AS
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.ITEM_CAT, OUM.BRANCHES
							) OSO
					GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT, OSO.BRANCHES
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue 4 Pillar
	IF @Action = 'SR5'
	BEGIN
		--
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, X.PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
				,'XXXXX' AS CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- INSERT Adjustment Uang Muka
		INSERT INTO [dbo].[TEMP26_ADJ_UM](		
				PROSES_ID 
				, COMPANY
				, POSTING_DATE
				, DOCUMENT_NO 					
				, BRANCHES 
				, ITEM_CAT
				, SALESMAN
				, PRODUCT
				, CUST_NO
				, AMOUNT
		)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.POSTING_DATE
				,X.DOCUMENT_NO
				,X.BRANCHES
				,X.ITEM_CAT 
				,X.SALESMAN
				,X.PRODUCT
				,'XXXXX' AS CUST_NO
				,SUM(X.AMOUNT) AS AMOUNT
		FROM	(
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME' AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME'AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
				) X
		GROUP BY X.COMPANY, X.POSTING_DATE, X.DOCUMENT_NO, X.BRANCHES, X.ITEM_CAT, X.SALESMAN, X.PRODUCT;		
		--
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, XX.ITEM_CAT
							, XX.BRANCHES
							, SUM(XX.AMOUNT) AS AMOUNT	
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	
										CASE WHEN X.ITEM_CAT = 'HW01' THEN
											CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
													WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
													ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
											END
										ELSE
											'4. EBS & PS'
										END AS ITEM_CAT
										,X.BRANCHES
										,X.AMOUNT
								FROM	(
											SELECT	'SALES ALL' AS NOTE
													,GLE.BRANCHES  COLLATE Latin1_General_CI_AS AS BRANCHES
													,GLE.ITEM_CAT COLLATE Latin1_General_CI_AS AS ITEM_CAT 
													,GLE.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
													,GLE.PRODUCT COLLATE Latin1_General_CI_AS AS PRODUCT
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,GLE.PRODUCT
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO = '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT											
											UNION ALL
											SELECT	'(-) Accured Sales Current Year' AS NOTE
													,ASCY.BRANCHES COLLATE Latin1_General_CI_AS as BRANCHES
													,ASCY.ITEM_CAT COLLATE Latin1_General_CI_AS as ITEM_CAT
													,ASCY.SALESMAN COLLATE Latin1_General_CI_AS as SALESMAN
													,ASCY.PRODUCT COLLATE Latin1_General_CI_AS as PRODUCT
													,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
											FROM (
													SELECT	OUM.ITEM_CAT
															,OUM.BRANCHES
															,OUM.SALESMAN
															,OUM.PRODUCT
															,OUM.AMOUNT
													FROM	(
																SELECT	UM.ITEM_CAT
																		,UM.BRANCHES
																		,UM.SALESMAN
																		,UM.PRODUCT
																		,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																				CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																					SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				END
																			END AS AMOUNT
																FROM	(
																			SELECT	IUM.PROSES_ID
																					,IUM.COMPANY
																					,IUM.ITEM_CAT
																					,IUM.BRANCHES
																					,IUM.SALESMAN
																					,IUM.PRODUCT
																					,IUM.TGL_UM
																					,IUM.NO_UM																					
																					,IUM.NO_SO
																					,IUM.AMOUNT
																			FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																			LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																			WHERE	IUM.PROSES_ID = @ProsesId AND
																					(IUM.TGL_UM >= @TglInvFrom AND IUM.TGL_UM<= @TglInvUpto) AND
																					(UCM.NO_CM IS NULL OR (UCM.NO_CM IS NOT NULL AND UCM.TGL_CM > @TglInvUpto ))																			
																		) UM
																LEFT JOIN	(
																				SELECT	PROSES_ID 
																						,COMPANY 
																						,NO_SO 
																						,BRANCHES
																						,ITEM_CAT
																						,SALESMAN
																						,SUM(AMOUNT) AS AMOUNT
																				FROM [dbo].[TEMP24_INVOICE_UM_FINAL]																				
																				WHERE	PROSES_ID = @ProsesId
																				GROUP BY PROSES_ID 
																						,COMPANY 
																						,NO_SO 
																						,BRANCHES
																						,ITEM_CAT
																						,SALESMAN
																			) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																						INV.COMPANY = UM.COMPANY AND 
																						INV.NO_SO = UM.NO_SO AND 
																						INV.BRANCHES = UM.BRANCHES AND 
																						INV.ITEM_CAT = UM.ITEM_CAT AND 
																						INV.SALESMAN = UM.SALESMAN
															) OUM
													WHERE OUM.AMOUNT > 0
													) ASCY
											GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
											UNION ALL
											SELECT
													'(-) Accured Sales Current Year' AS NOTE
													,CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,CMLM.PRODUCT
													,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
											FROM	(
														SELECT	ICM.ITEM_CAT
																,ICM.BRANCHES
																,ICM.SALESMAN
																,ICM.PRODUCT
																,ICM.TGL_CM
																,ICM.NO_CM
																,ICM.AMOUNT
														FROM [dbo].[TEMP25_INVOICE_CM_UM] ICM
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_CM = ICM.NO_CM  AND UCM.COMPANY = ICM.COMPANY  AND UCM.PROSES_ID = ICM.PROSES_ID 
														WHERE	ICM.PROSES_ID = @ProsesId AND
																(ICM.TGL_CM >= @TglInvFrom AND ICM.TGL_CM <= @TglInvUpto) AND
																(UCM.TGL_UM < @TglInvFrom)			
													) CMLM
											GROUP BY CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,CMLM.PRODUCT
											UNION ALL
											SELECT	'(+) Accured Sales Previous Year' AS NOTE
													,ASPY.BRANCHES
													,ASPY.ITEM_CAT
													,ASPY.SALESMAN
													,ASPY.PRODUCT
													,SUM(ASPY.AMOUNT)  AS AMOUNT
											FROM	(
														SELECT	OUM.ITEM_CAT
																,OUM.BRANCHES
																,OUM.SALESMAN
																,OUM.PRODUCT
																,OUM.AMOUNT
														FROM	(
																	SELECT	UM.ITEM_CAT
																			,UM.BRANCHES
																			,UM.SALESMAN
																			,UM.PRODUCT
																			,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																					CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																						UM.AMOUNT 
																					ELSE 
																						--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																						--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																						--ELSE
																							ISNULL(INV.AMOUNT,0)
																						--END
																					END
																				END AS AMOUNT
																	FROM	(
																				SELECT	IUM.PROSES_ID
																						,IUM.COMPANY
																						,IUM.ITEM_CAT
																						,IUM.BRANCHES
																						,IUM.SALESMAN
																						,IUM.PRODUCT
																						,IUM.TGL_UM
																						,IUM.NO_UM																					
																						,IUM.NO_SO
																						,IUM.AMOUNT
																				FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																				LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																				WHERE	IUM.PROSES_ID = @ProsesId AND
																						(IUM.TGL_UM < @TglInvFrom) AND
																						(UCM.NO_CM IS NULL)
																			) UM
																	LEFT JOIN	(
																					SELECT	UMF.PROSES_ID 
																							, UMF.COMPANY 
																							, UMF.NO_SO 
																							, UMF.BRANCHES
																							, UMF.ITEM_CAT 
																							, UMF.SALESMAN 
																							, SUM(UMF.AMOUNT) AS AMOUNT
																					FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																					WHERE	UMF.PROSES_ID = @ProsesId AND
																							(UMF.TGL_INV >= @TglInvFrom AND UMF.TGL_INV <= @TglInvUpto)	
																					GROUP BY UMF.PROSES_ID 
																							, UMF.COMPANY 
																							, UMF.NO_SO 
																							, UMF.BRANCHES
																							, UMF.ITEM_CAT 
																							, UMF.SALESMAN 										
																				) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																							INV.COMPANY = UM.COMPANY AND 
																							INV.NO_SO = UM.NO_SO AND 
																							INV.BRANCHES = UM.BRANCHES AND 
																							INV.ITEM_CAT = UM.ITEM_CAT AND 
																							INV.SALESMAN = UM.SALESMAN
																) OUM
														WHERE OUM.AMOUNT > 0
													) ASPY
											GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,GLE.PRODUCT
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,GLE.PRODUCT
													,SUM(GLE.AMOUNT) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
													GLE.GLA_NO = '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
											GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SLC.PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	GLE.BRANCHES
																,GLE.ITEM_CAT
																,GLE.SALESMAN
																,GLE.PRODUCT
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'AUTOJAYA' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.DOCUMENT_NO <> '9SIAT200197' AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SLC.PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, GLE.BRANCHES
																, GLE.ITEM_CAT
																, GLE.SALESMAN
																, GLE.PRODUCT
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'AJ-ADJ' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SLC.PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	GLE.BRANCHES
																,GLE.ITEM_CAT
																,GLE.SALESMAN
																,GLE.PRODUCT
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'SOLUSI' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, SLC.PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, GLE.BRANCHES
																, GLE.ITEM_CAT
																, GLE.SALESMAN
																, GLE.PRODUCT
																, (GLE.AMOUNT * -1 ) AS AMOUNT
														FROM [dbo].[TEMP21_GL_ENTRY] GLE
														WHERE	GLE.PROSES_ID = @ProsesId AND
																GLE.COMPANY = 'SP-ADJ' AND
																GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
																GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT										
										) X
							) XX
					GROUP BY XX.ITEM_CAT, XX.BRANCHES
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'Uang Muka (as per Today)' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT  '10' AS BRANCHES, '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS ITEM_CAT, -7141854643.07 AS AMOUNT
								UNION ALL
								SELECT  '15' AS BRANCHES, '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS ITEM_CAT, -286386360.00 AS AMOUNT
								UNION ALL
								SELECT  '17' AS BRANCHES, '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS ITEM_CAT, 47313000.00 AS AMOUNT
								UNION ALL
								SELECT  '19' AS BRANCHES, '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS ITEM_CAT, 193600000.00  AS AMOUNT
								UNION ALL
								SELECT  '10' AS BRANCHES, '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS ITEM_CAT, -1356184715.69 AS AMOUNT
								UNION ALL
								SELECT  '15' AS BRANCHES, '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS ITEM_CAT, -2416320.00 AS AMOUNT
								UNION ALL
								SELECT  '17' AS BRANCHES, '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS ITEM_CAT, -329243881.00 AS AMOUNT
								UNION ALL
								SELECT  '19' AS BRANCHES, '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS ITEM_CAT, -193600000.00 AS AMOUNT
								UNION ALL
								SELECT  '10' AS BRANCHES, '3. ENTERPRISE SECURITY SYSTEMS' AS ITEM_CAT,  2178332560.78 AS AMOUNT
								UNION ALL
								SELECT  '15' AS BRANCHES, '3. ENTERPRISE SECURITY SYSTEMS' AS ITEM_CAT,  5059680.00 AS AMOUNT
								UNION ALL
								SELECT  '17' AS BRANCHES, '3. ENTERPRISE SECURITY SYSTEMS' AS ITEM_CAT,  -62868600.00 AS AMOUNT
								UNION ALL
								SELECT  '10' AS BRANCHES, '4. EBS & PS' AS ITEM_CAT,  6319706797.98 AS AMOUNT
								UNION ALL
								SELECT  '15' AS BRANCHES, '4. EBS & PS' AS ITEM_CAT,  283743000.00 AS AMOUNT
								UNION ALL
								SELECT  '17' AS BRANCHES, '4. EBS & PS' AS ITEM_CAT,  344799481.00 AS AMOUNT
								UNION ALL
								SELECT	UMX.BRANCHES
										,	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN
												CASE WHEN UMX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN UMX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										, SUM(UMX.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP26_ADJ_UM] UMX	 
								WHERE UMX.PROSES_ID = @ProsesId	
								GROUP BY UMX.ITEM_CAT, UMX.BRANCHES, UMX.PRODUCT				
								UNION ALL
								SELECT	OUM.BRANCHES
										,	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN
												CASE WHEN OUM.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN OUM.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.PRODUCT
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(	
														SELECT	IUM.PROSES_ID
																,IUM.COMPANY
																,IUM.ITEM_CAT
																,IUM.BRANCHES
																,IUM.PRODUCT
																,IUM.TGL_UM
																,IUM.NO_UM																					
																,IUM.NO_SO
																,SUM(IUM.AMOUNT) AS AMOUNT
														FROM [dbo].[TEMP23_INVOICE_UM] IUM	
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
														WHERE	IUM.PROSES_ID = @ProsesId AND
																(
																	(@TglInvUpto <= GETDATE() AND IUM.TGL_UM <=  GETDATE()) OR
																	(@TglInvUpto > GETDATE() AND IUM.TGL_UM <=  @TglInvUpto)
																) AND
																(
																	UCM.NO_CM IS NULL OR
																	(
																		UCM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND UCM.TGL_CM >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND UCM.TGL_CM >  @TglInvUpto)
																		)
																	)
																)
														GROUP BY IUM.PROSES_ID
																,IUM.COMPANY
																,IUM.ITEM_CAT
																,IUM.BRANCHES
																,IUM.PRODUCT
																,IUM.TGL_UM
																,IUM.NO_UM																					
																,IUM.NO_SO
													) UM
											LEFT JOIN	(
															SELECT	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.PRODUCT
																	, UMF.ITEM_CAT
																	, SUM(UMF.AMOUNT) AS AMOUNT
															FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
															WHERE	UMF.PROSES_ID = @ProsesId AND
																	(
																		(@TglInvUpto <= GETDATE() AND UMF.TGL_INV <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND UMF.TGL_INV <=  @TglInvUpto)
																	)	
															GROUP BY 	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.PRODUCT
																	, UMF.ITEM_CAT 										
														) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																	INV.COMPANY = UM.COMPANY AND 
																	INV.NO_SO = UM.NO_SO AND 
																	INV.BRANCHES = UM.BRANCHES AND 
																	INV.ITEM_CAT = UM.ITEM_CAT AND 
																	INV.PRODUCT = UM.PRODUCT											
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO COLLATE Latin1_General_CI_AS
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.ITEM_CAT, OUM.BRANCHES, OUM.PRODUCT
							) OSO
					GROUP BY OSO.ITEM_CAT, OSO.BRANCHES
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
					FROM	(
								SELECT	'PS' AS GROUP_ITEM_CAT
										,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
												CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.PRODUCT
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT	SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				) SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT	SAL.[Document No_]
																								, SAL.[Shortcut Dimension 2 Code]
																								, DIMS.PRODUCT
																								, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY OSO.ITEM_CAT, OSO.BRANCHES, OSO.Q_OUT_SO, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue - Forcast Sales ACS
	IF @Action = 'SRF'
	BEGIN
		--
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, 'XXX' AS PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							,	CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' 
								ELSE
									CASE	WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM'
											WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'TJH'
											ELSE DIMS.SALESMAN 
									END 
								END AS SALESMAN
							, (GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				, 'XXXXX' AS CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- INSERT Adjustment Uang Muka
		INSERT INTO [dbo].[TEMP26_ADJ_UM](		
				PROSES_ID 
				, COMPANY
				, POSTING_DATE
				, DOCUMENT_NO 					
				, BRANCHES 
				, ITEM_CAT
				, SALESMAN
				, PRODUCT
				, CUST_NO
				, AMOUNT
		)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.POSTING_DATE
				,X.DOCUMENT_NO
				,X.BRANCHES
				,X.ITEM_CAT 
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				, 'XXXXX' AS CUST_NO
				,SUM(X.AMOUNT) AS AMOUNT
		FROM	(
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME' AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME'AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
				) X
		GROUP BY X.COMPANY, X.POSTING_DATE, X.DOCUMENT_NO, X.BRANCHES, X.ITEM_CAT, X.SALESMAN;		
		--
		-- INSERT Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.GROUP_NO, BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'SALES REVENUE' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, SUM(X.AMOUNT) AS AMOUNT
							, X.Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(			
								SELECT	'SALES ALL' AS NOTE
										,GLL.BRANCHES COLLATE Latin1_General_CI_AS AS BRANCHES
										,GLL.ITEM_CAT  COLLATE Latin1_General_CI_AS AS ITEM_CAT 
										,GLL.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
										,GLL.Q_OUT_SO
										,SUM(GLL.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES  
													,GLE.ITEM_CAT
													,GLE.SALESMAN 
													, DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
													, GLE.AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
										) GLL
								GROUP BY GLL.BRANCHES, GLL.ITEM_CAT, GLL.SALESMAN, GLL.Q_OUT_SO
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										, DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
										,GLE.AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)							
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 1' AS NOTE
										,ASCY.BRANCHES COLLATE Latin1_General_CI_AS as BRANCHES
										,ASCY.ITEM_CAT COLLATE Latin1_General_CI_AS as ITEM_CAT
										,ASCY.SALESMAN COLLATE Latin1_General_CI_AS as SALESMAN
										, 1 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	IUM.PROSES_ID
																		,IUM.COMPANY
																		,IUM.ITEM_CAT
																		,IUM.BRANCHES
																		,IUM.SALESMAN
																		,IUM.TGL_UM
																		,IUM.NO_UM																					
																		,IUM.NO_SO
																		,IUM.AMOUNT
																FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																WHERE	IUM.PROSES_ID = @ProsesId AND
																		(
																			IUM.TGL_UM >=  (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND IUM.TGL_UM<=	(
																																																	CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																																		@TglInvUpto
																																																	ELSE
																																																		CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																																	END
																																																)	
																		) AND
																		(
																			UCM.NO_CM IS NULL OR	(
																										UCM.NO_CM IS NOT NULL AND UCM.TGL_CM >	(
																																					CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																						@TglInvUpto
																																					ELSE
																																						CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																					END
																																				) 
																									)
																		)																			
															) UM
													LEFT JOIN	(																	
																	SELECT	PROSES_ID 
																			,COMPANY
																			,NO_SO
																			,BRANCHES 
																			,ITEM_CAT
																			,SALESMAN
																			,SUM(AMOUNT) AS AMOUNT
																	FROM [dbo].[TEMP24_INVOICE_UM_FINAL]
																	WHERE	PROSES_ID = @ProsesId 
																			AND TGL_INV <=  (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime))
																	GROUP BY PROSES_ID, COMPANY, NO_SO, BRANCHES, ITEM_CAT, SALESMAN
																) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																			INV.COMPANY = UM.COMPANY AND 
																			INV.NO_SO = UM.NO_SO AND 
																			INV.BRANCHES = UM.BRANCHES AND 
																			INV.ITEM_CAT = UM.ITEM_CAT AND 
																			INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 2' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										, 3 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	IUM.PROSES_ID
																		,IUM.COMPANY
																		,IUM.ITEM_CAT
																		,IUM.BRANCHES
																		,IUM.SALESMAN
																		,IUM.TGL_UM
																		,IUM.NO_UM																					
																		,IUM.NO_SO
																		,IUM.AMOUNT
																FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																WHERE	IUM.PROSES_ID = @ProsesId AND
																		(
																			IUM.TGL_UM >=  (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND IUM.TGL_UM <=	@TglInvUpto	
																		) AND
																		(
																			UCM.NO_CM IS NULL OR	(
																										UCM.NO_CM IS NOT NULL AND UCM.TGL_CM >	@TglInvUpto
																									)
																		)																			
															) UM
													LEFT JOIN	(																	
																	SELECT	PROSES_ID 
																			,COMPANY
																			,NO_SO
																			,BRANCHES 
																			,ITEM_CAT
																			,SALESMAN
																			,SUM(AMOUNT) AS AMOUNT
																	FROM [dbo].[TEMP24_INVOICE_UM_FINAL]
																	WHERE	PROSES_ID = @ProsesId 
																			AND TGL_INV  <=  @TglInvUpto
																	GROUP BY PROSES_ID, COMPANY, NO_SO, BRANCHES, ITEM_CAT, SALESMAN
																) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																			INV.COMPANY = UM.COMPANY AND 
																			INV.NO_SO = UM.NO_SO AND 
																			INV.BRANCHES = UM.BRANCHES AND 
																			INV.ITEM_CAT = UM.ITEM_CAT AND 
																			INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,ASPY.Q_OUT_SO
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,DATEPART(quarter, OUM.TGL_INV) AS Q_OUT_SO
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,INV.TGL_INV
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	IUM.PROSES_ID
																			,IUM.COMPANY
																			,IUM.ITEM_CAT
																			,IUM.BRANCHES
																			,IUM.SALESMAN
																			,IUM.TGL_UM
																			,IUM.NO_UM																					
																			,IUM.NO_SO
																			,IUM.AMOUNT
																	FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																	LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																	WHERE	IUM.PROSES_ID = @ProsesId AND
																			(IUM.TGL_UM < (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime))) AND																			
																			(UCM.NO_CM IS NULL)
																) UM
														LEFT JOIN	(
																		SELECT	UMF.PROSES_ID 
																				, UMF.COMPANY 
																				, UMF.NO_SO 
																				, UMF.BRANCHES
																				, UMF.ITEM_CAT 
																				, UMF.SALESMAN 
																				, MAX(UMF.TGL_INV) AS TGL_INV
																				, SUM(UMF.AMOUNT) AS AMOUNT
																		FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																		WHERE	UMF.PROSES_ID = @ProsesId AND
																				(UMF.TGL_INV >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND UMF.TGL_INV <= @TglInvUpto)
																		GROUP BY UMF.PROSES_ID, UMF.COMPANY, UMF.NO_SO, UMF.BRANCHES, UMF.ITEM_CAT 
																				, UMF.SALESMAN														
																	) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																				INV.COMPANY = UM.COMPANY AND 
																				INV.NO_SO = UM.NO_SO AND 
																				INV.BRANCHES = UM.BRANCHES AND 
																				INV.ITEM_CAT = UM.ITEM_CAT AND 
																				INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.Q_OUT_SO
								UNION ALL
								SELECT	'(+) Accured Sales Previous Semester' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,3 AS Q_OUT_SO
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN													
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	IUM.PROSES_ID
																			,IUM.COMPANY
																			,IUM.ITEM_CAT
																			,IUM.BRANCHES
																			,IUM.SALESMAN
																			,IUM.TGL_UM
																			,IUM.NO_UM																					
																			,IUM.NO_SO
																			,IUM.AMOUNT
																	FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																	LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																	WHERE	IUM.PROSES_ID = @ProsesId AND
																			(IUM.TGL_UM >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND IUM.TGL_UM<= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime))) AND
																			(UCM.NO_CM IS NULL)
																) UM
														LEFT JOIN	(
																		SELECT	UMF.PROSES_ID 
																				, UMF.COMPANY 
																				, UMF.NO_SO 
																				, UMF.BRANCHES
																				, UMF.ITEM_CAT 
																				, UMF.SALESMAN 
																				, MAX(UMF.TGL_INV) AS TGL_INV
																				, SUM(UMF.AMOUNT) AS AMOUNT
																		FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																		WHERE	UMF.PROSES_ID = @ProsesId AND
																				(UMF.TGL_INV >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND UMF.TGL_INV <= @TglInvUpto)
																		GROUP BY UMF.PROSES_ID, UMF.COMPANY, UMF.NO_SO, UMF.BRANCHES, UMF.ITEM_CAT 
																				, UMF.SALESMAN														
																	) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																				INV.COMPANY = UM.COMPANY AND 
																				INV.NO_SO = UM.NO_SO AND 
																				INV.BRANCHES = UM.BRANCHES AND 
																				INV.ITEM_CAT = UM.ITEM_CAT AND 
																				INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO <> '400.110.04' AND
										(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.POSTING_DATE
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.POSTING_DATE
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AUTOJAYA' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.DOCUMENT_NO <> '9SIAT200197' AND
													(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AJ-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SOLUSI' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, DATEPART(quarter, GLE.POSTING_DATE) AS Q_OUT_SO
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SP-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													(GLE.POSTING_DATE >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.POSTING_DATE <=  @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
							) X
					GROUP BY X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, X.AMOUNT
							, X.Q_OUT_SO
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'UANG MUKA' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							,'' AS ITEM_CAT
							, X2.BRANCHES
							, X2.SALESMAN
							, SUM(X2.AMOUNT) AS AMOUNT
							, X2.Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'OS1' AS GROUP_ITEM_CAT
										,'Uang Muka' AS ITEM_CAT
										,UMX.BRANCHES
										,UMX.SALESMAN
										,UMX.Q_OUT_SO
										,SUM(UMX.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	BRANCHES
													, SALESMAN
													, DATEPART(quarter, POSTING_DATE)  AS Q_OUT_SO
													, AMOUNT
											FROM [dbo].[TEMP26_ADJ_UM] 	 
											WHERE PROSES_ID = @ProsesId	
										) UMX
								GROUP BY UMX.BRANCHES, UMX.SALESMAN, UMX.Q_OUT_SO
								UNION ALL
								SELECT	'OS1' AS GROUP_ITEM_CAT
										,'Uang Muka' AS ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.Q_OUT_SO
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													, DATEPART(quarter, UM.TGL_UM)  AS Q_OUT_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(	
														SELECT	IUM.PROSES_ID
																,IUM.COMPANY
																,IUM.ITEM_CAT
																,IUM.BRANCHES
																,IUM.SALESMAN
																,IUM.TGL_UM
																,IUM.NO_UM																					
																,IUM.NO_SO
																,IUM.AMOUNT
														FROM [dbo].[TEMP23_INVOICE_UM] IUM	
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
														WHERE	IUM.PROSES_ID = @ProsesId AND
																(
																	(@TglInvUpto <= GETDATE() AND IUM.TGL_UM <=  GETDATE()) OR
																	(@TglInvUpto > GETDATE() AND IUM.TGL_UM <=  @TglInvUpto)
																) AND
																(
																	UCM.NO_CM IS NULL OR
																	(
																		UCM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND UCM.TGL_CM >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND UCM.TGL_CM >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.ITEM_CAT
																	, UMF.SALESMAN
																	, SUM(UMF.AMOUNT) AS AMOUNT
															FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
															WHERE	UMF.PROSES_ID = @ProsesId AND
																	(
																		(@TglInvUpto <= GETDATE() AND UMF.TGL_INV <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND UMF.TGL_INV <=  @TglInvUpto)
																	)	
															GROUP BY UMF.PROSES_ID, UMF.COMPANY, UMF.NO_SO, UMF.BRANCHES, UMF.ITEM_CAT, UMF.SALESMAN								
														) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																	INV.COMPANY = UM.COMPANY AND 
																	INV.NO_SO = UM.NO_SO AND 
																	INV.BRANCHES = UM.BRANCHES AND 
																	INV.ITEM_CAT = UM.ITEM_CAT AND 
																	INV.SALESMAN = UM.SALESMAN												
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO COLLATE Latin1_General_CI_AS
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.ITEM_CAT, OUM.BRANCHES, OUM.SALESMAN, OUM.Q_OUT_SO
							) X2
					GROUP BY X2.BRANCHES, X2.SALESMAN, X2.Q_OUT_SO
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'OUTSTANDING SO' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, OSO.SALESMAN
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.SALESMAN
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.SALESMAN
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE	XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.SALESMAN
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue - Forecast Sales (Realisasi by Sales Revenue)
	IF @Action = 'SRF-P'
	BEGIN
		--
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, X.PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							,	CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' 
								ELSE
									CASE	WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM'
											WHEN GLE.[Document No_] = 'JVTB2105002' THEN 'TJH'
											ELSE DIMS.SALESMAN 
									END 
								END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'XXX' ELSE ISNULL(DIMS.PRODUCT, 'XXX') END AS PRODUCT
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
				,'XXXXX' AS CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				,X.PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- INSERT Adjustment Uang Muka
		INSERT INTO [dbo].[TEMP26_ADJ_UM](		
				PROSES_ID 
				, COMPANY
				, POSTING_DATE
				, DOCUMENT_NO 					
				, BRANCHES 
				, ITEM_CAT
				, SALESMAN
				, PRODUCT
				, CUST_NO
				, AMOUNT
		)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.POSTING_DATE
				,X.DOCUMENT_NO
				,X.BRANCHES
				,X.ITEM_CAT 
				,X.SALESMAN
				,X.PRODUCT
				,'XXXXX' AS CUST_NO
				,SUM(X.AMOUNT) AS AMOUNT
		FROM	(
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME' AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,DIMS.PRODUCT
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME'AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
				) X
		GROUP BY X.COMPANY, X.POSTING_DATE, X.DOCUMENT_NO, X.BRANCHES, X.ITEM_CAT, X.SALESMAN, X.PRODUCT;		
		--
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
			SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY TTLT.GROUP_NO, TTLT.GROUP_DESC, TTLT.ITEM_CAT, TTLT.BRANCHES, TTLT.SALESMAN) AS TEMP08_ID
					, @Action AS MODE
					, @ProsesId AS PROSES_ID
					, TTLT.GROUP_NO
					, TTLT.GROUP_DESC
					, '' AS GROUP_ITEM_CAT
					, TTLT.ITEM_CAT
					, TTLT.BRANCHES
					, TTLT.SALESMAN
					, TTLT.AMOUNT
					, 0 AS Q_OUT_SO
					, 0 AS YEAR_OUT_SO
			FROM	(
			SELECT	
					TTL.GROUP_NO
					, TTL.GROUP_DESC
					, TTL.PILLAR AS ITEM_CAT
					, TTL.CABANG AS BRANCHES
					, TTL.SALESMAN
					, SUM(TTL.AMOUNT) AS AMOUNT
			FROM	(
			-- SELES REVENUE
			SELECT	1 AS GROUP_NO
					, 'SALES REVENUE' AS GROUP_DESC	
					, XX.PILLAR 
					, CAB.[Name] AS CABANG
					, XX.SALESMAN
					,(SUM(XX.AMOUNT)) AS AMOUNT
			FROM	(
						SELECT
								CASE WHEN X.ITEM_CAT = 'HW01' THEN
									CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2'
											WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3'
											ELSE  '1'
									END
								ELSE
									'4'
								END AS PILLAR
								,X.SALESMAN
								,X.BRANCHES
								,X.AMOUNT
						FROM	(
									SELECT	'SALES ALL' AS NOTE
											,GLE.BRANCHES  COLLATE Latin1_General_CI_AS AS BRANCHES
											,GLE.ITEM_CAT COLLATE Latin1_General_CI_AS AS ITEM_CAT 
											,GLE.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
											,GLE.PRODUCT COLLATE Latin1_General_CI_AS AS PRODUCT
											,SUM(GLE.AMOUNT) AS AMOUNT
									FROM [dbo].[TEMP21_GL_ENTRY] GLE
									WHERE	GLE.PROSES_ID = @ProsesId AND
											GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
											GLE.GLA_NO <> '400.110.04' AND
											(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
									GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
									UNION ALL
									SELECT	'Sales - LAINNYA' AS NOTE
											,GLE.BRANCHES
											,GLE.ITEM_CAT
											,GLE.SALESMAN
											,GLE.PRODUCT
											,SUM(GLE.AMOUNT) AS AMOUNT
									FROM [dbo].[TEMP21_GL_ENTRY] GLE
									WHERE	GLE.PROSES_ID = @ProsesId AND
											GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
											GLE.GLA_NO = '400.110.04' AND
											(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
									GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT		
									UNION ALL
									SELECT	'(-) Accured Sales Current Year' AS NOTE
											,ASCY.BRANCHES COLLATE Latin1_General_CI_AS as BRANCHES
											,ASCY.ITEM_CAT COLLATE Latin1_General_CI_AS as ITEM_CAT
											,ASCY.SALESMAN COLLATE Latin1_General_CI_AS as SALESMAN
											,ASCY.PRODUCT COLLATE Latin1_General_CI_AS as PRODUCT
											,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
									FROM (
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.PRODUCT
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,UM.PRODUCT
																,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																			SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	IUM.PROSES_ID
																			,IUM.COMPANY
																			,IUM.ITEM_CAT
																			,IUM.BRANCHES
																			,IUM.SALESMAN
																			,IUM.PRODUCT
																			,IUM.TGL_UM
																			,IUM.NO_UM																					
																			,IUM.NO_SO
																			,IUM.AMOUNT
																	FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																	LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																	WHERE	IUM.PROSES_ID = @ProsesId AND
																			(IUM.TGL_UM >= @TglInvFrom AND IUM.TGL_UM<= @TglInvUpto) AND
																			(UCM.NO_CM IS NULL OR (UCM.NO_CM IS NOT NULL AND UCM.TGL_CM > @TglInvUpto ))																			
																) UM
														LEFT JOIN	(
																		SELECT	PROSES_ID 
																				,COMPANY 
																				,NO_SO 
																				,BRANCHES
																				,ITEM_CAT
																				,SALESMAN
																				,SUM(AMOUNT) AS AMOUNT
																		FROM [dbo].[TEMP24_INVOICE_UM_FINAL]																				
																		WHERE	PROSES_ID = @ProsesId
																		GROUP BY PROSES_ID 
																				,COMPANY 
																				,NO_SO 
																				,BRANCHES
																				,ITEM_CAT
																				,SALESMAN
																	) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																				INV.COMPANY = UM.COMPANY AND 
																				INV.NO_SO = UM.NO_SO AND 
																				INV.BRANCHES = UM.BRANCHES AND 
																				INV.ITEM_CAT = UM.ITEM_CAT AND 
																				INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
											) ASCY
									GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
									UNION ALL
									SELECT
											'(-) Accured Sales Current Year' AS NOTE
											,CMLM.BRANCHES
											,CMLM.ITEM_CAT
											,CMLM.SALESMAN
											,CMLM.PRODUCT
											,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
									FROM	(
												SELECT	ICM.ITEM_CAT
														,ICM.BRANCHES
														,ICM.SALESMAN
														,ICM.PRODUCT
														,ICM.TGL_CM
														,ICM.NO_CM
														,ICM.AMOUNT
												FROM [dbo].[TEMP25_INVOICE_CM_UM] ICM
												LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_CM = ICM.NO_CM  AND UCM.COMPANY = ICM.COMPANY  AND UCM.PROSES_ID = ICM.PROSES_ID 
												WHERE	ICM.PROSES_ID = @ProsesId AND
														(ICM.TGL_CM >= @TglInvFrom AND ICM.TGL_CM <= @TglInvUpto) AND
														(UCM.TGL_UM < @TglInvFrom)			
											) CMLM
									GROUP BY CMLM.BRANCHES
											,CMLM.ITEM_CAT
											,CMLM.SALESMAN
											,CMLM.PRODUCT
									UNION ALL
									SELECT	'(+) Accured Sales Previous Year' AS NOTE
											,ASPY.BRANCHES
											,ASPY.ITEM_CAT
											,ASPY.SALESMAN
											,ASPY.PRODUCT
											,SUM(ASPY.AMOUNT)  AS AMOUNT
									FROM	(
												SELECT	OUM.ITEM_CAT
														,OUM.BRANCHES
														,OUM.SALESMAN
														,OUM.PRODUCT
														,OUM.AMOUNT
												FROM	(
															SELECT	UM.ITEM_CAT
																	,UM.BRANCHES
																	,UM.SALESMAN
																	,UM.PRODUCT
																	,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																			CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																				UM.AMOUNT 
																			ELSE 
																				--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																				--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				--ELSE
																					ISNULL(INV.AMOUNT,0)
																				--END
																			END
																		END AS AMOUNT
															FROM	(
																		SELECT	IUM.PROSES_ID
																				,IUM.COMPANY
																				,IUM.ITEM_CAT
																				,IUM.BRANCHES
																				,IUM.SALESMAN
																				,IUM.PRODUCT
																				,IUM.TGL_UM
																				,IUM.NO_UM																					
																				,IUM.NO_SO
																				,IUM.AMOUNT
																		FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																		LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																		WHERE	IUM.PROSES_ID = @ProsesId AND
																				(IUM.TGL_UM < @TglInvFrom) AND
																				(UCM.NO_CM IS NULL)
																	) UM
															LEFT JOIN	(
																			SELECT	UMF.PROSES_ID 
																					, UMF.COMPANY 
																					, UMF.NO_SO 
																					, UMF.BRANCHES
																					, UMF.ITEM_CAT 
																					, UMF.SALESMAN 
																					, SUM(UMF.AMOUNT) AS AMOUNT
																			FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																			WHERE	UMF.PROSES_ID = @ProsesId AND
																					(UMF.TGL_INV >= @TglInvFrom AND UMF.TGL_INV <= @TglInvUpto)	
																			GROUP BY UMF.PROSES_ID 
																					, UMF.COMPANY 
																					, UMF.NO_SO 
																					, UMF.BRANCHES
																					, UMF.ITEM_CAT 
																					, UMF.SALESMAN 										
																		) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																					INV.COMPANY = UM.COMPANY AND 
																					INV.NO_SO = UM.NO_SO AND 
																					INV.BRANCHES = UM.BRANCHES AND 
																					INV.ITEM_CAT = UM.ITEM_CAT AND 
																					INV.SALESMAN = UM.SALESMAN
														) OUM
												WHERE OUM.AMOUNT > 0
											) ASPY
									GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
											,GLE.BRANCHES
											,GLE.ITEM_CAT
											,GLE.SALESMAN
											,GLE.PRODUCT
											,SUM(GLE.AMOUNT) AS AMOUNT
									FROM [dbo].[TEMP21_GL_ENTRY] GLE
									WHERE	GLE.PROSES_ID = @ProsesId AND
											GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
											GLE.GLA_NO <> '400.110.04' AND
											(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
									GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
									UNION ALL
									SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
											,GLE.BRANCHES
											,GLE.ITEM_CAT
											,GLE.SALESMAN
											,GLE.PRODUCT
											,SUM(GLE.AMOUNT) AS AMOUNT
									FROM [dbo].[TEMP21_GL_ENTRY] GLE
									WHERE	GLE.PROSES_ID = @ProsesId AND
											GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
											GLE.GLA_NO = '400.110.04' AND
											(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
									GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, SLC.PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	GLE.BRANCHES
														,GLE.ITEM_CAT
														,GLE.SALESMAN
														,GLE.PRODUCT
														,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
														,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
														,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
														, (GLE.AMOUNT * -1 ) AS AMOUNT
												FROM [dbo].[TEMP21_GL_ENTRY] GLE
												WHERE	GLE.PROSES_ID = @ProsesId AND
														GLE.COMPANY = 'AUTOJAYA' AND
														GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
														GLE.DOCUMENT_NO <> '9SIAT200197' AND
														GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, SLC.PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
														,'(-/+) Others Management Adjustment' AS SALES_TITLE2
														,'SLS-0303' AS SORT_SLS
														, GLE.BRANCHES
														, GLE.ITEM_CAT
														, GLE.SALESMAN
														, GLE.PRODUCT
														, (GLE.AMOUNT * -1 ) AS AMOUNT
												FROM [dbo].[TEMP21_GL_ENTRY] GLE
												WHERE	GLE.PROSES_ID = @ProsesId AND
														GLE.COMPANY = 'AJ-ADJ' AND
														GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
														GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, SLC.PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	GLE.BRANCHES
														,GLE.ITEM_CAT
														,GLE.SALESMAN
														,GLE.PRODUCT
														,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
														,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
														,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
														, (GLE.AMOUNT * -1 ) AS AMOUNT
												FROM [dbo].[TEMP21_GL_ENTRY] GLE
												WHERE	GLE.PROSES_ID = @ProsesId AND
														GLE.COMPANY = 'SOLUSI' AND
														GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
														GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
									UNION ALL
									SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
											, SLC.BRANCHES
											, SLC.ITEM_CAT
											, SLC.SALESMAN
											, SLC.PRODUCT
											, SUM(SLC.[Amount]) AS AMOUNT
									FROM	(
												SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
														,'(-/+) Others Management Adjustment' AS SALES_TITLE2
														,'SLS-0303' AS SORT_SLS
														, GLE.BRANCHES
														, GLE.ITEM_CAT
														, GLE.SALESMAN
														, GLE.PRODUCT
														, (GLE.AMOUNT * -1 ) AS AMOUNT
												FROM [dbo].[TEMP21_GL_ENTRY] GLE
												WHERE	GLE.PROSES_ID = @ProsesId AND
														GLE.COMPANY = 'SP-ADJ' AND
														GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
														GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
											) SLC
									GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT	

									
									
								) X
					) XX
			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = XX.BRANCHES
			GROUP BY XX.PILLAR
					, CAB.[Name]
					, XX.SALESMAN
			UNION ALL
			-- UANG MUKA
			SELECT	2 AS GROUP_NO
					, 'UANG MUKA' AS GROUP_DESC	
					,	CASE WHEN UMM.ITEM_CAT = 'HW01' THEN
							CASE WHEN UMM.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2'
									WHEN UMM.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3'
									ELSE  '1'
							END
						ELSE
							'4'
						END AS PILLAR
					, CAB.[Name] AS CABANG
					, UMM.SALESMAN
					, UMM.AMOUNT
			FROM	(
						SELECT	UMX.BRANCHES
								, UMX.ITEM_CAT 
								, UMX.PRODUCT 
								, UMX.SALESMAN
								, SUM(UMX.AMOUNT) AS AMOUNT
						FROM [dbo].[TEMP26_ADJ_UM] UMX	 
						WHERE UMX.PROSES_ID = @ProsesId	
						GROUP BY UMX.ITEM_CAT, UMX.BRANCHES, UMX.PRODUCT, UMX.SALESMAN				
						UNION ALL
						SELECT	OUM.BRANCHES
								, OUM.ITEM_CAT
								, OUM.PRODUCT
								, OUM.SALESMAN
								, SUM(OUM.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.PRODUCT
											,UM.SALESMAN
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(	
												SELECT	IUM.PROSES_ID
														,IUM.COMPANY
														,IUM.ITEM_CAT
														,IUM.BRANCHES
														,IUM.PRODUCT
														,IUM.SALESMAN
														,IUM.TGL_UM
														,IUM.NO_UM																					
														,IUM.NO_SO
														,SUM(IUM.AMOUNT) AS AMOUNT
												FROM [dbo].[TEMP23_INVOICE_UM] IUM	
												LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
												WHERE	IUM.PROSES_ID = @ProsesId AND
														(
															(@TglInvUpto <= GETDATE() AND IUM.TGL_UM <=  GETDATE()) OR
															(@TglInvUpto > GETDATE() AND IUM.TGL_UM <=  @TglInvUpto)
														) AND
														(
															UCM.NO_CM IS NULL OR
															(
																UCM.NO_CM IS NOT NULL AND
																(
																	(@TglInvUpto <= GETDATE() AND UCM.TGL_CM >  GETDATE()) OR
																	(@TglInvUpto > GETDATE() AND UCM.TGL_CM >  @TglInvUpto)
																)
															)
														)
												GROUP BY IUM.PROSES_ID
														,IUM.COMPANY
														,IUM.ITEM_CAT
														,IUM.BRANCHES
														,IUM.PRODUCT
														,IUM.SALESMAN
														,IUM.TGL_UM
														,IUM.NO_UM																					
														,IUM.NO_SO
											) UM
									LEFT JOIN	(
													SELECT	UMF.PROSES_ID 
															, UMF.COMPANY 
															, UMF.NO_SO 
															, UMF.BRANCHES
															, UMF.PRODUCT
															, UMF.ITEM_CAT
															, UMF.SALESMAN
															, SUM(UMF.AMOUNT) AS AMOUNT
													FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
													WHERE	UMF.PROSES_ID = @ProsesId AND
															(
																(@TglInvUpto <= GETDATE() AND UMF.TGL_INV <=  GETDATE()) OR
																(@TglInvUpto > GETDATE() AND UMF.TGL_INV <=  @TglInvUpto)
															)	
													GROUP BY 	UMF.PROSES_ID, UMF.COMPANY, UMF.NO_SO, UMF.BRANCHES, UMF.PRODUCT, UMF.ITEM_CAT, UMF.SALESMAN									
												) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
															INV.COMPANY = UM.COMPANY AND 
															INV.NO_SO = UM.NO_SO AND 
															INV.BRANCHES = UM.BRANCHES AND 
															INV.ITEM_CAT = UM.ITEM_CAT AND 
															INV.PRODUCT = UM.PRODUCT AND 
															INV.SALESMAN = UM.SALESMAN												
								) OUM
						LEFT JOIN	(
										SELECT [Document No_] AS NO_SO
												,SUM([Amount]) AS AMOUNT
										FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
										UNION ALL
										SELECT [Document No_] AS NO_SO
												,SUM([Amount]) AS AMOUNT
										FROM [ACS].[dbo].[SOLUSI$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
									) SOS ON SOS.NO_SO = OUM.NO_SO COLLATE Latin1_General_CI_AS
						WHERE	OUM.AMOUNT > 0 AND
								SOS.NO_SO IS NOT NULL AND
								SOS.NO_SO <> 'SOAT160274'
						GROUP BY OUM.ITEM_CAT, OUM.BRANCHES, OUM.PRODUCT, OUM.SALESMAN
						
					) UMM
			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = UMM.BRANCHES COLLATE Latin1_General_CI_AS
			UNION ALL
			-- OUT SO
			SELECT	3	 AS GROUP_NO
					, 'OUTSTANDING SO' AS GROUP_DESC	
					, CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
							CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2'
									WHEN XAX.PRODUCT IN ('H011', 'H022', 'H023', 'H024', 'H028') THEN '3'
									ELSE  '1'
							END
						ELSE
							'4'
						END AS PILLAR
					, XAX.CABANG
					, XAX.SALESMAN
					, XAX.AMOUNT_IDR AS AMOUNT
			FROM	(
						SELECT	XXX.ITEM_CATEGORY
								, XXX.PRODUCT
								, XXX.CABANG
								, XXX.SALESMAN
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										XXX.AMOUNT_IDR
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
											ELSE
												ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
											END
										ELSE
											XXX.AMOUNT_IDR
										END
									END AS AMOUNT_IDR
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												XOX.EST_REALISASI
											ELSE
												CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
														ELSE  XXX.EST_REALISASI
												END
											END
										ELSE
											XXX.EST_REALISASI
										END
									END AS EST_REALISASI
						FROM	(
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.SALESMAN
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Salesperson Code] AS SALESMAN
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT	SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																					ELSE
																					SAL.[Amount]
																					END AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															) SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT SAL.[Document No_]
																		, SAL.[Shortcut Dimension 2 Code]
																		, DIMS.PRODUCT
																		, SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.SALESMAN
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
															END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Salesperson Code] AS SALESMAN
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																					ELSE
																					SAL.[Amount]
																					END AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT	SAL.[Document No_]
																			, SAL.[Shortcut Dimension 2 Code]
																			, DIMS.PRODUCT
																			, SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																				,DIMS.PRODUCT
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						LEFT JOIN	(
										SELECT T01.[NO_SO]
												,T01.[JENIS_PAYMENT]
												,T01.[QTY]
												,T01.[EST_REALISASI]
												,T02.[ADD_NUM]
										FROM [NavBI].[dbo].[T01_SO_ADJ] T01
										LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
									) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
						WHERE
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001')AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
					) XAX
			WHERE	(
						(
							SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
							SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
						)
							OR
						(
							SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
							SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
						)
					)
					) TTL
		GROUP BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.PILLAR , TTL.CABANG, TTL.SALESMAN
					) TTLT;
			--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue - Sales Revenue by Customer
	IF @Action = 'SRCS'
	BEGIN
		--
		-- Insert GL Entry
		INSERT INTO [dbo].[TEMP21_GL_ENTRY](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, GLA_NO
			, DOCUMENT_NO 
			, POSTING_DATE
			, SOURCE_NO
			, SOURCE_CODE
			, BRANCHES 
			, ITEM_CAT
			, SALESMAN
			, PRODUCT
			, AMOUNT )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.GLA_NO
				, X.DOCUMENT_NO 
				, X.POSTING_DATE
				, X.SOURCE_NO
				, X.SOURCE_CODE
				, X.BRANCHES 
				, X.ITEM_CAT
				, X.SALESMAN
				, 'XXX' AS PRODUCT
				, X.AMOUNT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Source No_] AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,DIMS.CUSTOMER AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END) AS CUSTOMER
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Entry No_]	AS ENTRY_NO
							,GLE.[G_L Account No_] AS GLA_NO
							,GLE.[Document No_] AS DOCUMENT_NO
							,GLE.[Posting Date] AS POSTING_DATE
							,DIMS.CUSTOMER AS SOURCE_NO
							,GLE.[Source Code] AS SOURCE_CODE
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN '10' ELSE DIMS.BRANCHES END AS BRANCHES
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'HW01' ELSE CASE WHEN DIMS.ITEM_CAT = '' THEN 'HW01' ELSE DIMS.ITEM_CAT END END AS ITEM_CAT
							, CASE WHEN GLE.[G_L Account No_] = '400.110.04' THEN 'OFC' ELSE DIMS.SALESMAN END AS SALESMAN
							,(GLE.[Amount] * -1) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END) AS CUSTOMER
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
							(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
				) X;
		--
		-- INSERT Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP22_UM_CM](		
			PROSES_ID 
			, COMPANY
			, ENTRY_NO
			, TGL_UM
			, NO_UM 
			, TGL_CM
			, NO_CM
		 )
		SELECT	 @ProsesId AS PROSES_ID
				, X.COMPANY
				, X.ENTRY_NO
				, X.TGL_UM
				, X.NO_UM 
				, X.TGL_CM
				, X.NO_CM
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							, CLE.[Entry No_] AS ENTRY_NO
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Posting Date] ELSE CLE2.[Posting Date] END AS TGL_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Posting Date] ELSE CLE.[Posting Date] END AS TGL_CM
							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
					WHERE	CLE.[Document Type] IN (2,3) AND 
							(	
								(CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) 
							)
				) X;
		--
		-- INSERT Invoice Uang Muka
		INSERT INTO [dbo].[TEMP23_INVOICE_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_UM
					, NO_UM
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
					, CUST_NO
		 )
		SELECT	 @ProsesId AS PROSES_ID
				,X.COMPANY			
				,X.TGL_UM
				,X.NO_UM
				,X.NO_SO
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				,X.CUST_NO
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							,SIH.[Bill-to Customer No_] AS CUST_NO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
							,SIH.[Bill-to Customer No_] 
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY			
							,SIH.[Posting Date] AS TGL_UM
							,SIH.[No_] AS NO_UM
							,SIH.[Prepayment Order No_] AS NO_SO
							,SIH.[Bill-to Customer No_] AS CUST_NO
							, SUM(GLE.[Amount] * -1) AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,ISNULL(DIMS.SALESMAN, 'OFC') AS SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND 
							GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034') AND
							GLE.[Document No_] LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Document No_]
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Posting Date]
							,SIH.[No_]
							,SIH.[Prepayment Order No_]
							,SIH.[Bill-to Customer No_] 
				) X;
		--
		-- INSERT Invoice Uang Muka Finalisasi
		INSERT INTO [dbo].[TEMP24_INVOICE_UM_FINAL](		
					PROSES_ID 
					, COMPANY
					, TGL_INV
					, NO_SO 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
		 )
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_INV
				,X.NO_SO		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,MAX(SIH.[Posting Date]) AS TGL_INV
							,SIH.[Order No_] AS NO_SO		
							,SUM(GLE.[Amount]) AS AMOUNT
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
					WHERE	GLE.[G_L Account No_] = '400.110.03' AND
							GLE.[Document No_] NOT LIKE 'UM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,SIH.[Order No_]
				) X;
		--
		-- INSERT Invoice Credit Memo Uang Muka
		INSERT INTO [dbo].[TEMP25_INVOICE_CM_UM](		
					PROSES_ID 
					, COMPANY
					, TGL_CM
					, NO_CM 
					, AMOUNT
					, ITEM_CAT 
					, BRANCHES
					, SALESMAN
					, PRODUCT
			)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.TGL_CM
				,X.NO_CM		
				,X.AMOUNT
				,X.ITEM_CAT
				,X.BRANCHES
				,X.SALESMAN
				, 'XXX' AS PRODUCT
		FROM	(
					SELECT	'AUTOJAYA' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
					UNION ALL
					SELECT	'SOLUSI' AS COMPANY
							,DIMS.ITEM_CAT
							,DIMS.BRANCHES
							,DIMS.SALESMAN
							,CMH.[Posting Date] AS TGL_CM
							,CMH.[No_] AS NO_CM
							, (SUM(GLE.[Amount]) * -1) AS AMOUNT
					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
					WHERE GLE.[G_L Account No_] = '400.110.03'
							AND GLE.[Document No_] NOT LIKE 'UM%'
							AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
					GROUP BY	DIMS.ITEM_CAT
								,DIMS.BRANCHES
								,DIMS.SALESMAN
								,CMH.[Posting Date]
								,CMH.[No_]
				) X;
		--
		-- INSERT Adjustment Uang Muka
		INSERT INTO [dbo].[TEMP26_ADJ_UM](		
				PROSES_ID 
				, COMPANY
				, POSTING_DATE
				, DOCUMENT_NO 					
				, BRANCHES 
				, ITEM_CAT
				, SALESMAN
				, PRODUCT
				, CUST_NO
				, AMOUNT
		)
		SELECT	@ProsesId AS PROSES_ID
				,X.COMPANY
				,X.POSTING_DATE
				,X.DOCUMENT_NO
				,X.BRANCHES
				,X.ITEM_CAT 
				,X.SALESMAN
				, 'XXX' AS PRODUCT
				,X.CUSTOMER AS CUST_NO
				,SUM(X.AMOUNT) AS AMOUNT
		FROM	(
					SELECT	'AJ-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,CASE WHEN DIMS.CUSTOMER  = 'RAPP001' AND  GLE.[Posting Date] <= '2020-01-01' THEN 'TJH' ELSE  DIMS.SALESMAN END AS SALESMAN
							,CASE WHEN DIMS.CUSTOMER IS NULL AND GLE.[Posting Date] < '2019-01-01' THEN 'NGIN001' ELSE DIMS.CUSTOMER END AS CUSTOMER
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END) AS CUSTOMER
									FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME' AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.CUSTOMER
					UNION ALL
					SELECT	'SP-ADJ' AS COMPANY
							,GLE.[Posting Date] AS POSTING_DATE
							,GLE.[Document No_] AS DOCUMENT_NO
							,DIMS.BRANCHES
							,DIMS.ITEM_CAT 
							,DIMS.SALESMAN
							,CASE WHEN DIMS.CUSTOMER IS NULL AND GLE.[Posting Date] < '2019-01-01' THEN 'NGIN001' ELSE DIMS.CUSTOMER END AS CUSTOMER
							,SUM(GLE.[Amount]) AS AMOUNT
					FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
					LEFT JOIN	(
									SELECT [Dimension Set ID] AS DIM_ID
											,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
											,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
											,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
											,MAX(CASE WHEN [Dimension Code] = 'CUSTOMER' THEN [Dimension Value Code] ELSE NULL END) AS CUSTOMER
									FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
									GROUP BY [Dimension Set ID]
								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
					WHERE	GLE.[G_L Account No_] = '400.110.00' AND
							GLE.[Source Code] <> 'CLSINCOME'AND
							GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
							GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
							(
								(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
								(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
							)
					GROUP BY GLE.[Posting Date], GLE.[Document No_], DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.CUSTOMER
				) X
		GROUP BY X.COMPANY, X.POSTING_DATE, X.DOCUMENT_NO ,X.BRANCHES, X.ITEM_CAT, X.SALESMAN, X.CUSTOMER;		
		--
		-- INSERT Sales Renevue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.ITEM_CAT, TTL.BRANCHES, TTL.SALESMAN) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, TTL.GROUP_NO
				, TTL.GROUP_DESC
				, TTL.GROUP_ITEM_CAT
				, TTL.ITEM_CAT
				, TTL.BRANCHES
				, TTL.SALESMAN
				, SUM(TTL.AMOUNT) AS AMOUNT
				, 0 AS Q_OUT_SO
				, 0 AS YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'SALES REVENUE' AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							,X.CUST_NO AS ITEM_CAT
							,X.BRANCHES
							,X.SALESMAN
							,SUM(X.AMOUNT) AS AMOUNT
					FROM	(
								SELECT	'SALES ALL' AS NOTE
										, GL.CUST_NO COLLATE Latin1_General_CI_AS AS CUST_NO
										, GL.BRANCHES  COLLATE Latin1_General_CI_AS AS BRANCHES
										, GL.ITEM_CAT COLLATE Latin1_General_CI_AS AS ITEM_CAT 
										, GL.SALESMAN COLLATE Latin1_General_CI_AS AS SALESMAN
										, SUM(GL.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	
														CASE WHEN GLE.DOCUMENT_NO = 'JVTB2105002' AND GLE.COMPANY = 'AUTOJAYA' THEN 'RAPP001'
															ELSE
																CASE	WHEN GLE.SOURCE_NO IN ('AUJA001', 'AUJA002', 'SOPE001') THEN 'INTERCOY' 
																		ELSE GLE.SOURCE_NO END
																END  AS CUST_NO
													,GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,GLE.AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
													GLE.GLA_NO <> '400.110.04' AND
													(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
										) GL
								GROUP BY GL.BRANCHES, GL.ITEM_CAT, GL.SALESMAN, GL.CUST_NO
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AUTOJAYA', 'SOLUSI') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL									
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.CUST_NO COLLATE Latin1_General_CI_AS as CUST_NO
										,ASCY.BRANCHES COLLATE Latin1_General_CI_AS as BRANCHES
										,ASCY.ITEM_CAT COLLATE Latin1_General_CI_AS as ITEM_CAT
										,ASCY.SALESMAN COLLATE Latin1_General_CI_AS as SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.CUST_NO
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,UM.CUST_NO
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	IUM.PROSES_ID
																		,IUM.COMPANY
																		,IUM.ITEM_CAT
																		,IUM.BRANCHES
																		,IUM.SALESMAN
																		,IUM.TGL_UM
																		,IUM.NO_UM																					
																		,IUM.NO_SO
																		,IUM.CUST_NO
																		,IUM.AMOUNT
																FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																WHERE	IUM.PROSES_ID = @ProsesId AND
																		(IUM.TGL_UM >= @TglInvFrom AND IUM.TGL_UM<= @TglInvUpto) AND
																		(UCM.NO_CM IS NULL OR (UCM.NO_CM IS NOT NULL AND UCM.TGL_CM > @TglInvUpto ))																			
															) UM
													LEFT JOIN [dbo].[TEMP24_INVOICE_UM_FINAL] INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																										INV.COMPANY = UM.COMPANY AND 
																										INV.NO_SO = UM.NO_SO AND 
																										INV.BRANCHES = UM.BRANCHES AND 
																										INV.ITEM_CAT = UM.ITEM_CAT AND 
																										INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.CUST_NO											
								UNION ALL											
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.CUST_NO
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.CUST_NO
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,UM.CUST_NO
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	IUM.PROSES_ID
																			,IUM.COMPANY
																			,IUM.ITEM_CAT
																			,IUM.BRANCHES
																			,IUM.SALESMAN
																			,IUM.TGL_UM
																			,IUM.NO_UM																					
																			,IUM.NO_SO
																			,IUM.CUST_NO
																			,IUM.AMOUNT
																	FROM [dbo].[TEMP23_INVOICE_UM] IUM	
																	LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
																	WHERE	IUM.PROSES_ID = @ProsesId AND
																			(IUM.TGL_UM < @TglInvFrom) AND
																			(UCM.NO_CM IS NULL)
																) UM
														LEFT JOIN	(
																		SELECT	UMF.PROSES_ID 
																				, UMF.COMPANY 
																				, UMF.NO_SO 
																				, UMF.BRANCHES
																				, UMF.ITEM_CAT 
																				, UMF.SALESMAN 
																				, UMF.AMOUNT
																		FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
																		WHERE	UMF.PROSES_ID = @ProsesId AND
																				(UMF.TGL_INV >= @TglInvFrom AND UMF.TGL_INV <= @TglInvUpto)													
																	) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																				INV.COMPANY = UM.COMPANY AND 
																				INV.NO_SO = UM.NO_SO AND 
																				INV.BRANCHES = UM.BRANCHES AND 
																				INV.ITEM_CAT = UM.ITEM_CAT AND 
																				INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.CUST_NO
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,GLE.SOURCE_NO AS CUST_NO
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO <> '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN, GLE.SOURCE_NO
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'SPONSORSHIP' AS CUST_NO
										,GLE.BRANCHES
										,GLE.ITEM_CAT
										,GLE.SALESMAN
										,SUM(GLE.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP21_GL_ENTRY] GLE
								WHERE	GLE.PROSES_ID = @ProsesId AND
										GLE.COMPANY IN ('AJ-ADJ', 'SP-ADJ') AND
										GLE.GLA_NO = '400.110.04' AND
										(GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto)
								GROUP BY GLE.BRANCHES, GLE.ITEM_CAT, GLE.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AUTOJAYA' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.DOCUMENT_NO <> '9SIAT200197' AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'AJ-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	GLE.BRANCHES
													,GLE.ITEM_CAT
													,GLE.SALESMAN
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.SOURCE_NO <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SOLUSI' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										,'INTERCOY' AS CUST_NO
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, GLE.BRANCHES
													, GLE.ITEM_CAT
													, GLE.SALESMAN
													, (GLE.AMOUNT * -1 ) AS AMOUNT
											FROM [dbo].[TEMP21_GL_ENTRY] GLE
											WHERE	GLE.PROSES_ID = @ProsesId AND
													GLE.COMPANY = 'SP-ADJ' AND
													GLE.GLA_NO IN ('400.110.01', '410.110.01', '420.110.01') AND
													GLE.POSTING_DATE >= @TglInvFrom AND GLE.POSTING_DATE <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN								
							) X
					GROUP BY X.CUST_NO, X.BRANCHES, X.SALESMAN
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'UANG MUKA' AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, OSO.CUST_NO AS ITEM_CAT
							, OSO.BRANCHES
							, OSO.SALESMAN
							, SUM(OSO.AMOUNT) AS AMOUNT
					FROM	(
								SELECT	ISNULL(UMX.CUST_NO, 'ADJUSTMENT')  AS CUST_NO
										, ISNULL(UMX.BRANCHES, '10')  AS BRANCHES
										, MIN(UMX.SALESMAN) AS SALESMAN
										, SUM(UMX.AMOUNT) AS AMOUNT
								FROM [dbo].[TEMP26_ADJ_UM] UMX	 
								WHERE UMX.PROSES_ID = @ProsesId	
								GROUP BY UMX.CUST_NO, UMX.BRANCHES									
								UNION ALL
								SELECT	OUM.CUST_NO
										,OUM.BRANCHES
										,OUM.SALESMAN
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,UM.CUST_NO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(	
														SELECT	IUM.PROSES_ID
																,IUM.COMPANY
																,IUM.ITEM_CAT
																,IUM.BRANCHES
																,IUM.SALESMAN
																,IUM.TGL_UM
																,IUM.NO_UM																					
																,IUM.NO_SO
																,IUM.CUST_NO
																,IUM.AMOUNT
														FROM [dbo].[TEMP23_INVOICE_UM] IUM	
														LEFT JOIN [dbo].[TEMP22_UM_CM] UCM ON UCM.NO_UM = IUM.NO_UM  AND UCM.COMPANY = IUM.COMPANY  AND UCM.PROSES_ID = IUM.PROSES_ID 																
														WHERE	IUM.PROSES_ID = @ProsesId AND
																(
																	(@TglInvUpto <= GETDATE() AND IUM.TGL_UM <=  GETDATE()) OR
																	(@TglInvUpto > GETDATE() AND IUM.TGL_UM <=  @TglInvUpto)
																) AND
																(
																	UCM.NO_CM IS NULL OR
																	(
																		UCM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND UCM.TGL_CM >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND UCM.TGL_CM >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	UMF.PROSES_ID 
																	, UMF.COMPANY 
																	, UMF.NO_SO 
																	, UMF.BRANCHES
																	, UMF.ITEM_CAT
																	, UMF.SALESMAN
																	, SUM(UMF.AMOUNT) AS AMOUNT
															FROM  [dbo].[TEMP24_INVOICE_UM_FINAL] UMF
															WHERE	UMF.PROSES_ID = @ProsesId AND
																	(
																		(@TglInvUpto <= GETDATE() AND UMF.TGL_INV <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND UMF.TGL_INV <=  @TglInvUpto)
																	)	
															GROUP BY 	UMF.PROSES_ID , UMF.COMPANY, UMF.NO_SO, UMF.BRANCHES, UMF.ITEM_CAT, UMF.SALESMAN								
														) INV ON	INV.PROSES_ID = UM.PROSES_ID AND 
																	INV.COMPANY = UM.COMPANY AND 
																	INV.NO_SO = UM.NO_SO AND 
																	INV.BRANCHES = UM.BRANCHES AND 
																	INV.ITEM_CAT = UM.ITEM_CAT AND
																	INV.SALESMAN = UM.SALESMAN											
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO COLLATE Latin1_General_CI_AS
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.CUST_NO, OUM.BRANCHES, OUM.SALESMAN
							) OSO
					GROUP BY OSO.CUST_NO, OSO.BRANCHES, OSO.SALESMAN
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'OUTSTANDING SO' AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, OSO.CUST_NO AS ITEM_CAT
							, OSO.BRANCHES
							, OSO.SALESMAN
							, SUM(OSO.AMOUNT_IDR) AS AMOUNT
					FROM	(
								SELECT	'OS2' AS GROUP_ITEM_CAT
										,'Outstanding SO' AS ITEM_CAT
										, XAX.CUST_CODE AS CUST_NO
										, XAX.BRANCHES
										, XAX.SALESMAN
										, XAX.AMOUNT_IDR
								FROM	(
											SELECT	XXX.CUST_CODE
													, XXX.BRANCHES
													, XXX.SALESMAN
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.BRANCHES
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.NO_PO_CUST
																, XY.STATUS_SO
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[No_] AS NO_SO
																			, ISNULL( SH.[Shortcut Dimension 1 Code], '10') AS BRANCHES
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_]
																				)SL2 ON SL2.[Document No_] = SH.[No_]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																						) Y
																					GROUP BY Y.NO_SO
																				) UM ON UM.NO_SO = SH.[No_]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.BRANCHES
																, XY.SALESMAN
																, XY.CUST_CODE
																, XY.NO_PO_CUST
																, XY.STATUS_SO
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[No_] AS NO_SO
																			, ISNULL( SH.[Shortcut Dimension 1 Code], '10') AS BRANCHES
																			, SH.[Salesperson Code] AS SALESMAN
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_]
																				)SL2 ON SL2.[Document No_] = SH.[No_]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																						) Y
																					GROUP BY Y.NO_SO
																				) UM ON UM.NO_SO = SH.[No_]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE
										(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
											)
										)
							) OSO
					GROUP BY OSO.CUST_NO, OSO.BRANCHES, OSO.SALESMAN
				) TTL
		GROUP BY TTL.GROUP_NO, TTL.GROUP_DESC, TTL.GROUP_ITEM_CAT, TTL.ITEM_CAT, TTL.BRANCHES, TTL.SALESMAN;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--Laporan Sales Revenue PMP
	IF @Action IN ('SRPMP') 
	BEGIN
		--
		-- Insert Target Sales
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue - PMP' AS GROUP_DESC
							,XX.GROUP_ITEM_CAT
							,XX.ITEM_CAT
							,XX.BRANCHES 
							, SUM(XX.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(								
								SELECT	'PMP' AS GROUP_ITEM_CAT
										, 'MANAGED SERVICE' AS ITEM_CAT
										, X.DIM_BRANCH AS BRANCHES 
										, SUM(X.Amount) AS AMOUNT
								FROM	(
											SELECT	'AUTOJAYA' AS COMPANY
													, SIL.[Amount]	
													, DIMH.DIM_BRANCH
											FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] SIL ON SIL.[Document No_] = SIH.[No_]
											LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] SCM ON SCM.[Applies-to Doc_ No_] = SIH.[No_]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APPL
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS DIM_BRANCH
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMH ON DIMH.DIM_ID = SIH.[Dimension Set ID]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS DIM_ITEM_CAT
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = SIL.[Dimension Set ID]
											WHERE SCM.[No_] IS NULL
													AND SIH.[No_] LIKE 'SIAR%'
													AND SIL.[Type] <> 0
													AND DIMS.DIM_ITEM_CAT = 'PS05'
													AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date] <=  @TglInvUpto)
													AND DIMH.DIM_APPL <> 'MSRV'
											UNION ALL
											SELECT	'SOLUSI' AS COMPANY
													, SIL.[Amount]	
													, DIMH.DIM_BRANCH
											FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH
											INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] SIL ON SIL.[Document No_] = SIH.[No_]
											LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] SCM ON SCM.[Applies-to Doc_ No_] = SIH.[No_]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APPL
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS DIM_BRANCH
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMH ON DIMH.DIM_ID = SIH.[Dimension Set ID]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS DIM_ITEM_CAT
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = SIL.[Dimension Set ID]
											WHERE SCM.[No_] IS NULL
													AND SIH.[No_] LIKE 'SISR%'
													AND SIL.[Type] <> 0
													AND DIMS.DIM_ITEM_CAT = 'PS05'
													AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date] <=  @TglInvUpto)
													AND DIMH.DIM_APPL <> 'MSRV'
										) X
								GROUP BY X.DIM_BRANCH								
								UNION ALL
								SELECT	'PMP' AS GROUP_ITEM_CAT
										,CASE	WHEN X.ITEM_CAT = 'RFID' THEN 'RADIO FREQUENCY IDENTIFICATION'
												WHEN X.ITEM_CAT = 'CYBSEC' THEN 'CYBER SECURITY'
												WHEN X.ITEM_CAT = 'MSRV' THEN 'MANAGED SERVICE'
											END AS ITEM_CAT
										,X.BRANCHES 
										,X.AMOUNT
								FROM (
								SELECT	'SALES ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'MSRV' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034')
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								WHERE ASCY.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								WHERE CMLM.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034')
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								WHERE ASPY.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND  DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'MSRV' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND  DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
										) SLC								
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'MSRV' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END	 AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034')
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								WHERE ASCY.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								WHERE CMLM.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										, SUM(ASPY.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																, UM.BRANCHES
																, UM.SALESMAN
																,	CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																			UM.AMOUNT 
																		ELSE 
																			--CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0) < ISNULL(INV.AMOUNT,0) THEN
																			--	SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																			--ELSE
																				ISNULL(INV.AMOUNT,0)
																			--END
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT IN ('UMST210032', 'UMST210034')
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								WHERE ASPY.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'MSRV' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
													AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													AND DIMS.ITEM_CAT IN ('RFID', 'CYBSEC', 'MSRV')
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								) X
							) XX
					GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT, XX.BRANCHES 
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'Outs SO (as per Today - This Year Only)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, SUM(OSO.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	
										'PMP' AS GROUP_ITEM_CAT
										, 'MANAGED SERVICE' AS ITEM_CAT
										, X.DIM_BRANCH AS BRANCHES 
										, SUM(X.Amount) AS AMOUNT
										, DATEPART(QUARTER,  X.[Order Date]) AS Q_OUT_SO
										, DATEPART(YEAR,  X.[Order Date]) AS YEAR_OUT_SO 
								FROM	(
											SELECT	'AUTOJAYA' AS COMPANY
													, SIH.[Order Date]
													, SIL.[Amount]	
													, DIMH.DIM_BRANCH
											FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SIH
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Line] SIL ON SIL.[Document No_] = SIH.[No_] AND SIL.[Document Type] = SIH.[Document Type]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APPL
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS DIM_BRANCH
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMH ON DIMH.DIM_ID = SIH.[Dimension Set ID]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS DIM_ITEM_CAT
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = SIL.[Dimension Set ID]
											WHERE	SIH.[Document Type] = 1 
													AND  SIH.[No_] LIKE 'SOAR%'
													AND SIL.[Type] <> 0
													AND DIMS.DIM_ITEM_CAT = 'PS05'
													AND
														(
															(
																SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
																SUBSTRING(CONVERT(varchar, SIH.[Order Date], 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) 
															)
																OR
															(
																SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
																SUBSTRING(CONVERT(varchar, SIH.[Order Date], 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
															)
														)
													AND DIMH.DIM_APPL <> 'MSRV'
											UNION ALL
											SELECT	'SOLUSI' AS COMPANY
													, SIH.[Order Date]
													, SIL.[Amount]	
													, DIMH.DIM_BRANCH
											FROM [ACS].[dbo].[SOLUSI$Sales Header] SIH
											INNER JOIN [ACS].[dbo].[SOLUSI$Sales Line] SIL ON SIL.[Document No_] = SIH.[No_] AND SIL.[Document Type] = SIH.[Document Type]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APPL
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS DIM_BRANCH
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMH ON DIMH.DIM_ID = SIH.[Dimension Set ID]
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS DIM_ITEM_CAT
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = SIL.[Dimension Set ID]
											WHERE	SIH.[Document Type] = 1 AND  SIH.[No_] LIKE 'SOAR%'
													AND SIL.[Type] <> 0
													AND DIMS.DIM_ITEM_CAT = 'PS05'
													AND
														(
															(
																SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
																SUBSTRING(CONVERT(varchar, SIH.[Order Date], 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) 
															)
																OR
															(
																SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
																SUBSTRING(CONVERT(varchar, SIH.[Order Date], 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
															)
														)
													AND DIMH.DIM_APPL <> 'MSRV'
										) X
								GROUP BY X.DIM_BRANCH, X.[Order Date]								
								UNION ALL
								SELECT	
										'PMP' AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'RFID' THEN 'RADIO FREQUENCY IDENTIFICATION'
												WHEN XAX.ITEM_CATEGORY = 'CYBSEC' THEN 'CYBER SECURITY'
												WHEN XAX.ITEM_CATEGORY = 'MSRV' THEN 'MANAGED SERVICE'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[Shortcut Dimension 1 Code] AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, DIMS.DIM_APP AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = SH.[Dimension Set ID]
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,DIMS.DIM_APP AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMH.[Dimension Set ID]
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							WHERE DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], DIMS.DIM_APP
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,DIMS.DIM_APP AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMH.[Dimension Set ID]
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							WHERE DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], DIMS.DIM_APP
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = DIMS.DIM_APP
																	WHERE	SH.[Document Type] = 1 
																			AND DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, SH.[Shortcut Dimension 1 Code] AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, DIMS.DIM_APP AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = SH.[Dimension Set ID]
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,DIMS.DIM_APP AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMH.[Dimension Set ID]
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							WHERE  DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], DIMS.DIM_APP
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,DIMS.DIM_APP AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'APPLICATION' THEN [Dimension Value Code] ELSE NULL END) AS DIM_APP
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMH.[Dimension Set ID]
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							WHERE DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], DIMS.DIM_APP
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	WHERE	SH.[Document Type] = 1
																			AND DIMS.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) 
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Pipeline (This Year Only)' AS GROUP_DESC
							, PPL.GROUP_ITEM_CAT
							, PPL.ITEM_CAT
							, PPL.BRANCHES 
							, SUM(PPL.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	
										'PMP' AS GROUP_ITEM_CAT
										,CASE	WHEN YYY.DIM_APP = 'RFID' THEN 'RADIO FREQUENCY IDENTIFICATION'
												WHEN YYY.DIM_APP = 'CYBSEC' THEN 'CYBER SECURITY'
												WHEN YYY.DIM_APP = 'MSRV' THEN 'MANAGED SERVICE'
											END AS ITEM_CAT
										, YYY.CABANG AS BRANCHES 
										, SUM(YYY.QTY_OUT * YYY.UNIT_PRICE) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
													,SOH.[No_] AS BSO_NO
													,SOH.[Salesperson Code] AS SALES_CODE
													,SOH.[Responsibility Center] AS CABANG
													,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
															'*) '+SOH.[Sell-to Customer Name]
														ELSE
															SOH.[Sell-to Customer Name]
														END AS CUSTOMER
													,SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
													,SOL.[Warranty Code] AS STATUS_DTL
													, 	CASE WHEN SOL.[Warranty Code] = '' THEN
															SUBSTRING(SOH.[Posting Description], 1,1)
														ELSE
															CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
														END AS SIZE_PROJECT
													,SOH.[Sell-to County] AS SPV_BY
													,SOL.[No_] AS ITEM
													,SOL.[Description] AS ITEM_DESC
													,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
													,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
													,SOL.[Quantity] AS QTY_OUT
													,SOL.[Unit Price] AS UNIT_PRICE
													,DIMD.DIM_PRINCIPAL
													,DIMH.DIM_APP
													,SOH.[Payment Discount _] AS JML_TAHUN
													,SOL.[Shipment Date] AS EXP_PO
											FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SOH
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
											LEFT JOIN	(
															SELECT X.[Dimension Set ID]
																	,MAX(CASE WHEN X.[Dimension Code] = 'APPLICATION' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_APP
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry] X
															GROUP BY [Dimension Set ID]
														) DIMH ON DIMH.[Dimension Set ID] = SOH.[Dimension Set ID]
											LEFT JOIN	(
															SELECT X.[Dimension Set ID]
																	,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																	,MAX(CASE WHEN X.[Dimension Code] = 'APPLICATION' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_APP
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry] X
															GROUP BY [Dimension Set ID]
														) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
											WHERE	SOH.[No_ Series] IN ('SBOM', 'SBOMS') AND
													DIMH.DIM_APP IN ('RFID', 'CYBSEC', 'MSRV')
											) YYY
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, YYY.EXP_PO, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) 
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, YYY.EXP_PO, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)
											)
										)
								GROUP BY YYY.DIM_APP, YYY.CABANG
							) PPL
					GROUP BY	PPL.GROUP_ITEM_CAT
								, PPL.ITEM_CAT
								, PPL.BRANCHES 
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--
	IF @Action = 'DELETE' 
	BEGIN
		DELETE FROM [dbo].[TEMP08_SALES_REVENUE] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP21_GL_ENTRY] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP22_UM_CM] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP23_INVOICE_UM] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP24_INVOICE_UM_FINAL] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP25_INVOICE_CM_UM] WHERE [PROSES_ID] = @ProsesId;
		DELETE FROM [dbo].[TEMP26_ADJ_UM] WHERE [PROSES_ID] = @ProsesId;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'DELETE SR BERHASIL', GETDATE());
		RETURN  ;
	END;
END;
