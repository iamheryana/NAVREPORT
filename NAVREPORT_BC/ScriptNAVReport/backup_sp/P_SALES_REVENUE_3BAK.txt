USE [NavBI]
GO
/****** Object:  StoredProcedure [dbo].[P_SALES_REVENUE_3BAK]    Script Date: 07-02-2023 4:59:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[P_SALES_REVENUE_3BAK] 
	@ProsesId  nvarchar(100) ,   
	@TglFrom  datetime , 
	@TglUpto  datetime , 
	@Company  nvarchar(15) ,
	@Action  nvarchar(15)
AS   
BEGIN
	DECLARE @TglInvFrom DATETIME = CAST(@TglFrom AS DATETIME);
	DECLARE @TglInvUpto DATETIME = CAST(@TglUpto AS DATETIME);
	--
	IF @Action = 'SR'
	BEGIN
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES 
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
							,X.ITEM_CAT
							,X.BRANCHES 
							,X.SALESMAN
							,SUM(X.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'SALES ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END	 AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										, SUM(ASPY.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																, UM.BRANCHES
																, UM.SALESMAN
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
							) X
					GROUP BY X.ITEM_CAT, X.BRANCHES, X.SALESMAN
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	--
	--
	IF @Action IN ('SR2', 'SR3', 'SR4') 
	BEGIN
		--
		-- Insert Target Sales
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	0 AS GROUP_NO
							,	CASE WHEN DATEPART(month, @TglInvUpto) IN (1,2,3,4) THEN
									'Target - Semester I ' + CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								ELSE
									'Target - '+CAST(DATEPART(YEAR, @TglInvUpto) AS VARCHAR)
								END AS GROUP_DESC
							, '' AS GROUP_ITEM_CAT
							, '' AS ITEM_CAT
							, '' AS BRANCHES
							, SUM(TGT.AMT_TARGET) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CAST(CMP.[Description] AS DECIMAL(38,20)) AS AMT_TARGET
										,	CASE WHEN	SUBSTRING(CMP.[No_],1,4) = SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) THEN
												CASE WHEN (DATEPART(month, @TglInvUpto) IN (1,2,3,4)) THEN
													CASE WHEN SUBSTRING(CMP.[No_],9,2) = 'S1' THEN
														'Y'
													ELSE
														'N'
													END
												ELSE
													'Y'
												END
											ELSE
												'N'
											END AS TARGET_VALID
								FROM [ACS].[dbo].[AUTOJAYA$Campaign]  CMP
								WHERE	CMP.[Description] <> ''
										AND CMP.[Salesperson Code] = ''
							) TGT
					WHERE TGT.TARGET_VALID = 'Y'
					UNION ALL
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,XX.GROUP_ITEM_CAT
							,XX.ITEM_CAT
							,XX.BRANCHES 
							, SUM(XX.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN X.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN X.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN X.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN X.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN X.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN X.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,X.BRANCHES 
										,X.AMOUNT

								FROM (
								SELECT	'SALES ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																		SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																END AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, GLE.[Amount]
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-) Accured Sales Current Year' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END	 AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																									,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																									,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																									,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT
										'(-) Accured Sales Current Year' AS NOTE
										,CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
										,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,DIMS.SALESMAN
													,CMH.[Posting Date] AS TGL_CM
													,CMH.[No_] AS NO_CM
													,CMH.[External Document No_] AS NO_PO_CUST
													,CMH.[Bill-to Customer No_] AS CUST_NO
													,CMH.[Bill-to Name] AS CUST_NAME
													,CMH.[Prepayment Order No_] AS NO_SO
													, (SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
											LEFT JOIN	(
															SELECT CLE.[Entry No_]
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																	, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
															FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
															LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
															WHERE CLE.[Document Type] IN (2,3)
															AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
														) UM ON UM.NO_CM = GLE.[Document No_]
											LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
											WHERE GLE.[G_L Account No_] = '400.110.03'
													AND GLE.[Document No_] NOT LIKE 'UM%'
													AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
													AND (SIH.[Posting Date] < @TglInvFrom)
											GROUP BY	DIMS.ITEM_CAT
														,DIMS.BRANCHES
														,DIMS.SALESMAN
														,CMH.[Posting Date]
														,CMH.[No_]
														,CMH.[External Document No_]
														,CMH.[Bill-to Customer No_]
														,CMH.[Bill-to Name]
														,CMH.[Prepayment Order No_]
										) CMLM
								GROUP BY CMLM.BRANCHES
										,CMLM.ITEM_CAT
										,CMLM.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										, SUM(ASPY.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																, UM.BRANCHES
																, UM.SALESMAN
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < @TglInvFrom)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT	DIM.DIM_ID
														,MAX(DIM.BRANCHES) AS BRANCHES
														,MAX(DIM.ITEM_CAT) AS ITEM_CAT
														,MAX(DIM.SALESMAN) AS SALESMAN
												FROM	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
														) DIM
												GROUP BY DIM.DIM_ID
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SUM(SLC.[Amount]) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, GLE.[Amount]
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
								) X
							) XX
					GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT, XX.BRANCHES 
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'Uang Muka (as per Today)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN UMX.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN UMX.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN UMX.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN UMX.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN UMX.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN UMX.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,UMX.BRANCHES
										,(SUM(UMX.AMOUNT)*-1) AS AMOUNT					
								FROM	(
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME' AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT
											UNION ALL
											SELECT	DIMS.ITEM_CAT
													,DIMS.BRANCHES
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME'AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT
										) UMX
								GROUP BY UMX.ITEM_CAT, UMX.BRANCHES
								UNION ALL
								SELECT	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN OUM.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
												WHEN OUM.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN OUM.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
												WHEN OUM.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
												WHEN OUM.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN OUM.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										,OUM.BRANCHES
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT
											UNION ALL
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'SOLUSI' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.ITEM_CAT, OUM.BRANCHES
							) OSO
					GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT, OSO.BRANCHES
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							, OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SR5'
	BEGIN
		-- Insert Sales Revenue
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XXX.GROUP_NO, XXX.BRANCHES, XXX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XXX.GROUP_NO
				, XXX.GROUP_DESC
				, XXX.GROUP_ITEM_CAT
				, XXX.ITEM_CAT
				, XXX.BRANCHES 
				, XXX.AMOUNT
				, XXX.Q_OUT_SO
				, XXX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'Sales Revenue' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, XX.ITEM_CAT
							, XX.BRANCHES
							, SUM(XX.AMOUNT) AS AMOUNT	
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	
										CASE WHEN X.ITEM_CAT = 'HW01' THEN
											CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
													WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
													ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
											END
										ELSE
											'4. EBS & PS'
										END AS ITEM_CAT
										,X.BRANCHES
										,X.AMOUNT
								FROM	(
											SELECT	'SALES ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											UNION ALL
											SELECT	'(-) Accured Sales Current Year' AS NOTE
													,ASCY.BRANCHES
													,ASCY.ITEM_CAT
													,ASCY.SALESMAN
													,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
													,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
											FROM (
													SELECT	OUM.ITEM_CAT
															,OUM.BRANCHES
															,OUM.SALESMAN
															,OUM.PRODUCT
															,OUM.AMOUNT
													FROM	(
																SELECT	UM.ITEM_CAT
																		,UM.BRANCHES
																		,UM.SALESMAN
																		,UM.PRODUCT
																		,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																				CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																					SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				END
																			END AS AMOUNT
																FROM	(
																			SELECT	DIMS.ITEM_CAT
																					,DIMS.BRANCHES
																					,DIMS.SALESMAN
																					,DIMS.PRODUCT
																					,SIH.[Posting Date] AS TGL_UM
																					,SIH.[No_] AS NO_UM
																					,SIH.[External Document No_] AS NO_PO_CUST
																					,SIH.[Bill-to Customer No_] AS CUST_NO
																					,SIH.[Bill-to Name] AS CUST_NAME
																					,SIH.[Prepayment Order No_] AS NO_SO
																					, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																			FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																			LEFT JOIN	(
																							SELECT	DIM.DIM_ID
																									,MAX(DIM.BRANCHES) AS BRANCHES
																									,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																									,MAX(DIM.SALESMAN) AS SALESMAN
																									,MAX(DIM.PRODUCT) AS PRODUCT
																							FROM	(
																										SELECT [Dimension Set ID] AS DIM_ID
																												,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																												,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																												,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																												,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																										FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																									) DIM
																							GROUP BY DIM.DIM_ID
																						) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																			LEFT JOIN	(
																							SELECT CLE.[Entry No_]
																									, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																									, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																							FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																							LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																							WHERE CLE.[Document Type] IN (2,3)
																							AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																						) CM ON CM.NO_UM = GLE.[Document No_]
																			LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																			WHERE GLE.[G_L Account No_] = '400.110.03'
																					AND GLE.[Document No_] LIKE 'UM%'
																					AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																					AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																			GROUP BY DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,DIMS.PRODUCT
																						,SIH.[Posting Date]
																						,SIH.[No_]
																						,SIH.[External Document No_]
																						,SIH.[Bill-to Customer No_]
																						,SIH.[Bill-to Name]
																						,SIH.[Prepayment Order No_]
																		) UM
																LEFT JOIN	(
																				SELECT	DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,SIH.[Order No_] AS NO_SO
																						,MAX(SIH.[Posting Date]) AS TGL_INV
																						,SUM(GLE.[Amount]) AS AMOUNT
																				FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																				LEFT JOIN	(
																								SELECT	DIM.DIM_ID
																										,MAX(DIM.BRANCHES) AS BRANCHES
																										,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																										,MAX(DIM.SALESMAN) AS SALESMAN
																								FROM	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																													,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																													,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																										) DIM
																								GROUP BY DIM.DIM_ID
																							) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																				WHERE GLE.[G_L Account No_] = '400.110.03'
																						AND GLE.[Document No_] NOT LIKE 'UM%'
																						AND GLE.[Posting Date] <=  @TglInvUpto
																				GROUP BY DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,SIH.[Order No_]
																			) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
															) OUM
													WHERE OUM.AMOUNT > 0
													) ASCY
											GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
											UNION ALL
											SELECT
													'(-) Accured Sales Current Year' AS NOTE
													,CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
													,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,CMH.[Posting Date] AS TGL_CM
																,CMH.[No_] AS NO_CM
																,CMH.[External Document No_] AS NO_PO_CUST
																,CMH.[Bill-to Customer No_] AS CUST_NO
																,CMH.[Bill-to Name] AS CUST_NAME
																,CMH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) UM ON UM.NO_CM = GLE.[Document No_]
														LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
														WHERE GLE.[G_L Account No_] = '400.110.03'
																AND GLE.[Document No_] NOT LIKE 'UM%'
																AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
																AND (SIH.[Posting Date] < @TglInvFrom)
														GROUP BY	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,DIMS.PRODUCT
																	,CMH.[Posting Date]
																	,CMH.[No_]
																	,CMH.[External Document No_]
																	,CMH.[Bill-to Customer No_]
																	,CMH.[Bill-to Name]
																	,CMH.[Prepayment Order No_]
													) CMLM
											GROUP BY CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,CMLM.PRODUCT
											UNION ALL
											SELECT	'(+) Accured Sales Previous Year' AS NOTE
													,ASPY.BRANCHES
													,ASPY.ITEM_CAT
													,ASPY.SALESMAN
													,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
													,SUM(ASPY.AMOUNT)  AS AMOUNT
											FROM	(
														SELECT	OUM.ITEM_CAT
																,OUM.BRANCHES
																,OUM.SALESMAN
																,OUM.PRODUCT
																,OUM.AMOUNT
														FROM	(
																	SELECT	UM.ITEM_CAT
																			,UM.BRANCHES
																			,UM.SALESMAN
																			,UM.PRODUCT
																			, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																				CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																					UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				END
																				END AS AMOUNT
																	FROM	(
																				SELECT	DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.PRODUCT
																						,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																						,SIH.[Posting Date] AS TGL_UM
																						,SIH.[No_] AS NO_UM
																						,SIH.[External Document No_] AS NO_PO_CUST
																						,SIH.[Bill-to Customer No_] AS CUST_NO
																						,SIH.[Bill-to Name] AS CUST_NAME
																						,SIH.[Prepayment Order No_] AS NO_SO
																						, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																				FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																				LEFT JOIN	(
																								SELECT	DIM.DIM_ID
																										,MAX(DIM.BRANCHES) AS BRANCHES
																										,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																										,MAX(DIM.SALESMAN) AS SALESMAN
																										,MAX(DIM.PRODUCT) AS PRODUCT
																								FROM	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																													,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																													,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																													,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																										) DIM
																								GROUP BY DIM.DIM_ID
																							) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																				LEFT JOIN	(
																								SELECT CLE.[Entry No_]
																										, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																										, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																								FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																								WHERE CLE.[Document Type] IN (2,3)
																								AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																									(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																							) CM ON CM.NO_UM = GLE.[Document No_]
																				LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																				WHERE GLE.[G_L Account No_] = '400.110.03'
																						AND GLE.[Document No_] LIKE 'UM%'
																						AND CM.NO_CM IS NULL
																						AND (SIH.[Posting Date] < @TglInvFrom)
																				GROUP BY DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,DIMS.PRODUCT
																							,SIH.[Posting Date]
																							,SIH.[No_]
																							,SIH.[External Document No_]
																							,SIH.[Bill-to Customer No_]
																							,SIH.[Bill-to Name]
																							,SIH.[Prepayment Order No_]
																			) UM
																	LEFT JOIN	(
																					SELECT	DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,SIH.[Order No_] AS NO_SO
																							,MAX(SIH.[Posting Date]) AS TGL_INV
																							,SUM(GLE.[Amount]) AS AMOUNT
																					FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																					LEFT JOIN	(
																									SELECT	DIM.DIM_ID
																											,MAX(DIM.BRANCHES) AS BRANCHES
																											,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																											,MAX(DIM.SALESMAN) AS SALESMAN
																									FROM	(
																												SELECT [Dimension Set ID] AS DIM_ID
																														,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																														,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																														,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																												FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											) DIM
																									GROUP BY DIM.DIM_ID
																								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																					WHERE GLE.[G_L Account No_] = '400.110.03'
																							AND GLE.[Document No_] NOT LIKE 'UM%'
																							AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																					GROUP BY DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,SIH.[Order No_]
																				) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
																) OUM
														WHERE OUM.AMOUNT > 0
													) ASPY
											GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	DIMS.BRANCHES
																,DIMS.ITEM_CAT
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, GLE.[Amount]
														FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Document No_] <> '9SIAT200197'
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES ALL' AS NOTE
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> ''AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'Sales - LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto)
											UNION ALL
											SELECT	'(-) Accured Sales Current Year' AS NOTE
													,ASCY.BRANCHES
													,ASCY.ITEM_CAT
													,ASCY.SALESMAN
													,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
													,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
											FROM (
													SELECT	OUM.ITEM_CAT
															,OUM.BRANCHES
															,OUM.SALESMAN
															,OUM.PRODUCT
															,OUM.AMOUNT
													FROM	(
																SELECT	UM.ITEM_CAT
																		,UM.BRANCHES
																		,UM.SALESMAN
																		,UM.PRODUCT
																		,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																			CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																			SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																		END
																		END	 AS AMOUNT
																FROM	(
																			SELECT	DIMS.ITEM_CAT
																					,DIMS.BRANCHES
																					,DIMS.SALESMAN
																					,DIMS.PRODUCT
																					,SIH.[Posting Date] AS TGL_UM
																					,SIH.[No_] AS NO_UM
																					,SIH.[External Document No_] AS NO_PO_CUST
																					,SIH.[Bill-to Customer No_] AS CUST_NO
																					,SIH.[Bill-to Name] AS CUST_NAME
																					,SIH.[Prepayment Order No_] AS NO_SO
																					, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																			FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																			LEFT JOIN	(
																							SELECT	DIM.DIM_ID
																									,MAX(DIM.BRANCHES) AS BRANCHES
																									,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																									,MAX(DIM.SALESMAN) AS SALESMAN
																									,MAX(DIM.PRODUCT) AS PRODUCT
																							FROM	(
																										SELECT [Dimension Set ID] AS DIM_ID
																												,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																												,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																												,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																												,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																										FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																									) DIM
																							GROUP BY DIM.DIM_ID
																						) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																			LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																			LEFT JOIN	(
																							SELECT CLE.[Entry No_]
																									, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																									, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																							FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																							LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																							WHERE CLE.[Document Type] IN (2,3)
																							AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																								(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																						) CM ON CM.NO_UM = GLE.[Document No_]
																			LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																			WHERE GLE.[G_L Account No_] = '400.110.03'
																					AND GLE.[Document No_] LIKE 'UM%'
																					AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																					AND (SIH.[Posting Date] >= @TglInvFrom AND SIH.[Posting Date]<= @TglInvUpto)
																			GROUP BY DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,DIMS.PRODUCT
																						,SIH.[Posting Date]
																						,SIH.[No_]
																						,SIH.[External Document No_]
																						,SIH.[Bill-to Customer No_]
																						,SIH.[Bill-to Name]
																						,SIH.[Prepayment Order No_]
																		) UM
																LEFT JOIN	(
																				SELECT	DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,SIH.[Order No_] AS NO_SO
																						,MAX(SIH.[Posting Date]) AS TGL_INV
																						,SUM(GLE.[Amount]) AS AMOUNT
																				FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																				LEFT JOIN	(
																								SELECT	DIM.DIM_ID
																										,MAX(DIM.BRANCHES) AS BRANCHES
																										,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																										,MAX(DIM.SALESMAN) AS SALESMAN
																								FROM	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																													,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																													,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																										) DIM
																								GROUP BY DIM.DIM_ID
																							) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																				WHERE GLE.[G_L Account No_] = '400.110.03'
																						AND GLE.[Document No_] NOT LIKE 'UM%'
																						AND GLE.[Posting Date] <=  @TglInvUpto
																				GROUP BY DIMS.ITEM_CAT
																						,DIMS.BRANCHES
																						,DIMS.SALESMAN
																						,SIH.[Order No_]
																			) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
															) OUM
													WHERE OUM.AMOUNT > 0
													) ASCY
											GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
											UNION ALL
											SELECT
													'(-) Accured Sales Current Year' AS NOTE
													,CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
													,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,CMH.[Posting Date] AS TGL_CM
																,CMH.[No_] AS NO_CM
																,CMH.[External Document No_] AS NO_PO_CUST
																,CMH.[Bill-to Customer No_] AS CUST_NO
																,CMH.[Bill-to Name] AS CUST_NAME
																,CMH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) UM ON UM.NO_CM = GLE.[Document No_]
														LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
														WHERE GLE.[G_L Account No_] = '400.110.03'
																AND GLE.[Document No_] NOT LIKE 'UM%'
																AND (CMH.[Posting Date] >= @TglInvFrom AND CMH.[Posting Date]<= @TglInvUpto)
																AND (SIH.[Posting Date] < @TglInvFrom)
														GROUP BY	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,DIMS.PRODUCT
																	,CMH.[Posting Date]
																	,CMH.[No_]
																	,CMH.[External Document No_]
																	,CMH.[Bill-to Customer No_]
																	,CMH.[Bill-to Name]
																	,CMH.[Prepayment Order No_]
													) CMLM
											GROUP BY CMLM.BRANCHES
													,CMLM.ITEM_CAT
													,CMLM.SALESMAN
													,CMLM.PRODUCT
											UNION ALL
											SELECT	'(+) Accured Sales Previous Year' AS NOTE
													,ASPY.BRANCHES
													,ASPY.ITEM_CAT
													,ASPY.SALESMAN
													,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
													, SUM(ASPY.AMOUNT) AS AMOUNT
											FROM	(
														SELECT	OUM.ITEM_CAT
																,OUM.BRANCHES
																,OUM.SALESMAN
																,OUM.PRODUCT
																,OUM.AMOUNT
														FROM	(
																	SELECT	UM.ITEM_CAT
																			, UM.BRANCHES
																			, UM.SALESMAN
																			, UM.PRODUCT
																			, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																				CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																					UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																				END
																				END AS AMOUNT
																	FROM	(
																				SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																						,MAX(DIMS.BRANCHES) AS BRANCHES
																						,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																						,DIMS.PRODUCT
																						,SIH.[Posting Date] AS TGL_UM
																						,SIH.[No_] AS NO_UM
																						,SIH.[External Document No_] AS NO_PO_CUST
																						,SIH.[Bill-to Customer No_] AS CUST_NO
																						,SIH.[Bill-to Name] AS CUST_NAME
																						,SIH.[Prepayment Order No_] AS NO_SO
																						, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																				FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																				LEFT JOIN	(
																								SELECT	DIM.DIM_ID
																										,MAX(DIM.BRANCHES) AS BRANCHES
																										,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																										,MAX(DIM.SALESMAN) AS SALESMAN
																										,MAX(DIM.PRODUCT) AS PRODUCT
																								FROM	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																													,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																													,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																													,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																										) DIM
																								GROUP BY DIM.DIM_ID
																							) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																				LEFT JOIN	(
																								SELECT CLE.[Entry No_]
																										, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																										, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																								FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																								WHERE CLE.[Document Type] IN (2,3)
																								AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																									(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																							) CM ON CM.NO_UM = GLE.[Document No_]
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																				WHERE GLE.[G_L Account No_] = '400.110.03'
																						AND GLE.[Document No_] LIKE 'UM%'
																						AND CM.NO_CM IS NULL
																						AND (SIH.[Posting Date] < @TglInvFrom)
																				GROUP BY DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,DIMS.PRODUCT
																							,SIH.[Posting Date]
																							,SIH.[No_]
																							,SIH.[External Document No_]
																							,SIH.[Bill-to Customer No_]
																							,SIH.[Bill-to Name]
																							,SIH.[Prepayment Order No_]
																			) UM
																	LEFT JOIN	(
																					SELECT	DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,SIH.[Order No_] AS NO_SO
																							,MAX(SIH.[Posting Date]) AS TGL_INV
																							,SUM(GLE.[Amount]) AS AMOUNT
																					FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																					LEFT JOIN	(
																									SELECT	DIM.DIM_ID
																											,MAX(DIM.BRANCHES) AS BRANCHES
																											,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																											,MAX(DIM.SALESMAN) AS SALESMAN
																									FROM	(
																												SELECT [Dimension Set ID] AS DIM_ID
																														,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																														,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																														,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																												FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											) DIM
																									GROUP BY DIM.DIM_ID
																								) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																					WHERE GLE.[G_L Account No_] = '400.110.03'
																							AND GLE.[Document No_] NOT LIKE 'UM%'
																							AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
																					GROUP BY DIMS.ITEM_CAT
																							,DIMS.BRANCHES
																							,DIMS.SALESMAN
																							,SIH.[Order No_]
																				) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
																) OUM
														WHERE OUM.AMOUNT > 0
													) ASPY
											GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
													,DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,DIMS.PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
											UNION ALL
											SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
													,'10' BRANCHES
													,'HW01' AS ITEM_CAT
													,'OFC' AS SALESMAN
													,'XXX' AS PRODUCT
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.04' AND
													(GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
																,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
																,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND (GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <= @TglInvUpto)
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
											UNION ALL
											SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
													, SLC.BRANCHES
													, SLC.ITEM_CAT
													, SLC.SALESMAN
													, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
													, SUM(SLC.[Amount]) AS AMOUNT
											FROM	(
														SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
																,'(-/+) Others Management Adjustment' AS SALES_TITLE2
																,'SLS-0303' AS SORT_SLS
																, DIMS.BRANCHES
																, DIMS.ITEM_CAT
																, DIMS.SALESMAN
																, DIMS.PRODUCT
																, GLE.[Amount]
														FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
																AND GLE.[Posting Date] >= @TglInvFrom AND GLE.[Posting Date] <=  @TglInvUpto
													) SLC
											GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
										) X
							) XX
					GROUP BY XX.ITEM_CAT, XX.BRANCHES
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'Uang Muka (as per Today)' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	UMX.BRANCHES
										,	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN
												CASE WHEN UMX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN UMX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										, (SUM(UMX.AMOUNT)*-1) AS AMOUNT				
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME' AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
											UNION ALL
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
													,SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
																	,MAX(DIM.PRODUCT) AS PRODUCT
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																				,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME' AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
										) UMX
								GROUP BY UMX.BRANCHES, UMX.ITEM_CAT, UMX.PRODUCT
								UNION ALL
								SELECT	OUM.BRANCHES
										,	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN
												CASE WHEN OUM.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN OUM.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										,SUM(OUM.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.PRODUCT
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.PRODUCT
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.PRODUCT
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																							,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.PRODUCT
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
											UNION ALL
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.PRODUCT
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'SOLUSI' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.PRODUCT
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.PRODUCT
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																							,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.PRODUCT
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
								GROUP BY OUM.BRANCHES, OUM.ITEM_CAT, OUM.PRODUCT
							) OSO
					GROUP BY OSO.ITEM_CAT, OSO.BRANCHES
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'Outstanding SO (as per Today)' AS GROUP_DESC
							,'PS' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
					FROM	(
								SELECT	'PS' AS GROUP_ITEM_CAT
										,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
												CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
														WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
														ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
												END
											ELSE
												'4. EBS & PS'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.PRODUCT
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT	SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				) SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[AUTOJAYA$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, SL.PRODUCT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT	X.[Document No_]
																							, X.[Shortcut Dimension 2 Code]
																							, X.PRODUCT
																							,SUM(X.QTY) AS QTY
																							,SUM(X.QTY_INV)AS QTY_INV
																							,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT SAL.[Document No_]
																									, SAL.[Shortcut Dimension 2 Code]
																									, DIMS.PRODUCT
																									, SAL.[Quantity] AS QTY
																									, SAL.[Quantity Invoiced] AS QTY_INV
																									, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																										(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																										ELSE
																										SAL.[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																							WHERE	SAL.[Document Type] = 1 AND
																									SAL.[Quantity] <> SAL.[Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT	SAL.[Document No_]
																								, SAL.[Shortcut Dimension 2 Code]
																								, DIMS.PRODUCT
																								, SUM(SAL.[Amount]) AS AMOUNT_TTL
																					FROM [ACS].[dbo].[SOLUSI$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE SAL.[Document Type] = 1
																					GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,Y.PRODUCT
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,DIMS.PRODUCT
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							LEFT JOIN	(
																											SELECT [Dimension Set ID] AS DIM_ID
																													,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																											FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																											GROUP BY [Dimension Set ID]
																										) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE  (XXX.COMPANY = @Company OR @Company = 'ALL') AND
													XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY OSO.ITEM_CAT, OSO.BRANCHES, OSO.Q_OUT_SO, OSO.YEAR_OUT_SO
				) XXX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'SRF'
	BEGIN
		INSERT INTO [dbo].[TEMP08_SALES_REVENUE]
				(	[TEMP08_ID]
					,[MODE]
					,[PROSES_ID]
					,[GROUP_NO]
					,[GROUP_DESC]
					,[GROUP_ITEM_CAT]
					,[ITEM_CAT]
					,[BRANCHES]
					,[SALESMAN]
					,[AMOUNT]
					,[Q_OUT_SO]
					,[YEAR_OUT_SO]
				)
		SELECT	ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY XX.GROUP_NO, BRANCHES, XX.SALESMAN, XX.ITEM_CAT) AS TEMP08_ID
				, @Action AS MODE
				, @ProsesId AS PROSES_ID
				, XX.GROUP_NO
				, XX.GROUP_DESC
				, XX.GROUP_ITEM_CAT
				, XX.ITEM_CAT
				, XX.BRANCHES
				, XX.SALESMAN
				, XX.AMOUNT
				, XX.Q_OUT_SO
				, XX.YEAR_OUT_SO
		FROM	(
					SELECT	1 AS GROUP_NO
							,'SALES REVENUE' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, SUM(X.AMOUNT) AS AMOUNT
							, X.Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(				
								SELECT	'SALES ALL' AS NOTE
										,GLL.BRANCHES
										,GLL.ITEM_CAT
										,GLL.SALESMAN
										,GLL.Q_OUT_SO
										,SUM(GLL.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,CASE WHEN GLE.[Document No_] = 'PCJR1808/035' THEN 'NGM' ELSE DIMS.SALESMAN END AS SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, SUM(GLE.[Amount]) * -1 AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
													GLE.[G_L Account No_] <> '400.110.04' AND
													DIMS.ITEM_CAT <> '' AND
													(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
											GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Document No_], GLE.[Posting Date]
										) GLL
								GROUP BY GLL.BRANCHES, GLL.ITEM_CAT, GLL.SALESMAN, GLL.Q_OUT_SO
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, GLE.[Amount] * -1 AS AMOUNT
								FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 1' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										, 1 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,UM.TGL_UM
																,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																			SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > (
																																					CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																						@TglInvUpto
																																					ELSE
																																						CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																					END
																																					) ))
																			AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<=	(
																																																CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																																	@TglInvUpto
																																																ELSE
																																																	CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																																END
																																															)
																																																)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																								,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																								,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND GLE.[Posting Date] <=  (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime))
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
														WHERE UM.TGL_UM <=  @TglInvUpto
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 2' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,3 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,UM.TGL_UM
																,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																		CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																			SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																		END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																			AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND SIH.[Posting Date]<= @TglInvUpto)
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																								,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																								,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND GLE.[Posting Date] <=  @TglInvUpto
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
														WHERE UM.TGL_UM <=  @TglInvUpto
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,ASPY.Q_OUT_SO
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,DATEPART(quarter, OUM.TGL_INV) AS Q_OUT_SO
													,OUM.AMOUNT AS AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,INV.TGL_INV
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)))
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																								,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																								,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																						FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.Q_OUT_SO
								UNION ALL
								SELECT	'(+) Accured Sales Previous Semester' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,3 AS Q_OUT_SO
										,SUM(ASPY.AMOUNT)  AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																,UM.BRANCHES
																,UM.SALESMAN
																,INV.TGL_INV
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT	DIM.DIM_ID
																							,MAX(DIM.BRANCHES) AS BRANCHES
																							,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																							,MAX(DIM.SALESMAN) AS SALESMAN
																					FROM	(
																								SELECT [Dimension Set ID] AS DIM_ID
																										,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																										,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																										,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																								FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																							) DIM
																					GROUP BY DIM.DIM_ID
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)))
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT	DIM.DIM_ID
																								,MAX(DIM.BRANCHES) AS BRANCHES
																								,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																								,MAX(DIM.SALESMAN) AS SALESMAN
																						FROM	(
																									SELECT [Dimension Set ID] AS DIM_ID
																											,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																											,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																											,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																									FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																								) DIM
																						GROUP BY DIM.DIM_ID
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										,SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.ITEM_CAT
													,DIMS.SALESMAN
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													,DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													,GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Document No_] <> '9SIAT200197'
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES ALL' AS NOTE
										, DIMS.BRANCHES
										, DIMS.ITEM_CAT
										, DIMS.SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> ''AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'Sales - LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto)
								GROUP BY GLE.[Posting Date]
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 1' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,1 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,UM.TGL_UM
															,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END	 AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																						,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																						,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																				FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > (
																																					CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																						@TglInvUpto
																																					ELSE
																																						CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																					END
																																					) ))
																			AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<=	(
																																																CASE WHEN @TglInvUpto < CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime) THEN
																																																	@TglInvUpto
																																																ELSE
																																																	CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)
																																																END
																																															)
																				)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime))
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(-) Accured Sales Current Year Semester 2' AS NOTE
										,ASCY.BRANCHES
										,ASCY.ITEM_CAT
										,ASCY.SALESMAN
										,3 AS Q_OUT_SO
										,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
								FROM (
										SELECT	OUM.ITEM_CAT
												,OUM.BRANCHES
												,OUM.SALESMAN
												,OUM.AMOUNT
										FROM	(
													SELECT	UM.ITEM_CAT
															,UM.BRANCHES
															,UM.SALESMAN
															,UM.TGL_UM
															,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
																CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
															END	 AS AMOUNT
													FROM	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[External Document No_] AS NO_PO_CUST
																		,SIH.[Bill-to Customer No_] AS CUST_NO
																		,SIH.[Bill-to Name] AS CUST_NAME
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																						,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																						,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																						,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																				FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																LEFT JOIN	(
																				SELECT CLE.[Entry No_]
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																						, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																				FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																				LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																				WHERE CLE.[Document Type] IN (2,3)
																				AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																					(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																			) CM ON CM.NO_UM = GLE.[Document No_]
																LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																WHERE GLE.[G_L Account No_] = '400.110.03'
																		AND GLE.[Document No_] LIKE 'UM%'
																		AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > @TglInvUpto ))
																		AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND SIH.[Posting Date]<= @TglInvUpto)
																GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Posting Date]
																			,SIH.[No_]
																			,SIH.[External Document No_]
																			,SIH.[Bill-to Customer No_]
																			,SIH.[Bill-to Name]
																			,SIH.[Prepayment Order No_]
															) UM
													LEFT JOIN	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_] AS NO_SO
																			,MAX(SIH.[Posting Date]) AS TGL_INV
																			,SUM(GLE.[Amount]) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] NOT LIKE 'UM%'
																			AND GLE.[Posting Date] <=  @TglInvUpto
																	GROUP BY DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,DIMS.SALESMAN
																			,SIH.[Order No_]
																) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
												) OUM
										WHERE OUM.AMOUNT > 0
										) ASCY
								GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
								UNION ALL
								SELECT	'(+) Accured Sales Previous Year' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										,ASPY.Q_OUT_SO
										, SUM(ASPY.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,DATEPART(quarter, OUM.TGL_INV) AS Q_OUT_SO
													,OUM.AMOUNT AS AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																, UM.BRANCHES
																, UM.SALESMAN
																, INV.TGL_INV
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND CM.NO_CM IS NULL
																			AND (SIH.[Posting Date] < (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)))
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																								,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																								,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.Q_OUT_SO
								UNION ALL
								SELECT	'(+) Accured Sales Previous Semester' AS NOTE
										,ASPY.BRANCHES
										,ASPY.ITEM_CAT
										,ASPY.SALESMAN
										, 3 AS Q_OUT_SO
										, SUM(ASPY.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	OUM.ITEM_CAT
													,OUM.BRANCHES
													,OUM.SALESMAN
													,OUM.AMOUNT
											FROM	(
														SELECT	UM.ITEM_CAT
																, UM.BRANCHES
																, UM.SALESMAN
																, INV.TGL_INV
																, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
																	CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																		UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
																	END
																	END AS AMOUNT
														FROM	(
																	SELECT	DIMS.ITEM_CAT
																			,DIMS.BRANCHES
																			,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																			,SIH.[Posting Date] AS TGL_UM
																			,SIH.[No_] AS NO_UM
																			,SIH.[External Document No_] AS NO_PO_CUST
																			,SIH.[Bill-to Customer No_] AS CUST_NO
																			,SIH.[Bill-to Name] AS CUST_NAME
																			,SIH.[Prepayment Order No_] AS NO_SO
																			, (SUM(GLE.[Amount]) * -1) AS AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT CLE.[Entry No_]
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																							, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																					FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																					LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																					WHERE CLE.[Document Type] IN (2,3)
																					AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																						(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																				) CM ON CM.NO_UM = GLE.[Document No_]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
																	WHERE GLE.[G_L Account No_] = '400.110.03'
																			AND GLE.[Document No_] LIKE 'UM%'
																			AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)) ))
																			AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-06-30') AS datetime)))
																	GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[External Document No_]
																				,SIH.[Bill-to Customer No_]
																				,SIH.[Bill-to Name]
																				,SIH.[Prepayment Order No_]
																) UM
														LEFT JOIN	(
																		SELECT	DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_] AS NO_SO
																				,MAX(SIH.[Posting Date]) AS TGL_INV
																				,SUM(GLE.[Amount]) AS AMOUNT
																		FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																								,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																								,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																								,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																						FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																		WHERE GLE.[G_L Account No_] = '400.110.03'
																				AND GLE.[Document No_] NOT LIKE 'UM%'
																				AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-07-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
																		GROUP BY DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Order No_]
																	) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
													) OUM
											WHERE OUM.AMOUNT > 0
										) ASPY
								GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
										,DIMS.BRANCHES
										,DIMS.ITEM_CAT
										,DIMS.SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
										GLE.[G_L Account No_] <> '400.110.04' AND
										DIMS.ITEM_CAT <> '' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, GLE.[Posting Date]
								UNION ALL
								SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
										,'10' BRANCHES
										,'HW01' AS ITEM_CAT
										,'OFC' AS SALESMAN
										, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
										, SUM(GLE.[Amount]) * -1 AS AMOUNT
								FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
								LEFT JOIN	(
												SELECT [Dimension Set ID] AS DIM_ID
														,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
														,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
														,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
												FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
												GROUP BY [Dimension Set ID]
											) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
								WHERE	GLE.[G_L Account No_] = '400.110.04' AND
										(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
								GROUP BY GLE.[Posting Date]
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
													,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= @TglInvUpto)
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
								UNION ALL
								SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
										, SLC.BRANCHES
										, SLC.ITEM_CAT
										, SLC.SALESMAN
										, SLC.Q_OUT_SO
										, SUM(SLC.AMOUNT) AS AMOUNT
								FROM	(
											SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
													,'(-/+) Others Management Adjustment' AS SALES_TITLE2
													,'SLS-0303' AS SORT_SLS
													, DIMS.BRANCHES
													, DIMS.ITEM_CAT
													, DIMS.SALESMAN
													, DATEPART(quarter, GLE.[Posting Date]) AS Q_OUT_SO
													, GLE.[Amount] AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT [Dimension Set ID] AS DIM_ID
																	,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																	,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																	,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
															FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
															GROUP BY [Dimension Set ID]
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
													AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  @TglInvUpto
										) SLC
								GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.Q_OUT_SO
							) X
					GROUP BY X.ITEM_CAT
							, X.BRANCHES
							, X.SALESMAN
							, X.AMOUNT
							, X.Q_OUT_SO
					UNION ALL
					SELECT	2 AS GROUP_NO
							,'UANG MUKA' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							,'' AS ITEM_CAT
							, X2.BRANCHES
							, X2.SALESMAN
							, SUM(X2.AMOUNT) AS AMOUNT
							, 0 AS Q_OUT_SO
							, 0 AS YEAR_OUT_SO
					FROM	(
								SELECT	'OS1' AS GROUP_ITEM_CAT
										,'Uang Muka' AS ITEM_CAT
										,UMX.BRANCHES
										,UMX.SALESMAN
										,(SUM(UMX.AMOUNT)*-1) AS AMOUNT
								FROM	(
											SELECT	DIMS.BRANCHES
													,DIMS.SALESMAN
													,(SUM(GLE.[Amount]) * -1 )AS AMOUNT
											FROM [ACS].[dbo].[AJ-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[AJ-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME' AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES, DIMS.SALESMAN
											UNION ALL
											SELECT	DIMS.BRANCHES
													,DIMS.SALESMAN
													,(SUM(GLE.[Amount]) * -1) AS AMOUNT
											FROM [ACS].[dbo].[SP-ADJ$G_L Entry] GLE
											LEFT JOIN	(
															SELECT	DIM.DIM_ID
																	,MAX(DIM.BRANCHES) AS BRANCHES
																	,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																	,MAX(DIM.SALESMAN) AS SALESMAN
															FROM	(
																		SELECT [Dimension Set ID] AS DIM_ID
																				,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																				,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																				,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		FROM [ACS].[dbo].[SP-ADJ$Dimension Set Entry]
																	) DIM
															GROUP BY DIM.DIM_ID
														) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
											WHERE	GLE.[G_L Account No_] = '400.110.00' AND
													GLE.[Source Code] <> 'CLSINCOME' AND
													GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
													GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
													(
														(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
														(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
													)
											GROUP BY DIMS.BRANCHES,DIMS.SALESMAN
										) UMX
								GROUP BY UMX.BRANCHES,UMX.SALESMAN
								UNION ALL
								SELECT	'OS1' AS GROUP_ITEM_CAT
										,'Uang Muka' AS ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.SALESMAN
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [ACS].[dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											UNION ALL
											SELECT	UM.COMPANY
													,UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.TGL_UM
													,UM.NO_UM
													,UM.NO_SO
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
															SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
														END
													END AS AMOUNT
											FROM	(
														SELECT	'SOLUSI' AS COMPANY
																,SIH.ITEM_CAT
																,SIH.BRANCHES
																,SIH.SALESMAN
																,SIH.TGL_UM
																,SIH.NO_UM
																,SIH.NO_SO
																,SIH.AMOUNT
														FROM	(
																	SELECT		GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date] AS TGL_UM
																				,SIH.[No_] AS NO_UM
																				,SIH.[Prepayment Order No_] AS NO_SO
																				, SUM(GLE.[Amount] * -1) AMOUNT
																	FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
																	INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																	LEFT JOIN	(
																					SELECT [Dimension Set ID] AS DIM_ID
																							,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																							,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																							,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																					GROUP BY [Dimension Set ID]
																				) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																	WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																			GLE.[Document No_] LIKE 'UM%' AND
																			(
																				(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																				(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																			)
																	GROUP BY GLE.[Document No_]
																				,DIMS.ITEM_CAT
																				,DIMS.BRANCHES
																				,DIMS.SALESMAN
																				,SIH.[Posting Date]
																				,SIH.[No_]
																				,SIH.[Prepayment Order No_]
																) SIH
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [ACS].[dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = SIH.NO_UM
														LEFT JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE	(
																	CM.NO_CM IS NULL OR
																	(
																		CM.NO_CM IS NOT NULL AND
																		(
																			(@TglInvUpto <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																			(@TglInvUpto > GETDATE() AND CMH.[Posting Date] >  @TglInvUpto)
																		)
																	)
																)
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [ACS].[dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [ACS].[dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03'
																	AND GLE.[Document No_] NOT LIKE 'UM%'
																	AND
																	(
																		(@TglInvUpto <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		(@TglInvUpto > GETDATE() AND GLE.[Posting Date] <=  @TglInvUpto)
																	)
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								LEFT JOIN	(
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
												UNION ALL
												SELECT [Document No_] AS NO_SO
														,SUM([Amount]) AS AMOUNT
												FROM [ACS].[dbo].[SOLUSI$Sales Line]
												WHERE [Document Type] = 1
												GROUP BY [Document No_]
											) SOS ON SOS.NO_SO = OUM.NO_SO
								WHERE	OUM.AMOUNT > 0 AND
										SOS.NO_SO IS NOT NULL AND
										SOS.NO_SO <> 'SOAT160274'
							) X2
					GROUP BY X2.BRANCHES, X2.SALESMAN
					UNION ALL
					SELECT	3 AS GROUP_NO
							,'OUTSTANDING SO' AS GROUP_DESC
							,'' AS GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES
							, '' SALESMAN
							, SUM(OSO.AMOUNT) AS AMOUNT
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO 
					FROM	(
								SELECT	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
										,CASE	WHEN XAX.ITEM_CATEGORY = 'HW01' THEN 'HW01 - Hardware'
												WHEN XAX.ITEM_CATEGORY = 'PS01' THEN 'PS01 - 3rd Party Software'
												WHEN XAX.ITEM_CATEGORY = 'PS02' THEN 'PS02 - Own Software'
												WHEN XAX.ITEM_CATEGORY = 'PS03' THEN 'PS03 - Technology Service'
												WHEN XAX.ITEM_CATEGORY = 'PS04' THEN 'PS04 - Hardware Service'
												WHEN XAX.ITEM_CATEGORY = 'PS05' THEN 'PS05 - Manage Service'
											END AS ITEM_CAT
										, XAX.CABANG AS BRANCHES 
										, XAX.AMOUNT_IDR AS AMOUNT
										, DATEPART(QUARTER, XAX.EST_REALISASI) AS Q_OUT_SO
										, DATEPART(YEAR, XAX.EST_REALISASI) AS YEAR_OUT_SO 
								FROM	(
											SELECT	XXX.CABANG
													,XXX.ITEM_CATEGORY
													,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
													,XXX.EST_REALISASI AS EST_REALISASI_ASLI
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															XXX.AMOUNT_IDR
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
																ELSE
																	ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
																END
															ELSE
																XXX.AMOUNT_IDR
															END
														END AS AMOUNT_IDR
													,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
															CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
														ELSE
															CASE WHEN XOX.NO_SO IS NOT NULL THEN
																CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
																	XOX.EST_REALISASI
																ELSE
																	CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																			WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																			ELSE  XXX.EST_REALISASI
																	END
																END
															ELSE
																XXX.EST_REALISASI
															END
														END AS EST_REALISASI
											FROM	(
														SELECT	'AUTOJAYA' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[AUTOJAYA$Sales Header] SH
																	LEFT JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				)SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[AUTOJAYA$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[AUTOJAYA$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
														UNION ALL
														SELECT	'SOLUSI' AS COMPANY
																, XY.NO_SO
																, XY.RULE_TIPE
																, XY.RELEASE_TODAY
																, XY.DELIVERY_DATE
																, XY.CABANG
																, XY.CUST_CODE
																, XY.ORDER_DATE
																, XY.STATUS_SO
																, XY.NO_PO_CUST
																, XY.ITEM_CATEGORY
																, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
																	ELSE
																		(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
																	END AS AMOUNT_IDR
																,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																		(XY.AMOUNT - XY.UM_AMOUNT)
																	ELSE
																		(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
																	END AS AMOUNT
																,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																		CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		ELSE
																			XY.ORDER_DATE
																		END
																	ELSE
																		CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																			XY.SHIP_DATE_ADJ
																		ELSE
																			CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																				CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					ELSE
																						DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																					END
																				ELSE
																					CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																							WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																								CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				END
																			ELSE
																				CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																							CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																						WHEN XY.RULE_TIPE = 'ALFA' THEN
																							CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																										CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																										CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																									WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																										CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																									ELSE
																										CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																							END
																						ELSE
																							CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																				END
																			END
																		END
																	END AS EST_REALISASI
														FROM	(
																	SELECT	SH.[No_] AS NO_SO
																			, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																					END
																				END
																				END AS TIPE
																			, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																					CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																						CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																					END
																				END
																				END AS RULE_TIPE
																			, SH.[Requested Delivery Date] AS DELIVERY_DATE
																			, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																			, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																			, SH.[Bill-to Customer No_] AS CUST_CODE
																			, SH.[Order Date] AS ORDER_DATE
																			, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																					WHEN SH.[Status] = 1 THEN 'RELEASED'
																					WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																					WHEN SH.[Status] = 3 THEN 'RELEASED'
																					ELSE '' END AS STATUS_SO
																			, SH.[External Document No_] AS NO_PO_CUST
																			, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																			, ISNULL(SL.AMOUNT,0) AS AMOUNT
																			, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																			, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																			, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																			, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																			, SH.[Shipment Date] AS SHIP_DATE
																			,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																					CAST('01/01/1753' AS DATETIME)
																				ELSE
																					CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																				END AS SHIP_DATE_ADJ
																	FROM [ACS].[dbo].[SOLUSI$Sales Header] SH
																	INNER JOIN  (	SELECT X.[Document No_]
																						, X.[Shortcut Dimension 2 Code]
																						,SUM(X.QTY) AS QTY
																						,SUM(X.QTY_INV)AS QTY_INV
																						,SUM(X.AMOUNT) AS AMOUNT
																					FROM (
																							SELECT [Document No_]
																									, [Shortcut Dimension 2 Code]
																									, [Quantity] AS QTY
																									, [Quantity Invoiced] AS QTY_INV
																									, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																										([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																										ELSE
																										[Amount]
																										END AS AMOUNT
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1 AND
																								[Quantity] <> [Quantity Invoiced]
																						) X
																					GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code]
																				)SL ON SL.[Document No_] = SH.[No_]
																	LEFT JOIN  (
																					SELECT [Document No_]
																							, [Shortcut Dimension 2 Code]
																							, SUM([Amount]) AS AMOUNT_TTL
																							FROM [ACS].[dbo].[SOLUSI$Sales Line]
																							WHERE [Document Type] = 1
																					GROUP BY [Document No_], [Shortcut Dimension 2 Code]
																				) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN	(
																					SELECT Y.NO_SO
																							,Y.ITEM_CATEGORY
																							,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																							,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																					FROM (
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Invoice Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																							UNION ALL
																							SELECT [Prepayment Order No_] AS NO_SO
																									,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																									,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																									,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																							FROM [ACS].[dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																							GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code]
																						) Y
																					GROUP BY Y.NO_SO, Y.ITEM_CATEGORY
																				) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code]
																	LEFT JOIN [ACS].[dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
																	WHERE SH.[Document Type] = 1
																) XY
														LEFT JOIN	(
																		SELECT	POX.NO_SO
																				,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																		FROM (
																				SELECT	PO.ITEM_NO
																						,RSV.NO_SO
																						,RSV.NO_SO_LINE
																						,PO.NO_PO
																						,PO.EXPECTED_DATE
																				FROM	(
																							SELECT POD.[No_] AS ITEM_NO
																									,POH.[No_] AS NO_PO
																									,POD.[Line No_] AS NO_PO_LINE
																									,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																									,POD.[Expected Receipt Date] AS EXPECTED_DATE
																							FROM [ACS].[dbo].[SOLUSI$Purchase Header] POH
																							INNER JOIN [ACS].[dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																							WHERE POH.[Document Type] = 1 AND
																								POD.[Type] = 2
																							GROUP BY POD.[No_]
																									,POH.[No_]
																									,POD.[Expected Receipt Date]
																									,POD.[IC Partner Reference]
																									,POD.[Line No_]
																						) PO
																				LEFT JOIN	(
																								SELECT  REA.[Item No_] AS ITEM_NO
																										, REA.[Source ID] AS NO_PO
																										, REA.[Source Ref_ No_] AS NO_PO_LINE
																										, REB.[Source ID] AS NO_SO
																										, REB.[Source Ref_ No_] AS NO_SO_LINE
																										, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																								FROM [ACS].[dbo].[SOLUSI$Reservation Entry] REA
																								LEFT JOIN [ACS].[dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																								WHERE REA.[Reservation Status] = 0 AND
																										REA.[Positive] = 1 AND
																										REA.[Source ID] <>''
																								GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																							) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																				WHERE PO.QTY_ON_ORDER > 0
																			) POX
																		GROUP BY POX.NO_SO
																	) POC ON POC.NO_SO = XY.NO_SO
														WHERE	XY.STATUS_SO = 'RELEASED'
													) XXX
											LEFT JOIN	(
															SELECT T01.[NO_SO]
																	,T01.[JENIS_PAYMENT]
																	,T01.[QTY]
																	,T01.[EST_REALISASI]
																	,T02.[ADD_NUM]
															FROM [NavBI].[dbo].[T01_SO_ADJ] T01
															LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
														) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
											WHERE	XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
													XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
													XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
										) XAX
								WHERE	(
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4) + 1
											)
												OR
											(
												SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
												SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, @TglInvUpto, 105), 7,4) + 1
											)
										)
							) OSO
					GROUP BY  OSO.GROUP_ITEM_CAT
							, OSO.ITEM_CAT
							, OSO.BRANCHES 
							, OSO.Q_OUT_SO
							, OSO.YEAR_OUT_SO
				) XX;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'INPUT SR BERHASIL', GETDATE());
		RETURN  ;
	END;
	--
	IF @Action = 'DELETE' 
	BEGIN
		DELETE FROM [dbo].[TEMP08_SALES_REVENUE]
		WHERE [PROSES_ID] = @ProsesId;
		--
		INSERT INTO  [dbo].[TEMP00_UPLOAD_RESULT] ([PROSES_ID], [RESULT_STRING], [PROCESS_ON]) VALUES (@ProsesId, 'DELETE SR BERHASIL', GETDATE());
		RETURN  ;
	END;
END;
