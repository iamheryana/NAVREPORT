<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="04053_02_OutstandingSORealisasiSummary" language="groovy" pageWidth="850" pageHeight="595" orientation="Landscape" whenNoDataType="NoDataSection" columnWidth="810" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20" uuid="c3c56047-de54-4477-a40e-d4b81af326aa">
	<property name="ireport.zoom" value="1.4641000000000188"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="68"/>
	<parameter name="Cabang" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="EstRealFrom" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="EstRealUpto" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="TglInvFrom" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="TglInvTo" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="AmtShow" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[SELECT	XIX.GROUP_NO
		, XIX.GROUP_DESC
		, XIX.SUBGROUP_NO
		, XIX.SUBGROUP_DESC
		, ROW_NUMBER() OVER (PARTITION BY XIX.GROUP_NO ORDER BY MIN(XIX.SORT_CUST), XIX.CUST_NAME) AS NO_URUT
		, XIX.CUST_NAME
		, MIN(XIX.SORT_CUST) AS SORT_CUST
		, MIN(XIX.LBL_PERIOD_1) AS LBL_PERIOD_1
		, MIN(XIX.LBL_PERIOD_2) AS LBL_PERIOD_2
		, MIN(XIX.LBL_PERIOD_3) AS LBL_PERIOD_3
		, MIN(XIX.LBL_PERIOD_4) AS LBL_PERIOD_4
		, MIN(XIX.LBL_PERIOD_5) AS LBL_PERIOD_5
		, ROUND((SUM(XIX.AMOUNT_IDR) / 1000000),2) AS AMOUNT_IDR
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) AS AMOUNT_IDR_PERIOD_1
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2) AS AMOUNT_IDR_PERIOD_2
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_3) / 1000000),2) AS AMOUNT_IDR_PERIOD_3
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_4) / 1000000),2) AS AMOUNT_IDR_PERIOD_4
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_5) / 1000000),2) AS AMOUNT_IDR_PERIOD_5
		, (ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2)) AS AMOUNT_IDR_PERIOD_12
		, (ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_3) / 1000000),2) ) AS AMOUNT_IDR_PERIOD_123
		, (ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_3) / 1000000),2) +  ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_4) / 1000000),2) ) AS AMOUNT_IDR_PERIOD_1234
		, CASE WHEN XIX.GROUP_NO = 1  AND SUM(XIX.AMOUNT_IDR_PERIOD_1) <> 0 THEN 1 ELSE 0 END AS JML_BIG_P1
		, CASE WHEN XIX.GROUP_NO = 1  AND SUM(XIX.AMOUNT_IDR_PERIOD_2) <> 0 THEN 1 ELSE 0 END AS JML_BIG_P2
		, CASE WHEN XIX.GROUP_NO = 1  AND SUM(XIX.AMOUNT_IDR_PERIOD_3) <> 0 THEN 1 ELSE 0 END AS JML_BIG_P3
		, CASE WHEN XIX.GROUP_NO = 1  AND SUM(XIX.AMOUNT_IDR_PERIOD_4) <> 0 THEN 1 ELSE 0 END AS JML_BIG_P4
		, CASE WHEN XIX.GROUP_NO = 1 THEN ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) ELSE 0 END AS AMT_BIG_P1
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_1) / 1000000),2) AS AMT_ALL_P1
		, CASE WHEN XIX.GROUP_NO = 1 THEN ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2) ELSE 0 END AS AMT_BIG_P2
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_2) / 1000000),2) AS AMT_ALL_P2
		, CASE WHEN XIX.GROUP_NO = 1 THEN ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_3) / 1000000),2) ELSE 0 END AS AMT_BIG_P3
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_3) / 1000000),2) AS AMT_ALL_P3
		, CASE WHEN XIX.GROUP_NO = 1 THEN ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_4) / 1000000),2) ELSE 0 END AS AMT_BIG_P4
		, ROUND((SUM(XIX.AMOUNT_IDR_PERIOD_4) / 1000000),2) AS AMT_ALL_P4
FROM	(
SELECT	CASE WHEN XXI.AMOUNT_IDR >=  ($P{AmtShow} * 1000000) THEN 1 ELSE 2 END AS GROUP_NO
		,	CASE WHEN XXI.AMOUNT_IDR >=  ($P{AmtShow} * 1000000) THEN
				'Total Projection Sales Revenue (Million Rp)'
			ELSE
				'Total PO - OTHERS ( < '+CONVERT(VARCHAR, $P{AmtShow})+' Million Rp)'
			END AS GROUP_DESC
		,	1 AS SUBGROUP_NO
		,	CASE WHEN XXI.AMOUNT_IDR >=  ($P{AmtShow} * 1000000) THEN
				'Total PO yang dpt di realisasikan (Million Rp)'
			ELSE
				'Total PO - OTHERS ( < '+CONVERT(VARCHAR, $P{AmtShow})+' Million Rp)'
			END AS SUBGROUP_DESC
		, CASE WHEN XXI.AMOUNT_IDR >=  ($P{AmtShow} * 1000000) THEN XXI.CUST_NAME ELSE 'OTHERS' END AS CUST_NAME
		, SUBSTRING(CONVERT(VARCHAR, XXI.EST_REALISASI, 112), 1, 6) AS SORT_CUST
		, XXI.AMOUNT_IDR
		, XXI.LBL_PERIOD_1
		, XXI.LBL_PERIOD_2
		, XXI.LBL_PERIOD_3
		, XXI.LBL_PERIOD_4
		, XXI.LBL_PERIOD_5
		, CASE WHEN XXI.EST_REAL_PERIOD = XXI.PARAM_PERIOD_1 THEN XXI.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR_PERIOD_1
		, CASE WHEN XXI.EST_REAL_PERIOD = XXI.PARAM_PERIOD_2 THEN XXI.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR_PERIOD_2
		, CASE WHEN XXI.EST_REAL_PERIOD = XXI.PARAM_PERIOD_3 THEN XXI.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR_PERIOD_3
		, CASE WHEN XXI.EST_REAL_PERIOD = XXI.PARAM_PERIOD_4 THEN XXI.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR_PERIOD_4
		, CASE WHEN XXI.EST_REAL_PERIOD > XXI.PARAM_PERIOD_4 THEN XXI.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR_PERIOD_5
FROM	(
			SELECT	XAX.COMPANY
					, XAX.BRANCHES
					, CAB.[Name] AS BRANCHES_NAME
					, XAX.SALESMAN
					, XAX.CUST_NAME
					, XAX.NO_SO
					, XAX.NO_PO_CUST
					, XAX.AMOUNT_IDR
					, XAX.EST_REALISASI_REAL
					, XAX.EST_REALISASI
					, UPPER(SUBSTRING((CONVERT(VARCHAR, $P{EstRealFrom}, 106)),4,11)) AS LBL_PERIOD_1
					, UPPER(SUBSTRING((CONVERT(VARCHAR,  DATEADD(MONTH, 1, $P{EstRealFrom}), 106)),4,11)) AS LBL_PERIOD_2
					, UPPER(SUBSTRING((CONVERT(VARCHAR,  DATEADD(MONTH, 2, $P{EstRealFrom}), 106)),4,11)) AS LBL_PERIOD_3
					, UPPER(SUBSTRING((CONVERT(VARCHAR,  DATEADD(MONTH, 3, $P{EstRealFrom}), 106)),4,11)) AS LBL_PERIOD_4
					, ('> '+UPPER(SUBSTRING((CONVERT(VARCHAR,  DATEADD(MONTH, 3, $P{EstRealFrom}), 106)),4,11))) AS LBL_PERIOD_5
					, SUBSTRING(CONVERT(VARCHAR, $P{EstRealFrom}, 112),1,6) AS PARAM_PERIOD_1
					, SUBSTRING(CONVERT(VARCHAR, DATEADD(MONTH, 1, $P{EstRealFrom}), 112),1,6) AS PARAM_PERIOD_2
					, SUBSTRING(CONVERT(VARCHAR, DATEADD(MONTH, 2, $P{EstRealFrom}), 112),1,6) AS PARAM_PERIOD_3
					, SUBSTRING(CONVERT(VARCHAR, DATEADD(MONTH, 3, $P{EstRealFrom}), 112),1,6) AS PARAM_PERIOD_4
					, SUBSTRING(CONVERT(VARCHAR, XAX.EST_REALISASI, 112),1,6) AS EST_REAL_PERIOD
			FROM	(
						SELECT	XXX.COMPANY
								, XXX.BRANCHES
								, XXX.SALESMAN
								, XXX.CUST_NAME
								, XXX.NO_SO
								, XXX.NO_PO_CUST
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										XXX.AMOUNT_IDR
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
											ELSE
												ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
											END
										ELSE
											XXX.AMOUNT_IDR
										END
									END AS AMOUNT_IDR
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												XOX.EST_REALISASI
											ELSE
												CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
														ELSE  XXX.EST_REALISASI
												END
											END
										ELSE
											XXX.EST_REALISASI
										END
									END AS EST_REALISASI
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										XXX.DELIVERY_DATE
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												XOX.EST_REALISASI
											ELSE
												CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI_REAL)
														WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI_REAL)
														WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI_REAL)
														WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI_REAL)
														ELSE  XXX.EST_REALISASI_REAL
												END
											END
										ELSE
											XXX.EST_REALISASI_REAL
										END
									END AS EST_REALISASI_REAL
						FROM	(
									SELECT
											UPPER(ASH.[Your Reference]) AS COMPANY
											, ASH.[No_] AS NO_SO
											, '' AS RULE_TIPE
											, 'NO' AS RELEASE_TODAY
											,	CASE WHEN ASL.[Shipment Date] <= CAST(CAST(GETDATE() AS DATE) AS DATETIME) THEN
													CAST(CAST(GETDATE() AS DATE) AS DATETIME)
												ELSE
													ASL.[Shipment Date]
												END AS DELIVERY_DATE
											, '' AS TIPE
											, ASH.[Responsibility Center] AS BRANCHES
											, '' AS SALESMAN
											, ASH.[Sell-to Customer No_] AS CUST_CODE
											, ASH.[Sell-to Customer Name] AS CUST_NAME
											, '' AS NO_PO_CUST
											, ASL.[Amount]  AS AMOUNT_IDR_FULL
											, ASL.[Amount]  AS AMOUNT_IDR
											,	CASE WHEN ASL.[Shipment Date] <= CAST(CAST(GETDATE() AS DATE) AS DATETIME) THEN
													CAST(CAST(GETDATE() AS DATE) AS DATETIME)
												ELSE
													ASL.[Shipment Date]
												END AS EST_REALISASI_REAL
											,	CASE WHEN ASL.[Shipment Date] <= CAST(CAST(GETDATE() AS DATE) AS DATETIME) THEN
													CAST(CAST(GETDATE() AS DATE) AS DATETIME)
												ELSE
													ASL.[Shipment Date]
												END AS EST_REALISASI
									FROM [dbo].[PI-ADJ$Sales Header] ASH
									LEFT JOIN [dbo].[PI-ADJ$Sales Line] ASL ON ASL.[Document Type] = ASH.[Document Type] AND ASL.[Document No_] = ASH.[No_]
									WHERE ASH.[Document Type] = 1
									UNION ALL
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.TIPE
											, XY.BRANCHES
											, XY.SALES_CODE AS SALESMAN
											, XY.CUST_CODE
											, XY.CUST_NAME
											, XY.NO_PO_CUST
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													XY.ORDER_DATE
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN DATEADD(WEEK, 3, XY.ORDER_DATE)
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN XY.ORDER_DATE + 3
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN XY.ORDER_DATE + 3
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN XY.ORDER_DATE + 4
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		XY.DELIVERY_DATE
															END
														END
													END
												END AS EST_REALISASI_REAL
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
														  END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, CASE WHEN SH.[Shortcut Dimension 1 Code] = '' THEN '10' ELSE ISNULL(SH.[Shortcut Dimension 1 Code],'10') END AS BRANCHES
														, CASE WHEN SH.[Salesperson Code] = '' THEN '.' ELSE SH.[Salesperson Code] END AS SALES_CODE
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Bill-to Name] AS CUST_NAME
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
														, SH.[Shipment Date] AS SHIP_DATE
												FROM [dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [dbo].[AUTOJAYA$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																FROM [dbo].[AUTOJAYA$Sales Line]
																WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR

																		FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR

																		FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.TIPE
											, XY.BRANCHES
											, XY.SALES_CODE AS SALESMAN
											, XY.CUST_CODE
											, XY.CUST_NAME
											, XY.NO_PO_CUST
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													XY.ORDER_DATE
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN DATEADD(WEEK, 3, XY.ORDER_DATE)
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN XY.ORDER_DATE + 3
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN XY.ORDER_DATE + 3
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN XY.ORDER_DATE + 5
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN XY.ORDER_DATE + 4
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		XY.DELIVERY_DATE
															END
														END
													END
												END AS EST_REALISASI_REAL
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
															END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
														  END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, CASE WHEN SH.[Shortcut Dimension 1 Code] = '' THEN '10' ELSE ISNULL(SH.[Shortcut Dimension 1 Code],'10') END AS BRANCHES
														, CASE WHEN SH.[Salesperson Code] = '' THEN '.' ELSE SH.[Salesperson Code] END AS SALES_CODE
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Bill-to Name] AS CUST_NAME
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
														, SH.[Shipment Date] AS SHIP_DATE
												FROM [dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT X.[Document No_]
																	,SUM(X.QTY) AS QTY
																	,SUM(X.QTY_INV)AS QTY_INV
																	,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT [Document No_]
																				, [Quantity] AS QTY
																				, [Quantity Invoiced] AS QTY_INV
																				, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																					([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																					ELSE
																					[Amount]
																					END AS AMOUNT
																		FROM [dbo].[SOLUSI$Sales Line]
																		WHERE [Document Type] = 1 AND
																			[Quantity] <> [Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_]
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT [Document No_]
																		, SUM([Amount]) AS AMOUNT_TTL
																FROM [dbo].[SOLUSI$Sales Line]
																WHERE [Document Type] = 1
																GROUP BY [Document No_]
															)SL2 ON SL2.[Document No_] = SH.[No_]
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR

																		FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																				,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																				,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																	) Y
																GROUP BY Y.NO_SO
															) UM ON UM.NO_SO = SH.[No_]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																				,POH.[No_] AS NO_PO
																				,POD.[Line No_] AS NO_PO_LINE
																				,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																				,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																					REA.[Positive] = 1 AND
																					REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						LEFT JOIN	(
										SELECT T01.[NO_SO]
												,T01.[JENIS_PAYMENT]
												,T01.[QTY]
												,T01.[EST_REALISASI]
												,T02.[ADD_NUM]
										FROM [NavBI].[dbo].[T01_SO_ADJ] T01
										LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
									) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
						WHERE	XXX.AMOUNT_IDR <> 0 AND
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND
								XXX.NO_PO_CUST NOT LIKE 'BOOKING%'AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
					) XAX
			LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = XAX.BRANCHES
			WHERE	(XAX.EST_REALISASI >=  $P{EstRealFrom} AND XAX.EST_REALISASI <=  $P{EstRealUpto}) AND
					(CAB.[Name] =  $P{Cabang} OR $P{Cabang} = 'ALL')
		) XXI
		) XIX
GROUP BY XIX.GROUP_NO
		, XIX.GROUP_DESC
		, XIX.SUBGROUP_NO
		, XIX.SUBGROUP_DESC
		, XIX.CUST_NAME
UNION ALL
SELECT	1 AS GROUP_NO
		, 'Total Projection Sales Revenue (Million Rp)' AS GROUP_DESC
		, 2 AS SUBGROUP_NO
		, 'Sales Revenue as per ' + CONVERT(VARCHAR, $P{TglInvTo}, 106)+' (Million Rp)' AS SUBGROUP_DESC
		, 0 AS NO_URUT
		,'' AS CUST_NAME
		,'' AS SORT_CUST
		,'' AS LBL_PERIOD_1
		,'' AS LBL_PERIOD_2
		,'' AS LBL_PERIOD_3
		,'' AS LBL_PERIOD_4
		,'' AS LBL_PERIOD_5
		,0 AS AMOUNT_IDR
		,	ROUND(
					(
						(
							CASE	WHEN $P{Cabang} = 'JAKARTA' THEN ROUND((SRV.AMT_HO),0)
									WHEN $P{Cabang} = 'SURABAYA' THEN ROUND((SRV.AMT_SBY),0)
									WHEN $P{Cabang} = 'CIKARANG' THEN ROUND((SRV.AMT_CKR),0)
									WHEN $P{Cabang} = 'SEMARANG' THEN ROUND((SRV.AMT_SMR),0)
									WHEN $P{Cabang} = 'BALI' THEN ROUND((SRV.AMT_DPS),0)
									WHEN $P{Cabang} = 'ALL' THEN (	ROUND((SRV.AMT_HO),0) + ROUND((SRV.AMT_SBY),0) + ROUND((SRV.AMT_DPS),0)
																	+ROUND((SRV.AMT_CKR),0) +ROUND((SRV.AMT_SMR),0) )
							 END
						 ) / 1000000
					 ),2) AS AMOUNT_IDR_PERIOD_1
		,0 AS AMOUNT_IDR_PERIOD_2
		,0 AS AMOUNT_IDR_PERIOD_3
		,0 AS AMOUNT_IDR_PERIOD_4
		,0 AS AMOUNT_IDR_PERIOD_5
		,	ROUND(
					(
						(
							CASE	WHEN $P{Cabang} = 'JAKARTA' THEN ROUND((SRV.AMT_HO),0)
									WHEN $P{Cabang} = 'SURABAYA' THEN ROUND((SRV.AMT_SBY),0)
									WHEN $P{Cabang} = 'CIKARANG' THEN ROUND((SRV.AMT_CKR),0)
									WHEN $P{Cabang} = 'SEMARANG' THEN ROUND((SRV.AMT_SMR),0)
									WHEN $P{Cabang} = 'BALI' THEN ROUND((SRV.AMT_DPS),0)
									WHEN $P{Cabang} = 'ALL' THEN (	ROUND((SRV.AMT_HO),0) + ROUND((SRV.AMT_SBY),0) + ROUND((SRV.AMT_DPS),0)
																	+ROUND((SRV.AMT_CKR),0) +ROUND((SRV.AMT_SMR),0) )
							 END
						 ) / 1000000
					 ),2) AS AMOUNT_IDR_PERIOD_12
		,	ROUND(
					(
						(
							CASE	WHEN $P{Cabang} = 'JAKARTA' THEN ROUND((SRV.AMT_HO),0)
									WHEN $P{Cabang} = 'SURABAYA' THEN ROUND((SRV.AMT_SBY),0)
									WHEN $P{Cabang} = 'CIKARANG' THEN ROUND((SRV.AMT_CKR),0)
									WHEN $P{Cabang} = 'SEMARANG' THEN ROUND((SRV.AMT_SMR),0)
									WHEN $P{Cabang} = 'BALI' THEN ROUND((SRV.AMT_DPS),0)
									WHEN $P{Cabang} = 'ALL' THEN (	ROUND((SRV.AMT_HO),0) + ROUND((SRV.AMT_SBY),0) + ROUND((SRV.AMT_DPS),0)
																	+ROUND((SRV.AMT_CKR),0) +ROUND((SRV.AMT_SMR),0) )
							 END
						 ) / 1000000
					 ),2) AS AMOUNT_IDR_PERIOD_123
		,	ROUND(
					(
						(
							CASE	WHEN $P{Cabang} = 'JAKARTA' THEN ROUND((SRV.AMT_HO),0)
									WHEN $P{Cabang} = 'SURABAYA' THEN ROUND((SRV.AMT_SBY),0)
									WHEN $P{Cabang} = 'CIKARANG' THEN ROUND((SRV.AMT_CKR),0)
									WHEN $P{Cabang} = 'SEMARANG' THEN ROUND((SRV.AMT_SMR),0)
									WHEN $P{Cabang} = 'BALI' THEN ROUND((SRV.AMT_DPS),0)
									WHEN $P{Cabang} = 'ALL' THEN (	ROUND((SRV.AMT_HO),0) + ROUND((SRV.AMT_SBY),0) + ROUND((SRV.AMT_DPS),0)
																	+ROUND((SRV.AMT_CKR),0) +ROUND((SRV.AMT_SMR),0) )
							 END
						 ) / 1000000
					 ),2) AS AMOUNT_IDR_PERIOD_1234
		, 0 AS JML_BIG_P1
		, 0 AS JML_BIG_P2
		, 0 AS JML_BIG_P3
		, 0 AS JML_BIG_P4
		, 0 AS AMT_BIG_P1
		, 0 AS AMT_ALL_P1
		, 0 AS AMT_BIG_P2
		, 0 AS AMT_ALL_P2
		, 0 AS AMT_BIG_P3
		, 0 AS AMT_ALL_P3
		, 0 AS AMT_BIG_P4
		, 0 AS AMT_ALL_P4
FROM	(
			SELECT	1 AS GROUP_NO
					,'Sales Revenue' AS GROUP_DESC
					,XX.GROUP_ITEM_CAT
					,XX.ITEM_CAT
					,(SUM(XX.AMT_HO)) AS AMT_HO
					,(SUM(XX.AMT_SBY)) AS AMT_SBY
					,(SUM(XX.AMT_DPS)) AS AMT_DPS
					,(SUM(XX.AMT_CKR)) AS AMT_CKR
					,(SUM(XX.AMT_SMR)) AS AMT_SMR
			FROM	(
						SELECT	CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
								,CASE	WHEN X.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
										WHEN X.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
										WHEN X.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
										WHEN X.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
										WHEN X.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
										WHEN X.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
									END AS ITEM_CAT
								,CASE WHEN X.BRANCHES = '10' THEN X.AMOUNT ELSE 0 END AS AMT_HO
								,CASE WHEN X.BRANCHES = '15' THEN X.AMOUNT ELSE 0 END AS AMT_SBY
								,CASE WHEN X.BRANCHES = '19' THEN X.AMOUNT ELSE 0 END AS AMT_DPS
								,CASE WHEN X.BRANCHES = '16' THEN X.AMOUNT ELSE 0 END AS AMT_CKR
								,CASE WHEN X.BRANCHES = '17' THEN X.AMOUNT ELSE 0 END AS AMT_SMR

						FROM (
						SELECT	'SALES ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														END AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,SUM(ASPY.AMOUNT)  AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														,UM.BRANCHES
														,UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, GLE.[Amount]
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Document No_] <> '9SIAT200197'
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES ALL' AS NOTE
								, DIMS.BRANCHES
								, DIMS.ITEM_CAT
								, DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> ''AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
														SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
													END
													END	 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								, SUM(ASPY.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														, UM.BRANCHES
														, UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						) X
					) XX
			GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT
		) SRV]]>
	</queryString>
	<field name="GROUP_NO" class="java.lang.Integer"/>
	<field name="GROUP_DESC" class="java.lang.String"/>
	<field name="SUBGROUP_NO" class="java.lang.Integer"/>
	<field name="SUBGROUP_DESC" class="java.lang.String"/>
	<field name="NO_URUT" class="java.lang.Long"/>
	<field name="CUST_NAME" class="java.lang.String"/>
	<field name="SORT_CUST" class="java.lang.String"/>
	<field name="LBL_PERIOD_1" class="java.lang.String"/>
	<field name="LBL_PERIOD_2" class="java.lang.String"/>
	<field name="LBL_PERIOD_3" class="java.lang.String"/>
	<field name="LBL_PERIOD_4" class="java.lang.String"/>
	<field name="LBL_PERIOD_5" class="java.lang.String"/>
	<field name="AMOUNT_IDR" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_1" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_2" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_3" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_4" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_5" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_12" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_123" class="java.math.BigDecimal"/>
	<field name="AMOUNT_IDR_PERIOD_1234" class="java.math.BigDecimal"/>
	<field name="JML_BIG_P1" class="java.lang.Integer"/>
	<field name="JML_BIG_P2" class="java.lang.Integer"/>
	<field name="JML_BIG_P3" class="java.lang.Integer"/>
	<field name="JML_BIG_P4" class="java.lang.Integer"/>
	<field name="AMT_BIG_P1" class="java.math.BigDecimal"/>
	<field name="AMT_ALL_P1" class="java.math.BigDecimal"/>
	<field name="AMT_BIG_P2" class="java.math.BigDecimal"/>
	<field name="AMT_ALL_P2" class="java.math.BigDecimal"/>
	<field name="AMT_BIG_P3" class="java.math.BigDecimal"/>
	<field name="AMT_ALL_P3" class="java.math.BigDecimal"/>
	<field name="AMT_BIG_P4" class="java.math.BigDecimal"/>
	<field name="AMT_ALL_P4" class="java.math.BigDecimal"/>
	<sortField name="GROUP_NO"/>
	<sortField name="SUBGROUP_NO"/>
	<sortField name="SORT_CUST"/>
	<sortField name="CUST_NAME"/>
	<variable name="AMOUNT_IDR_PERIOD_1_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_2_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_2}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_3_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_3}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR}]]></variableExpression>
	</variable>
	<variable name="AmtPeriode2Akumulasi" class="java.math.BigDecimal" resetType="None">
		<variableExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_2}.add($V{AMOUNT_IDR_PERIOD_2_2})]]></variableExpression>
		<initialValueExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_2}.add($V{AMOUNT_IDR_PERIOD_2_2})]]></initialValueExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_1_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_2_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_2}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_12_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_12}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_1_3" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_2_3" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_2}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_3_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_3}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR}]]></variableExpression>
	</variable>
	<variable name="JML_BIG_P1_1" class="java.lang.Integer" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_BIG_P1}]]></variableExpression>
	</variable>
	<variable name="JML_BIG_P2_1" class="java.lang.Integer" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_BIG_P2}]]></variableExpression>
	</variable>
	<variable name="AMT_BIG_P1_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_BIG_P1}]]></variableExpression>
	</variable>
	<variable name="AMT_ALL_P1_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_ALL_P1}]]></variableExpression>
	</variable>
	<variable name="AMT_BIG_P2_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_BIG_P2}]]></variableExpression>
	</variable>
	<variable name="AMT_ALL_P2_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_ALL_P2}]]></variableExpression>
	</variable>
	<variable name="pcn01" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{AMT_ALL_P1_1} == 0 ?
    $V{AMT_BIG_P1_1}/1 :
     $V{AMT_BIG_P1_1}/$V{AMT_ALL_P1_1} )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{AMT_ALL_P1_1} == 0 ?
    $V{AMT_BIG_P1_1}/1 :
     $V{AMT_BIG_P1_1}/$V{AMT_ALL_P1_1} )]]></initialValueExpression>
	</variable>
	<variable name="pcn02" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{AMT_ALL_P2_1} == 0 ?
    $V{AMT_BIG_P2_1}/1 :
     $V{AMT_BIG_P2_1}/$V{AMT_ALL_P2_1} )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{AMT_ALL_P2_1} == 0 ?
     $V{AMT_BIG_P2_1}/1 :
      $V{AMT_BIG_P2_1}/$V{AMT_ALL_P2_1} )]]></initialValueExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_1_4" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_12_2" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_12}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_3" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_4_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_4}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_5_1" class="java.math.BigDecimal" resetType="Group" resetGroup="SubGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_5}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_123_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_123}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_1234_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1234}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_4_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_4}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_5_2" class="java.math.BigDecimal" resetType="Group" resetGroup="Group" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_5}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_123_2" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_123}]]></variableExpression>
	</variable>
	<variable name="AMOUNT_IDR_PERIOD_1234_2" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1234}]]></variableExpression>
	</variable>
	<variable name="JML_BIG_P3_1" class="java.lang.Integer" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_BIG_P3}]]></variableExpression>
	</variable>
	<variable name="JML_BIG_P4_1" class="java.lang.Integer" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_BIG_P4}]]></variableExpression>
	</variable>
	<variable name="AMT_BIG_P3_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_BIG_P3}]]></variableExpression>
	</variable>
	<variable name="AMT_ALL_P3_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_ALL_P3}]]></variableExpression>
	</variable>
	<variable name="AMT_BIG_P4_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_BIG_P4}]]></variableExpression>
	</variable>
	<variable name="AMT_ALL_P4_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_ALL_P4}]]></variableExpression>
	</variable>
	<variable name="pcn04" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{AMT_ALL_P4_1} == 0 ?
    $V{AMT_BIG_P4_1}/1 :
     $V{AMT_BIG_P4_1}/$V{AMT_ALL_P4_1} )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{AMT_ALL_P4_1} == 0 ?
    $V{AMT_BIG_P4_1}/1 :
     $V{AMT_BIG_P4_1}/$V{AMT_ALL_P4_1} )]]></initialValueExpression>
	</variable>
	<variable name="pcn03" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{AMT_ALL_P3_1} == 0 ?
    $V{AMT_BIG_P3_1}/1 :
     $V{AMT_BIG_P3_1}/$V{AMT_ALL_P3_1} )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{AMT_ALL_P3_1} == 0 ?
    $V{AMT_BIG_P3_1}/1 :
     $V{AMT_BIG_P3_1}/$V{AMT_ALL_P3_1} )]]></initialValueExpression>
	</variable>
	<group name="Group">
		<groupExpression><![CDATA[$F{GROUP_NO}]]></groupExpression>
		<groupFooter>
			<band height="14">
				<printWhenExpression><![CDATA[$F{GROUP_NO}==1]]></printWhenExpression>
				<textField>
					<reportElement x="30" y="0" width="300" height="14" uuid="faf53b20-93ca-45c4-a035-8651711a966f"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_DESC}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="330" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="50e835b6-062c-44aa-930b-7945108b4c87"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="405" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="dd52cce0-5a94-4ff7-ad66-b4e3801a83da"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_12_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="0" width="30" height="14" uuid="02182c9b-4986-4eba-8bcd-5592ee9ad7e4"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="480" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="d6879fdb-48fa-432f-af44-479dd8aa000d"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_123_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="555" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="02f10d3e-af20-4bd3-86a3-a7497fa6879a"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1234_1}]]></textFieldExpression>
				</textField>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{GROUP_NO}==2]]></printWhenExpression>
				<staticText>
					<reportElement x="0" y="14" width="30" height="14" uuid="63efe13c-73ce-4474-a078-aa39fcd91685"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField>
					<reportElement x="30" y="14" width="300" height="14" uuid="8059fab6-0b8e-44c5-9ada-7ff8bb4b0298"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_DESC}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="330" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="6621f86d-7833-435b-b8b8-581e8f6981bd"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="405" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="b3776cde-9563-4652-adb9-3356f160991e"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_2_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="480" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="e2579d63-3ea0-4a4b-aeb3-7634ee02eb78"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_3_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="705" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="ee9d20c2-fd34-4954-8f70-61bc5ef9b286"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_2}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="0" width="30" height="14" uuid="5dbd0c57-fc12-4103-87d6-472af18f9a6a"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="555" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="c817d089-dc27-414b-bac6-12a3fce0f405"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_4_2}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="bea7d02a-3977-4353-8424-763b46de2419"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_5_2}]]></textFieldExpression>
				</textField>
			</band>
		</groupFooter>
	</group>
	<group name="SubGroup">
		<groupExpression><![CDATA[$F{SUBGROUP_NO}]]></groupExpression>
		<groupFooter>
			<band height="28">
				<printWhenExpression><![CDATA[$F{SUBGROUP_NO} == 1 && $F{GROUP_NO}==1]]></printWhenExpression>
				<staticText>
					<reportElement x="0" y="0" width="30" height="14" uuid="00f6144e-4d0d-4b16-be57-061b435ffae3"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField>
					<reportElement x="30" y="14" width="300" height="14" uuid="0eb723c5-7a01-4ded-8b16-c21b4cd18aac"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{SUBGROUP_DESC}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="14" width="30" height="14" uuid="d7df423f-f1f5-45cc-b888-60b5976e8c8b"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="330" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="d08082d2-4a87-4584-9dc4-9a3e8e40c980"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="405" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="c87115c3-800c-4faa-a5b6-a105061fa8f1"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_2_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="480" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="c6d97584-8dd1-47e2-b024-160fbbf9a8f9"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_3_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="705" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="05d2694a-8c5e-423c-a827-76ef4aee3bc8"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="555" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="7f576d3f-b882-464d-9bf2-df513e04b182"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_4_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="75287cf4-8002-45cc-b4df-b8a91c5d1c20"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_5_1}]]></textFieldExpression>
				</textField>
			</band>
			<band height="14">
				<printWhenExpression><![CDATA[$F{SUBGROUP_NO} == 2]]></printWhenExpression>
				<textField>
					<reportElement x="30" y="0" width="300" height="14" uuid="c376c52f-6485-4838-9551-aaddb1ce172e"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{SUBGROUP_DESC}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="0" width="30" height="14" uuid="1ab13636-9d5e-4754-aa96-71066a1a8e27"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="330" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="b6f04f81-3f85-45d5-b375-c681c4b40efe"/>
					<textElement textAlignment="Right">
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_1}]]></textFieldExpression>
				</textField>
			</band>
		</groupFooter>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band height="98" splitType="Stretch">
			<staticText>
				<reportElement x="30" y="0" width="300" height="14" uuid="273acc50-f860-4b9b-a35d-1ee0d9baf160"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04053-02) - PROJECTION SALES REVENUE ACS]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="28" width="300" height="14" uuid="63f48bc2-e910-430c-93ed-37ea27901a3b"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Cabang :]]></text>
			</staticText>
			<textField>
				<reportElement x="330" y="28" width="75" height="14" uuid="4ee40960-7a20-4a35-bfcf-84439a4aeac6"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Cabang}]]></textFieldExpression>
			</textField>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="330" y="56" width="75" height="14" uuid="625063cd-217b-47d4-8204-a71466c56a88"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="30" y="56" width="300" height="14" uuid="5fd09e20-918a-4926-a037-5ed2b936468f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Dicetak pada :]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="70" width="300" height="14" uuid="548ee8f8-fd27-4834-85f7-a5a5d4e9c8a0"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="14" width="300" height="14" uuid="6cb6ad7b-47a4-400e-b9ea-c2b76e8a762c"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Perkiraan Realisasi Invoice : ]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="MM-yyyy" isBlankWhenNull="true">
				<reportElement x="330" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="04ace640-4d61-430d-b8da-aee8da640531"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{EstRealFrom}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="MM-yyyy" isBlankWhenNull="true">
				<reportElement x="480" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="415a9aed-f42c-4ca9-9196-0bdaf6baec07"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{EstRealUpto}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="405" y="14" width="75" height="14" uuid="03093edd-5d80-4696-9256-779c4f26475c"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[s/d]]></text>
			</staticText>
			<staticText>
				<reportElement x="330" y="0" width="75" height="14" uuid="8a0f9e28-70b2-4773-8171-7a10586e52b5"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="84" width="300" height="14" uuid="5dcd1341-9c96-429a-a518-b1a8a654508c"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Customer]]></text>
			</staticText>
			<textField>
				<reportElement x="330" y="84" width="75" height="14" uuid="512d88b4-3392-413c-85cc-af715f3273ef"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{LBL_PERIOD_1}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="405" y="84" width="75" height="14" uuid="67570f35-2e9b-4e02-be37-c53a57aa698f"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{LBL_PERIOD_2}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="480" y="84" width="75" height="14" uuid="bedd4852-46c8-4602-8e9e-f907dd5cb2f7"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{LBL_PERIOD_3}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="705" y="84" width="75" height="14" uuid="6252e40e-5de1-4744-b590-79aa65471247"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Total]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="0" width="30" height="14" uuid="8f4825bf-1185-475d-9143-74d1a534e1b4"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="30" height="14" uuid="af15fcec-dbfa-4317-baeb-ce492d95e314"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="70" width="30" height="14" uuid="c9ebf689-0962-4160-89fd-51ead24ae8fc"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="28" width="30" height="14" uuid="be1f54e0-e8be-4693-889a-7b4b2afb1b2b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="30" height="14" uuid="32186f51-9f8f-426f-9ee1-698831628404"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="84" width="30" height="14" uuid="740c83bd-86e4-4c31-8396-7a775266917d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="330" y="70" width="75" height="14" uuid="2dcc9834-2746-47f4-b68b-5bb817471f4c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="42" width="30" height="14" uuid="2d34afa2-2088-45ba-a12c-ac9a32a7a094"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="42" width="300" height="14" uuid="56523789-7692-44d1-b718-549149040e46"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tampilkan Customer dgn Amount >= (in Million Rp) :]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="330" y="42" width="75" height="14" uuid="1f41217e-ee74-4c74-9397-2cd9abb4a698"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtShow}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="555" y="84" width="75" height="14" uuid="49e7fb2c-0883-4079-892a-7c242a73ffbe"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{LBL_PERIOD_4}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="630" y="84" width="75" height="14" uuid="a4bdb8c6-17a0-453f-94c7-17bba9fb2b5f"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{LBL_PERIOD_5}]]></textFieldExpression>
			</textField>
		</band>
	</title>
	<detail>
		<band height="14" splitType="Stretch">
			<printWhenExpression><![CDATA[$F{GROUP_NO} == 1 && $F{SUBGROUP_NO} == 1]]></printWhenExpression>
			<textField>
				<reportElement x="30" y="0" width="300" height="14" uuid="12e08962-3c98-4b38-9f81-91ad3a7dbc8b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{CUST_NAME}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="330" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="bee92828-ff47-42d0-ae05-846cfe4ba2b6"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="405" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="994e4cdf-fe74-48bd-9dee-06d3b80a36d1"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_2}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="480" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="76f939af-1975-4ece-b3b5-deb5735870c6"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_3}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="705" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="5d440916-f999-4577-af5b-4c73572fea29"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="0" y="0" width="30" height="14" uuid="68a90243-c956-40c9-91e0-39d877d86c25"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{NO_URUT}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="555" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="1a72f86a-d62c-4ea2-8028-9835e7314a29"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_4}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="630" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="b298e5ab-21d7-49e0-a389-66d0794101d6"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_IDR_PERIOD_5}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<summary>
		<band height="84" splitType="Stretch">
			<staticText>
				<reportElement x="30" y="56" width="300" height="14" uuid="71b2f667-2eb7-404b-805b-97a8ac9a09b4"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[% Big Value Shipment]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="70" width="300" height="14" uuid="df03bc76-7710-4ffc-ac2f-60b0cf56d956"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Jumlah Big Value Shipment]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="0" width="30" height="14" uuid="e414f438-fd12-47c4-81b7-68a046585c47"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="30" height="14" uuid="e087f2a0-4054-4896-8024-ecc25b552974"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="70" width="30" height="14" uuid="025d2c3b-e288-4269-9365-4fc8c4953e89"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,##0" isBlankWhenNull="true">
				<reportElement x="330" y="70" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="597bebd0-fa41-46cb-9fec-213651472030"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{JML_BIG_P1_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0" isBlankWhenNull="true">
				<reportElement x="405" y="70" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="eeb94586-f43b-4d76-9bec-fbce92895177"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{JML_BIG_P2_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
				<reportElement x="330" y="56" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="eccffa95-f121-46cc-96bc-45fee0463da3"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{pcn01}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
				<reportElement x="405" y="56" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="fdfaa117-71dd-4d77-8e26-1dfcc9ddf70d"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{pcn02}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="30" y="14" width="300" height="14" uuid="2eb443bc-b3cb-4df0-838e-a6022a9bfc35"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Grand Total]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="30" height="14" uuid="68e26d5e-702e-4e0d-bbfe-49cdab9cb7cb"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="330" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="bf743133-5a5c-4a9b-9810-964d73e5c9d5"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1_4}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="405" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="cee4cad0-46ab-441b-90ce-ad0f1cfa2175"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_12_2}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="42" width="30" height="14" uuid="c99843c5-cc99-40ba-9097-2ad7d9031c9d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="28" width="30" height="14" uuid="518c72d1-26a7-461b-a74b-8f04fb516578"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="28" width="300" height="14" uuid="68fea30c-97cc-43ca-9e94-a1976dc1d1dd"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Grand Total Outstanding SO]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="705" y="28" width="75" height="14" uuid="fe077d3e-ade0-4954-b24f-bb64ae8fb005"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_IDR_3}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="330" y="28" width="75" height="14" uuid="65453331-ab78-4597-944e-dc4abe8a7d16"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="405" y="28" width="75" height="14" uuid="82ba1d99-0b0d-4cb0-aad6-b60473bc25cd"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="630" y="28" width="75" height="14" uuid="3e0e1663-b8e0-4660-8db6-062e609854b7"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="630" y="14" width="75" height="14" uuid="1e09a32f-87bb-42b4-b142-fc2cde1f998d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="705" y="14" width="75" height="14" uuid="16e215aa-0c03-4ce1-87f3-7adcb5d5094b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="480" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="b8f761bd-b762-456b-a5df-723453ddc2e9"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_123_2}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="555" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="3b7b9382-478d-4e1d-a115-f8c17f36e4cb"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{AMOUNT_IDR_PERIOD_1234_2}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="480" y="28" width="75" height="14" uuid="6ce254f7-c210-4941-b7b5-71fcce37bed0"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="555" y="28" width="75" height="14" uuid="8aa866f5-798b-4d08-b56d-5d27c1afdc5a"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,##0" isBlankWhenNull="true">
				<reportElement x="480" y="70" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="f7f0c38a-c91e-414e-9070-a830d551dea7"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{JML_BIG_P3_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0" isBlankWhenNull="true">
				<reportElement x="555" y="70" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="9fd87351-f7ff-4b87-a471-6e513d3f2bf4"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{JML_BIG_P4_1}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
				<reportElement x="555" y="56" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="5c0c9d86-e912-4925-af2e-f7cf76c07b16"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{pcn04}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
				<reportElement x="480" y="56" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="967f78b4-85f8-4781-a3b4-9db61a7b1fae"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{pcn03}]]></textFieldExpression>
			</textField>
		</band>
	</summary>
	<noData>
		<band height="98">
			<staticText>
				<reportElement x="0" y="84" width="405" height="14" uuid="92bf23b7-21fa-477c-a507-40c45eff63b0"/>
				<textElement>
					<font size="10" isBold="true"/>
				</textElement>
				<text><![CDATA[***** DATA TIDAK DITEMUKAN *****]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="70" width="300" height="14" uuid="8a349f0a-ff42-4873-a98a-e6c3dc1cdc07"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="42" width="300" height="14" uuid="1092fd17-dd2c-41bb-955f-2b0f713cb60e"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tampilkan Customer dgn Amount >= (in Million Rp) :]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="330" y="56" width="75" height="14" uuid="c577a940-1c0e-4ebf-b16a-62df6a772fce"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="28" width="30" height="14" uuid="613d6746-22b9-4337-9fe5-148951859bc7"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="30" height="14" uuid="2f37d8ae-c81d-4794-94a8-5826f0fa8cb0"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="MM-yyyy" isBlankWhenNull="true">
				<reportElement x="480" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="a7549f68-959a-41d3-9a10-04c02ceaf9d1"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{EstRealUpto}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="42" width="30" height="14" uuid="3e0c8f35-79c5-4d3f-bd62-5666bb82d926"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="330" y="0" width="75" height="14" uuid="1f0407e6-0b91-4b7c-ac91-0cdcaf2c2d4c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="0" width="30" height="14" uuid="bce65072-75cc-4250-a0e9-43a3d2191e81"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="405" y="14" width="75" height="14" uuid="5e59d17f-00b2-405f-ae22-4ac28cd896be"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[s/d]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="14" width="300" height="14" uuid="52bc3fd9-9dfa-4cd6-bbb3-717e7e242852"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Perkiraan Realisasi Invoice : ]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="56" width="300" height="14" uuid="add9cea8-19d0-41a7-8919-07b28dfa6c54"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Dicetak pada :]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="MM-yyyy" isBlankWhenNull="true">
				<reportElement x="330" y="14" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="f02c648b-37fe-41a1-9dc6-ec3060a01c8f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{EstRealFrom}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="330" y="42" width="75" height="14" uuid="872a7b85-f008-4ce8-9f10-a3d9bbefbcce"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtShow}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="70" width="30" height="14" uuid="a8a77159-2415-4938-9d98-57dd81ded99b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="28" width="300" height="14" uuid="6d09e9ac-255d-4209-8f77-a152a739eb83"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Cabang :]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="30" height="14" uuid="df3bc218-af54-49d1-9720-3714292c1e2f"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="30" y="0" width="300" height="14" uuid="e2b22f9d-9023-47f7-b002-cb01370762a6"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04053-02) - PROJECTION SALES REVENUE ACS]]></text>
			</staticText>
			<textField>
				<reportElement x="330" y="28" width="75" height="14" uuid="5a431922-15db-4d55-b747-e47287de205f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Cabang}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="330" y="70" width="75" height="14" uuid="c9e8d343-ad68-4a57-97c0-170e10ad1075"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</noData>
</jasperReport>
