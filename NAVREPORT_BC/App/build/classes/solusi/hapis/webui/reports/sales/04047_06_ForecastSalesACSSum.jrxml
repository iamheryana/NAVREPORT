<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="04047_06_ForecastSalesACSSum" language="groovy" pageWidth="900" pageHeight="595" orientation="Landscape" whenNoDataType="NoDataSection" columnWidth="860" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20" uuid="b406b291-7ccc-4e85-8d33-6ed4d9da73cd">
	<property name="ireport.zoom" value="1.3310000000001363"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<parameter name="Tahun" class="java.lang.Integer">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Sem" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Sem1Akhir" class="java.lang.Integer">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="AmtBig" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[SELECT	1 AS NO_JUDUL
		,('PIPELINE ' +
			CASE	WHEN $P{Sem} = 'ALL' THEN 'ALL SEMESTER '
					WHEN $P{Sem} = 'S1' THEN 'SEMESTER I '
					WHEN $P{Sem} = 'S2' THEN 'SEMESTER II '
			END + CAST( $P{Tahun} as varchar(4))) AS JUDUL
		, CABX.[Code] AS URUT
		, CABX.[Name] AS KETERANGAN
		, ISNULL(II1.AMOUNT_POTENSI, 0) AS AMOUNT_POTENSI
		, ISNULL(II1.PCN_POTENSI, 0) AS PCN_POTENSI
		, ISNULL(II1.PCN_JML_SALES, 0) AS PCN_JML_SALES
		, ISNULL(II1.JML_SALES, 0) AS JML_SALES
		, ISNULL(II1.AVG_PER_SALES, 0) AS AVG_PER_SALES
		, 0 AS JML_CUST
FROM [dbo].[BC_AUTOJAYA$Responsibility Center] CABX
LEFT JOIN	(
			SELECT
					 XXI.CABANG_NO AS URUT
					, SUM(XXI.AMOUNT_POTENSI) AS AMOUNT_POTENSI
					,
								(
									CASE WHEN SUM(XXI.AMOUNT_POTENSI) = 0 THEN
										0
									ELSE
										(SUM(XXI.AMOUNT_POTENSI) / (SUM(SUM(XXI.AMOUNT_POTENSI)) OVER (PARTITION BY 1)) * 100 )
									END
								) AS PCN_POTENSI

					,
								(
									CASE WHEN MAX(XXI.JML_SALES) = 0 THEN
										0
									ELSE
										((MAX(XXI.JML_SALES) * 100.00)/ (SUM(MAX(XXI.JML_SALES)) OVER (PARTITION BY 1)))
									END
								) AS PCN_JML_SALES
					, MAX(XXI.JML_SALES) AS JML_SALES
					, CASE WHEN MAX(XXI.JML_SALES) = 0 THEN 0 ELSE SUM(XXI.AMOUNT_POTENSI) / MAX(XXI.JML_SALES) END AS AVG_PER_SALES
			FROM	(
						SELECT	SLS.[Global Dimension 1 Code] AS CABANG_NO
								, XXX.SALES_CODE
								, COUNT(XXX.SALES_CODE) OVER(PARTITION BY SLS.[Global Dimension 1 Code]) AS JML_SALES
								, CASE	WHEN $P{Sem} = 'ALL' THEN (SUM(XXX.AMOUNT_S1) + SUM(XXX.AMOUNT_S2))
										WHEN $P{Sem} = 'S1' THEN SUM(XXX.AMOUNT_S1)
										WHEN $P{Sem} = 'S2' THEN SUM(XXX.AMOUNT_S2)
										ELSE 0
								  END AMOUNT_POTENSI
						FROM	(
									SELECT	CMP.SALES AS SALES_CODE
											,  $P{Tahun} AS YEAR_SUM
											, 0 AS AMOUNT_S1
											, 0 AS AMOUNT_S2
									FROM	(
												SELECT	DISTINCT M06.SLS_OR_CAB AS SALES
												FROM	[dbo].[M06_TARGET_PIPELINE] M06
												WHERE	(M06.TAHUN = $P{Tahun} OR M06.TAHUN = $P{Tahun} - 1)  AND
														M06.JENIS = 'SALES' AND
														M06.[STATUS] =  'ACTIVE'
											) CMP
									UNION ALL
									SELECT	XI.SALES_CODE
											, $P{Tahun} AS YEAR_SUM
											, SUM(XI.AMOUNT_S1) AS AMOUNT_S1
											, SUM(XI.AMOUNT_S2) AS AMOUNT_S2
									FROM	(
												SELECT	MIN(X1.GROUP_NO) AS GROUP_NO
														,X1.GROUP_PIPELINE
														,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'AWARDED (A) '
																	WHEN MIN(X1.GROUP_NO) =  2 THEN	'HIGH POTENTIAL (H) '
																	WHEN MIN(X1.GROUP_NO) =  3 THEN	'MEDIUM POTENTIAL (M)'
																	WHEN MIN(X1.GROUP_NO) =  4 THEN	'LOW POTENTIAL (L)'
																	ELSE 'OTHERS PIPELINE (R)'
															END AS GROUP_DESC
														,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.CUSTOMER ELSE X1.BRANCHES_NAME END AS SUBGROUP_DESC
														,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SPV_BY ELSE '' END AS SPV_BY
														,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SALES_CODE ELSE '' END AS SALES_CODE
														, X1.BRANCHES
														, SUM(X1.AMOUNT) AS AMOUNT
														, SUM(X1.AMOUNT_S1) AS AMOUNT_S1
														, SUM(X1.AMOUNT_S2) AS AMOUNT_S2
												FROM	(
															SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
																	,CAB.[Name] AS BRANCHES_NAME
																	, X.SALES_CODE
																	, X.CUSTOMER
																	, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER, CAB.[Name]) AS SPV_BY
																	,	CASE WHEN X.SIZE_PROJECT = 'A' THEN
																			1
																		ELSE
																			CASE WHEN X.SIZE_PROJECT = 'H' THEN
																				2
																			ELSE
																				CASE WHEN X.SIZE_PROJECT = 'M' THEN
																					3
																				ELSE
																					CASE WHEN X.SIZE_PROJECT = 'L' THEN
																						4
																					ELSE
																						CASE WHEN ($P{AmtBig}) <= 0 THEN
																							CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																						ELSE
																							CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}) THEN 4 ELSE
																								CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																							END
																						END
																					END
																				END
																			END
																		END AS GROUP_NO
																	,	CASE	WHEN X.SIZE_PROJECT = 'A' THEN 'P1'
																				WHEN X.SIZE_PROJECT = 'H' THEN 'P2'
																				WHEN X.SIZE_PROJECT = 'M' THEN 'P3'
																				ELSE 'P4'
																		END AS GROUP_PIPELINE
																	,SUM(X.AMOUNT) AS AMOUNT
																	,SUM(X.AMOUNT_S1) AS AMOUNT_S1
																	,SUM(X.AMOUNT_S2) AS AMOUNT_S2
															FROM	(
																		SELECT	MAD.COMPANY
																				,MAD.SALES_CODE
																				,MAD.CABANG
																				,MAD.CUSTOMER
																				,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																				,MAD.POTENSIAL_PROJECT
																				,MAD.SPV_BY
																				,MAD.ITEM
																				,MAD.ITEM_CAT
																				,MAD.HW_PS
																				,ROUND((
																					CASE WHEN MAD.JML_TAHUN <> 0 THEN
																						CASE WHEN  MAD.EST_Q = 1234 THEN
																							((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
																						ELSE
																							CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																									WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																									WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																									ELSE 0
																							END
																						END
																					ELSE
																						(MAD.UNIT_PRICE * MAD.QTY_OUT)
																					END
																					/ 1000000 ),2) AS AMOUNT
																				,	ROUND(((
																								CASE WHEN MAD.JML_TAHUN <> 0 THEN
																									CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																										(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																									ELSE
																										0
																									END
																								ELSE
																									CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																								END
																								+
																								CASE WHEN MAD.JML_TAHUN <> 0 THEN
																									CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																										(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																									ELSE
																										0
																									END
																								ELSE
																									CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																								END
																					) / 1000000) ,2) AS AMOUNT_S1
																				,	ROUND(((
																								CASE WHEN MAD.JML_TAHUN <> 0 THEN
																									CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																										(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																									ELSE
																										0
																									END
																								ELSE
																									CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																								END
																								+
																								CASE WHEN MAD.JML_TAHUN <> 0 THEN
																									CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																										(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																									ELSE
																										0
																									END
																								ELSE
																									CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																								END
																					) / 1000000) ,2) AS AMOUNT_S2
																				,MAD.DIM_PRINCIPAL
																				,MAD.EST_YEAR
																		FROM	(
																					SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
																							,SOH.[Salesperson Code] AS SALES_CODE
																							,SOH.[Responsibility Center] AS CABANG
																							,SOH.[Sell-to Customer Name] AS CUSTOMER
																							, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																									SUBSTRING(SOH.[Posting Description], 1,1)
																								ELSE
																									CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																								END AS SIZE_PROJECT
																							, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
																							,SOH.[Sell-to County] AS SPV_BY
																							,SOL.[No_] AS ITEM
																							,SOL.[Description] AS ITEM_DESC
																							,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
																							,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
																							,SOL.[Quantity] AS QTY_OUT
																							,SOL.[Unit Price] AS UNIT_PRICE
																							,DIMD.DIM_PRINCIPAL
																							,SOH.[Payment Discount _] AS JML_TAHUN
																							,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																									CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																										CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																											CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																												$P{Tahun}
																											ELSE
																												0
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																												CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																											ELSE
																												0
																											END
																										END
																									ELSE
																										CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																											CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																												$P{Tahun}
																											ELSE
																												0
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																												CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																											ELSE
																												0
																											END
																										END
																									END
																								ELSE
																									CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																										DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																									END
																								END AS EST_YEAR
																							,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																									CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																										CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																											CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																												1234
																											ELSE
																												CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																													CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																															WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																															WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																															ELSE 4
																													END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																												CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																														WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																														WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																														ELSE 123
																												END
																											ELSE
																												0
																											END
																										END
																									ELSE
																										CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																											CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																												1234
																											ELSE
																												CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																													CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																															WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																															WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																															ELSE 4
																													END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																												CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																														WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																														WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																														ELSE 123
																												END
																											ELSE
																												0
																											END
																										END
																									END
																								ELSE
																									CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																										DATEPART(quarter, GETDATE())
																									ELSE
																										DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																									END
																								END AS EST_Q
																					FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																					INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																					LEFT JOIN	(
																									SELECT X.[Dimension Set ID]
																											,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																									FROM [dbo].[BC_AUTOJAYA$Dimension Set Entry] X
																									GROUP BY [Dimension Set ID]
																								) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
																					WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																				) MAD
																	) X
															LEFT JOIN	(
																			SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
																			FROM	(
																						SELECT	MAD.CUSTOMER_REAL
																								,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																								,MAD.EST_YEAR
																						FROM	(
																									SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																											, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																													SUBSTRING(SOH.[Posting Description], 1,1)
																												ELSE
																													CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																												END AS SIZE_PROJECT
																											,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																													CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																														CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																															CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																																$P{Tahun}
																															ELSE
																																0
																															END
																														ELSE
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																															ELSE
																																0
																															END
																														END
																													ELSE
																														CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																															CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																																$P{Tahun}
																															ELSE
																																0
																															END
																														ELSE
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																															ELSE
																																0
																															END
																														END
																													END
																												ELSE
																													CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																														DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																													END
																												END AS EST_YEAR
																									FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																									INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																									WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																								) MAD
																					) X
																			WHERE	X.EST_YEAR = $P{Tahun}
																					AND X.SIZE_PROJECT IN ('M', 'H', 'A')
																		) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER
															LEFT JOIN [dbo].[BC_AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
															LEFT JOIN [dbo].[BC_AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
															WHERE	X.EST_YEAR = $P{Tahun}
																	AND SLS.[Global Dimension 1 Code] IS NOT NULL
															GROUP BY CAB.[Name]
																	,X.SALES_CODE
																	,X.CUSTOMER
																	,X.SIZE_PROJECT
																	,SLS.[Global Dimension 1 Code]
														) X1
												GROUP BY X1.CUSTOMER
														,X1.BRANCHES_NAME
														,X1.SPV_BY
														,X1.SALES_CODE
														,X1.BRANCHES
														,X1.GROUP_PIPELINE
											) XI
									WHERE XI.GROUP_NO <> 5
									GROUP BY XI.SALES_CODE
								) XXX
						LEFT JOIN [dbo].[BC_AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = XXX.SALES_CODE
						WHERE	XXX.YEAR_SUM = $P{Tahun}
								AND SLS.[Global Dimension 1 Code] IS NOT NULL
						GROUP BY SLS.[Global Dimension 1 Code], XXX.SALES_CODE
					) XXI
			GROUP BY XXI.CABANG_NO
		) II1 ON II1.URUT = CABX.[Code]
UNION ALL
SELECT	4 AS NO_JUDUL
		,('TOTAL POTENSI ' +
			CASE	WHEN $P{Sem} = 'ALL' THEN 'ALL SEMESTER '
					WHEN $P{Sem} = 'S1' THEN 'SEMESTER I '
					WHEN $P{Sem} = 'S2' THEN 'SEMESTER II '
			END + CAST( $P{Tahun} as varchar(4))) AS JUDUL
		, KTG.KATEGORI AS URUT
		, KTG.KETERANGAN
		, ISNULL(II2.AMOUNT_POTENSI,0) AS AMOUNT_POTENSI
		, ISNULL(II2.PCN_POTENSI,0) AS PCN_POTENSI
		, 0 AS PCN_JML_SALES
		, ISNULL(II2.JML_SALES,0) AS JML_SALES
		, 0 AS AVG_PER_SALES
		, ISNULL(II2.JML_CUST,0) AS JML_CUST
FROM	(
			SELECT 1 AS KATEGORI, 'Potensi >= 10M' AS KETERANGAN
			UNION ALL
			SELECT 2 AS KATEGORI, '5M >= Potensi < 10M' AS KETERANGAN
			UNION ALL
			SELECT 3 AS KATEGORI, '1M >= Potensi < 5M' AS KETERANGAN
			UNION ALL
			SELECT 4 AS KATEGORI, 'Potensi < 1M' AS KETERANGAN
		) KTG
LEFT JOIN	(
				SELECT	XI4.KATEGORI
						, SUM(XI4.AMOUNT_POTENSI) AS AMOUNT_POTENSI
						,
							(
								CASE WHEN SUM(XI4.AMOUNT_POTENSI) = 0 THEN
									0
								ELSE
									(SUM(XI4.AMOUNT_POTENSI) / (SUM(SUM(XI4.AMOUNT_POTENSI)) OVER (PARTITION BY 1)) * 100 )
								END
							) AS PCN_POTENSI
						, MAX(XI4.JML_SALES) AS JML_SALES
						, MAX(XI4.JML_CUST) AS JML_CUST
				FROM	(
							SELECT
									XI3.KATEGORI
									, COUNT(XI3.SALES_CODE) OVER (PARTITION BY XI3.KATEGORI) AS JML_SALES
									, MAX(XI3.JML_CUST) AS JML_CUST
									, SUM(XI3.AMOUNT_POTENSI) AS AMOUNT_POTENSI
							FROM	(
										SELECT
												XI2.KATEGORI
												, XI2.SALES_CODE
												, 0 AS JML_CUST
												, SUM(XI2.AMOUNT_POTENSI) AS AMOUNT_POTENSI
										FROM	(
													SELECT	CASE	WHEN SUM(XI1.AMOUNT_POTENSI) >= 10000.00 THEN 1
																	WHEN SUM(XI1.AMOUNT_POTENSI) >= 5000.00 AND SUM(XI1.AMOUNT_POTENSI) < 10000.00 THEN 2
																	WHEN SUM(XI1.AMOUNT_POTENSI) >= 1000.00 AND SUM(XI1.AMOUNT_POTENSI) < 5000.00 THEN 3
																	ELSE 4 END AS KATEGORI
															,XI1.SALES_CODE
															, SUM(XI1.AMOUNT_POTENSI) AS AMOUNT_POTENSI
													FROM	(

																SELECT	'' AS CUSTOMER
																		, CMP.SALES AS SALES_CODE
																		, 0 AS AMOUNT_POTENSI
																FROM	(
																			SELECT	DISTINCT M06.SLS_OR_CAB AS SALES
																			FROM	[dbo].[M06_TARGET_PIPELINE] M06
																			WHERE	(M06.TAHUN = $P{Tahun} OR M06.TAHUN = $P{Tahun} - 1)  AND
																					M06.JENIS = 'SALES' AND
																					M06.[STATUS] =  'ACTIVE'
																		) CMP
																UNION ALL
																SELECT	XI.SUBGROUP_DESC AS CUSTOMER
																		,XI.SALES_CODE
																		, CASE	WHEN $P{Sem} = 'ALL' THEN (SUM(XI.AMOUNT_S1) + SUM(XI.AMOUNT_S2))
																				WHEN $P{Sem} = 'S1' THEN SUM(XI.AMOUNT_S1)
																				WHEN $P{Sem} = 'S2' THEN SUM(XI.AMOUNT_S2)
																				ELSE 0
																			END AMOUNT_POTENSI
																FROM	(
																			SELECT	MIN(X1.GROUP_NO) AS GROUP_NO
																					,X1.GROUP_PIPELINE
																					,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'AWARDED (A) '
																								WHEN MIN(X1.GROUP_NO) =  2 THEN	'HIGH POTENTIAL (H) '
																								WHEN MIN(X1.GROUP_NO) =  3 THEN	'MEDIUM POTENTIAL (M)'
																								WHEN MIN(X1.GROUP_NO) =  4 THEN	'LOW POTENTIAL (L)'
																								ELSE 'OTHERS PIPELINE (R)'
																						END AS GROUP_DESC
																					,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.CUSTOMER ELSE X1.BRANCHES_NAME END AS SUBGROUP_DESC
																					,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SPV_BY ELSE '' END AS SPV_BY
																					,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SALES_CODE ELSE '' END AS SALES_CODE
																					, X1.BRANCHES
																					, SUM(X1.AMOUNT) AS AMOUNT
																					, SUM(X1.AMOUNT_S1) AS AMOUNT_S1
																					, SUM(X1.AMOUNT_S2) AS AMOUNT_S2
																			FROM	(
																						SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
																								,CAB.[Name] AS BRANCHES_NAME
																								, X.SALES_CODE
																								, X.CUSTOMER
																								, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER, CAB.[Name]) AS SPV_BY
																								,	CASE WHEN X.SIZE_PROJECT = 'A' THEN
																										1
																									ELSE
																										CASE WHEN X.SIZE_PROJECT = 'H' THEN
																											2
																										ELSE
																											CASE WHEN X.SIZE_PROJECT = 'M' THEN
																												3
																											ELSE
																												CASE WHEN X.SIZE_PROJECT = 'L' THEN
																													4
																												ELSE
																													CASE WHEN ($P{AmtBig}) <= 0 THEN
																														CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																													ELSE
																														CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}) THEN 4 ELSE
																															CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																														END
																													END
																												END
																											END
																										END
																									END AS GROUP_NO
																								,	CASE	WHEN X.SIZE_PROJECT = 'A' THEN 'P1'
																											WHEN X.SIZE_PROJECT = 'H' THEN 'P2'
																											WHEN X.SIZE_PROJECT = 'M' THEN 'P3'
																											ELSE 'P4'
																									END AS GROUP_PIPELINE
																								,SUM(X.AMOUNT) AS AMOUNT
																								,SUM(X.AMOUNT_S1) AS AMOUNT_S1
																								,SUM(X.AMOUNT_S2) AS AMOUNT_S2
																						FROM	(
																									SELECT	MAD.COMPANY
																											,MAD.SALES_CODE
																											,MAD.CABANG
																											,MAD.CUSTOMER
																											,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																											,MAD.POTENSIAL_PROJECT
																											,MAD.SPV_BY
																											,MAD.ITEM
																											,MAD.ITEM_CAT
																											,MAD.HW_PS
																											,ROUND((
																												CASE WHEN MAD.JML_TAHUN <> 0 THEN
																													CASE WHEN  MAD.EST_Q = 1234 THEN
																														((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
																													ELSE
																														CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																																WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																																WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																																ELSE 0
																														END
																													END
																												ELSE
																													(MAD.UNIT_PRICE * MAD.QTY_OUT)
																												END
																												/ 1000000 ),2) AS AMOUNT
																											,	ROUND(((
																															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																															END
																															+
																															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																															END
																												) / 1000000) ,2) AS AMOUNT_S1
																											,	ROUND(((
																															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																															END
																															+
																															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																															END
																												) / 1000000) ,2) AS AMOUNT_S2
																											,MAD.DIM_PRINCIPAL
																											,MAD.EST_YEAR
																									FROM	(
																												SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
																														,SOH.[Salesperson Code] AS SALES_CODE
																														,SOH.[Responsibility Center] AS CABANG
																														,SOH.[Sell-to Customer Name] AS CUSTOMER
																														, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																																SUBSTRING(SOH.[Posting Description], 1,1)
																															ELSE
																																CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																															END AS SIZE_PROJECT
																														, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
																														,SOH.[Sell-to County] AS SPV_BY
																														,SOL.[No_] AS ITEM
																														,SOL.[Description] AS ITEM_DESC
																														,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
																														,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
																														,SOL.[Quantity] AS QTY_OUT
																														,SOL.[Unit Price] AS UNIT_PRICE
																														,DIMD.DIM_PRINCIPAL
																														,SOH.[Payment Discount _] AS JML_TAHUN
																														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																																		CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																																			$P{Tahun}
																																		ELSE
																																			0
																																		END
																																	ELSE
																																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																			CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																		ELSE
																																			0
																																		END
																																	END
																																ELSE
																																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																																			$P{Tahun}
																																		ELSE
																																			0
																																		END
																																	ELSE
																																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																		ELSE
																																			0
																																		END
																																	END
																																END
																															ELSE
																																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																	DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																																END
																															END AS EST_YEAR
																														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																																		CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																																			1234
																																		ELSE
																																			CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																																				CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																																						WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																																						WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																																						ELSE 4
																																				END
																																			ELSE
																																				0
																																			END
																																		END
																																	ELSE
																																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																			CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																																					WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																																					WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																																					ELSE 123
																																			END
																																		ELSE
																																			0
																																		END
																																	END
																																ELSE
																																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																																			1234
																																		ELSE
																																			CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																																				CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																																						ELSE 4
																																				END
																																			ELSE
																																				0
																																			END
																																		END
																																	ELSE
																																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																																					WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																																					WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																																					ELSE 123
																																			END
																																		ELSE
																																			0
																																		END
																																	END
																																END
																															ELSE
																																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																	DATEPART(quarter, GETDATE())
																																ELSE
																																	DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																																END
																															END AS EST_Q
																												FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																												INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																												LEFT JOIN	(
																																SELECT X.[Dimension Set ID]
																																		,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																																FROM [dbo].[BC_AUTOJAYA$Dimension Set Entry] X
																																GROUP BY [Dimension Set ID]
																															) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
																												WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																											) MAD
																								) X
																						LEFT JOIN	(
																										SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
																										FROM	(
																													SELECT	MAD.CUSTOMER_REAL
																															,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																															,MAD.EST_YEAR
																													FROM	(
																																SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																																		, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																																				SUBSTRING(SOH.[Posting Description], 1,1)
																																			ELSE
																																				CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																																			END AS SIZE_PROJECT
																																		,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																																						CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																																							$P{Tahun}
																																						ELSE
																																							0
																																						END
																																					ELSE
																																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																							CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																						ELSE
																																							0
																																						END
																																					END
																																				ELSE
																																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																																						CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																																							$P{Tahun}
																																						ELSE
																																							0
																																						END
																																					ELSE
																																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																							CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																						ELSE
																																							0
																																						END
																																					END
																																				END
																																			ELSE
																																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																																					DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																																				END
																																			END AS EST_YEAR
																																FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																																INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																																WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																															) MAD
																												) X
																										WHERE	X.EST_YEAR = $P{Tahun}
																												AND X.SIZE_PROJECT IN ('M', 'H', 'A')
																									) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER
																						LEFT JOIN [dbo].[BC_AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
																						LEFT JOIN [dbo].[BC_AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
																						WHERE	X.EST_YEAR = $P{Tahun}
																								AND SLS.[Global Dimension 1 Code] IS NOT NULL
																						GROUP BY CAB.[Name]
																								,X.SALES_CODE
																								,X.CUSTOMER
																								,X.SIZE_PROJECT
																								,SLS.[Global Dimension 1 Code]
																					) X1
																			GROUP BY X1.CUSTOMER
																					,X1.BRANCHES_NAME
																					,X1.SPV_BY
																					,X1.SALES_CODE
																					,X1.BRANCHES
																					,X1.GROUP_PIPELINE
																		) XI
																WHERE XI.GROUP_NO <> 5
																GROUP BY XI.GROUP_NO
																		,XI.GROUP_DESC
																		,XI.SUBGROUP_DESC
																		,XI.SALES_CODE
																		,XI.BRANCHES
																		,XI.SPV_BY
															) XI1
													GROUP BY XI1.SALES_CODE
												) XI2
										GROUP BY XI2.KATEGORI, XI2.SALES_CODE
									) XI3
							GROUP BY XI3.KATEGORI, XI3.SALES_CODE
						) XI4
				GROUP BY XI4.KATEGORI
			) II2 ON II2.KATEGORI = KTG.KATEGORI
UNION ALL
SELECT	3 AS NO_JUDUL
		,('AWARDED (A), HIGH (H), MEDIUM (M) & LOW (L) POTENTIAL ' +
			CASE	WHEN $P{Sem} = 'ALL' THEN 'ALL SEMESTER '
					WHEN $P{Sem} = 'S1' THEN 'SEMESTER I '
					WHEN $P{Sem} = 'S2' THEN 'SEMESTER II '
			END + CAST( $P{Tahun} as varchar(4))) AS JUDUL
		, 0 AS URUT
		, SPX.SPV_BY AS KETERANGAN
		, ISNULL(III.AMOUNT_POTENSI,0) AS AMOUNT_POTENSI
		, 0 AS PCN_POTENSI
		, 0 AS PCN_JML_SALES
		, ISNULL(III.JML_SALES,0) AS JML_SALES
		, 0 AS AVG_PER_SALES
		, ISNULL(III.JML_CUST,0) AS JML_CUST
FROM	(
			SELECT	DISTINCT SPV.SPV_BY
			FROM	(
						SELECT DISTINCT [Sell-to County] AS SPV_BY
						FROM [dbo].[BC_AUTOJAYA$Sales Header]
						WHERE [No_ Series] IN ('SBOM', 'SBOMS')
					) SPV
		) SPX
LEFT JOIN	(
				SELECT	 XII.SPV_BY
						, SUM(XII.AMOUNT_POTENSI) AS AMOUNT_POTENSI
						, MAX(XII.JML_SALES) AS JML_SALES
						, MAX(XII.JML_CUST) AS JML_CUST
				FROM	(
							SELECT	XXI.SPV_BY
									,XXI.SALES_CODE
									, COUNT(XXI.SALES_CODE) OVER (PARTITION BY XXI.SPV_BY) AS JML_SALES
									, MAX(XXI.JML_CUST) AS JML_CUST
									, SUM(XXI.AMOUNT_POTENSI) AS AMOUNT_POTENSI
							FROM	(
										SELECT	XI.SUBGROUP_DESC AS CUSTOMER
												,XI.SALES_CODE
												,XI.SPV_BY
												,COUNT(XI.SUBGROUP_DESC) OVER (PARTITION BY XI.SPV_BY) AS JML_CUST
												, CASE	WHEN $P{Sem} = 'ALL' THEN (SUM(XI.AMOUNT_S1) + SUM(XI.AMOUNT_S2))
														WHEN $P{Sem} = 'S1' THEN SUM(XI.AMOUNT_S1)
														WHEN $P{Sem} = 'S2' THEN SUM(XI.AMOUNT_S2)
														ELSE 0
												  END AMOUNT_POTENSI
										FROM	(
													SELECT	MIN(X1.GROUP_NO) AS GROUP_NO
															,X1.GROUP_PIPELINE
															,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'AWARDED (A) '
																		WHEN MIN(X1.GROUP_NO) =  2 THEN	'HIGH POTENTIAL (H) '
																		WHEN MIN(X1.GROUP_NO) =  3 THEN	'MEDIUM POTENTIAL (M)'
																		WHEN MIN(X1.GROUP_NO) =  4 THEN	'LOW POTENTIAL (L)'
																		ELSE 'OTHERS PIPELINE (R)'
																END AS GROUP_DESC
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.CUSTOMER ELSE X1.BRANCHES_NAME END AS SUBGROUP_DESC
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SPV_BY ELSE '' END AS SPV_BY
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SALES_CODE ELSE '' END AS SALES_CODE
															, X1.BRANCHES
															, SUM(X1.AMOUNT) AS AMOUNT
															, SUM(X1.AMOUNT_S1) AS AMOUNT_S1
															, SUM(X1.AMOUNT_S2) AS AMOUNT_S2
													FROM	(
																SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
																		,CAB.[Name] AS BRANCHES_NAME
																		, X.SALES_CODE
																		, X.CUSTOMER
																		, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER, CAB.[Name]) AS SPV_BY
																		,	CASE WHEN X.SIZE_PROJECT = 'A' THEN
																				1
																			ELSE
																				CASE WHEN X.SIZE_PROJECT = 'H' THEN
																					2
																				ELSE
																					CASE WHEN X.SIZE_PROJECT = 'M' THEN
																						3
																					ELSE
																						CASE WHEN X.SIZE_PROJECT = 'L' THEN
																							4
																						ELSE
																							CASE WHEN ($P{AmtBig}) <= 0 THEN
																								CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																							ELSE
																								CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}) THEN 4 ELSE
																									CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																								END
																							END
																						END
																					END
																				END
																			END AS GROUP_NO
																		,	CASE	WHEN X.SIZE_PROJECT = 'A' THEN 'P1'
																					WHEN X.SIZE_PROJECT = 'H' THEN 'P2'
																					WHEN X.SIZE_PROJECT = 'M' THEN 'P3'
																					ELSE 'P4'
																			END AS GROUP_PIPELINE
																		,SUM(X.AMOUNT) AS AMOUNT
																		,SUM(X.AMOUNT_S1) AS AMOUNT_S1
																		,SUM(X.AMOUNT_S2) AS AMOUNT_S2
																FROM	(
																			SELECT	MAD.COMPANY
																					,MAD.SALES_CODE
																					,MAD.CABANG
																					,MAD.CUSTOMER
																					,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																					,MAD.POTENSIAL_PROJECT
																					,MAD.SPV_BY
																					,MAD.ITEM
																					,MAD.ITEM_CAT
																					,MAD.HW_PS
																					,ROUND((
																						CASE WHEN MAD.JML_TAHUN <> 0 THEN
																							CASE WHEN  MAD.EST_Q = 1234 THEN
																								((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
																							ELSE
																								CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																										WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																										WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE 0
																								END
																							END
																						ELSE
																							(MAD.UNIT_PRICE * MAD.QTY_OUT)
																						END
																						/ 1000000 ),2) AS AMOUNT
																					,	ROUND(((
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																									+
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																						) / 1000000) ,2) AS AMOUNT_S1
																					,	ROUND(((
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																									+
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																						) / 1000000) ,2) AS AMOUNT_S2
																					,MAD.DIM_PRINCIPAL
																					,MAD.EST_YEAR
																			FROM	(
																						SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
																								,SOH.[Salesperson Code] AS SALES_CODE
																								,SOH.[Responsibility Center] AS CABANG
																								,SOH.[Sell-to Customer Name] AS CUSTOMER
																								, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																										SUBSTRING(SOH.[Posting Description], 1,1)
																									ELSE
																										CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																									END AS SIZE_PROJECT
																								, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
																								,SOH.[Sell-to County] AS SPV_BY
																								,SOL.[No_] AS ITEM
																								,SOL.[Description] AS ITEM_DESC
																								,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
																								,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
																								,SOL.[Quantity] AS QTY_OUT
																								,SOL.[Unit Price] AS UNIT_PRICE
																								,DIMD.DIM_PRINCIPAL
																								,SOH.[Payment Discount _] AS JML_TAHUN
																								,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																													$P{Tahun}
																												ELSE
																													0
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																													$P{Tahun}
																												ELSE
																													0
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																												ELSE
																													0
																												END
																											END
																										END
																									ELSE
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																										END
																									END AS EST_YEAR
																								,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																													1234
																												ELSE
																													CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																														CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																																WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																																WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																																ELSE 4
																														END
																													ELSE
																														0
																													END
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																														 WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																														 WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																														 ELSE 123
																													END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																													1234
																												ELSE
																													CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																														CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																																WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																																WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																																ELSE 4
																														END
																													ELSE
																														0
																													END
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																														 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																														 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																														 ELSE 123
																													END
																												ELSE
																													0
																												END
																											END
																										END
																									ELSE
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											DATEPART(quarter, GETDATE())
																										ELSE
																											DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																										END
																									END AS EST_Q
																						FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																						INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																						LEFT JOIN	(
																										SELECT X.[Dimension Set ID]
																											  ,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																										FROM [dbo].[BC_AUTOJAYA$Dimension Set Entry] X
																										GROUP BY [Dimension Set ID]
																									) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
																						WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																					) MAD
																		) X
																LEFT JOIN	(
																				SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
																				FROM	(
																							SELECT	MAD.CUSTOMER_REAL
																									,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																									,MAD.EST_YEAR
																							FROM	(
																										SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																												, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																														SUBSTRING(SOH.[Posting Description], 1,1)
																													ELSE
																														CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																													END AS SIZE_PROJECT
																												,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																														CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																																CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																																	$P{Tahun}
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																	CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																ELSE
																																	0
																																END
																															END
																														ELSE
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																																CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																																	$P{Tahun}
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																	CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																ELSE
																																	0
																																END
																															END
																														END
																													ELSE
																														CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																															DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																														END
																													END AS EST_YEAR
																										FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																										INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																										WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																									) MAD
																						) X
																				WHERE	X.EST_YEAR = $P{Tahun}
																						AND X.SIZE_PROJECT IN ('M', 'H', 'A')
																			) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER
																LEFT JOIN [dbo].[BC_AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
																LEFT JOIN [dbo].[BC_AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
																WHERE	X.EST_YEAR = $P{Tahun}
																		AND SLS.[Global Dimension 1 Code] IS NOT NULL
																GROUP BY CAB.[Name]
																		,X.SALES_CODE
																		,X.CUSTOMER
																		,X.SIZE_PROJECT
																		,SLS.[Global Dimension 1 Code]
															) X1
													GROUP BY X1.CUSTOMER
															,X1.BRANCHES_NAME
															,X1.SPV_BY
															,X1.SALES_CODE
															,X1.BRANCHES
															,X1.GROUP_PIPELINE
												) XI
										WHERE XI.GROUP_NO <> 5
										GROUP BY XI.GROUP_NO
												,XI.GROUP_DESC
												,XI.SUBGROUP_DESC
												,XI.SALES_CODE
												,XI.BRANCHES
												,XI.SPV_BY
									) XXI
							GROUP BY XXI.SPV_BY, XXI.SALES_CODE
						) XII
				GROUP BY XII.SPV_BY
			) III ON III.SPV_BY = SPX.SPV_BY
UNION ALL
SELECT	2 AS NO_JUDUL
		,('PIPELINE ' +
			CASE	WHEN $P{Sem} = 'ALL' THEN 'ALL SEMESTER '
					WHEN $P{Sem} = 'S1' THEN 'SEMESTER I '
					WHEN $P{Sem} = 'S2' THEN 'SEMESTER II '
			END + CAST( $P{Tahun} as varchar(4))) AS JUDUL
		, CABX.[Code] AS URUT
		, CABX.[Name] AS KETERANGAN
		, ISNULL(II4.AMOUNT_POTENSI, 0) AS AMOUNT_POTENSI
		, ISNULL(II4.PCN_POTENSI, 0) AS PCN_POTENSI
		, ISNULL(II4.PCN_JML_SALES, 0) AS PCN_JML_SALES
		, ISNULL(II4.JML_SALES, 0) AS JML_SALES
		, ISNULL(II4.AVG_PER_SALES, 0) AS AVG_PER_SALES
		, 0 AS JML_CUST
FROM [dbo].[BC_AUTOJAYA$Responsibility Center] CABX
LEFT JOIN	(
				SELECT
							XXI.CABANG_NO AS URUT
						, SUM(XXI.AMOUNT_POTENSI) AS AMOUNT_POTENSI
						,
									(
										CASE WHEN SUM(XXI.AMOUNT_POTENSI) = 0 THEN
											0
										ELSE
											(SUM(XXI.AMOUNT_POTENSI) / (SUM(SUM(XXI.AMOUNT_POTENSI)) OVER (PARTITION BY 1)) * 100 )
										END
									) AS PCN_POTENSI

						,
									(
										CASE WHEN MAX(XXI.JML_SALES) = 0 THEN
											0
										ELSE
											((MAX(XXI.JML_SALES) * 100.00)/ (SUM(MAX(XXI.JML_SALES)) OVER (PARTITION BY 1)))
										END
									) AS PCN_JML_SALES
						, MAX(XXI.JML_SALES) AS JML_SALES
						, CASE WHEN MAX(XXI.JML_SALES) = 0 THEN 0 ELSE SUM(XXI.AMOUNT_POTENSI) / MAX(XXI.JML_SALES) END AS AVG_PER_SALES
				FROM	(
							SELECT	XXX.CABANG_NO
									, XXX.CUST_NAME
									, COUNT(XXX.CUST_NAME) OVER(PARTITION BY XXX.CABANG_NO) AS JML_SALES
									, CASE	WHEN $P{Sem} = 'ALL' THEN (SUM(XXX.AMOUNT_S1) + SUM(XXX.AMOUNT_S2))
											WHEN $P{Sem} = 'S1' THEN SUM(XXX.AMOUNT_S1)
											WHEN $P{Sem} = 'S2' THEN SUM(XXX.AMOUNT_S2)
											ELSE 0
										END AMOUNT_POTENSI
							FROM	(
										SELECT	XI.BRANCHES AS CABANG_NO
												,XI.CUSTOMER AS CUST_NAME
												, SUM(XI.AMOUNT_S1) AS AMOUNT_S1
												, SUM(XI.AMOUNT_S2) AS AMOUNT_S2
										FROM	(
													SELECT	MIN(X1.GROUP_NO) AS GROUP_NO
															,X1.GROUP_PIPELINE
															,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'AWARDED (A) '
																		WHEN MIN(X1.GROUP_NO) =  2 THEN	'HIGH POTENTIAL (H) '
																		WHEN MIN(X1.GROUP_NO) =  3 THEN	'MEDIUM POTENTIAL (M)'
																		WHEN MIN(X1.GROUP_NO) =  4 THEN	'LOW POTENTIAL (L)'
																		ELSE 'OTHERS PIPELINE (R)'
																END AS GROUP_DESC
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.CUSTOMER ELSE X1.BRANCHES_NAME END AS SUBGROUP_DESC
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SPV_BY ELSE '' END AS SPV_BY
															,	CASE WHEN MIN(X1.GROUP_NO) <> 5 THEN	X1.SALES_CODE ELSE '' END AS SALES_CODE
															, X1.BRANCHES
															, X1.CUSTOMER
															, SUM(X1.AMOUNT) AS AMOUNT
															, SUM(X1.AMOUNT_S1) AS AMOUNT_S1
															, SUM(X1.AMOUNT_S2) AS AMOUNT_S2
													FROM	(
																SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
																		,CAB.[Name] AS BRANCHES_NAME
																		, X.SALES_CODE
																		, X.CUSTOMER
																		, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER, CAB.[Name]) AS SPV_BY
																		,	CASE WHEN X.SIZE_PROJECT = 'A' THEN
																				1
																			ELSE
																				CASE WHEN X.SIZE_PROJECT = 'H' THEN
																					2
																				ELSE
																					CASE WHEN X.SIZE_PROJECT = 'M' THEN
																						3
																					ELSE
																						CASE WHEN X.SIZE_PROJECT = 'L' THEN
																							4
																						ELSE
																							CASE WHEN ($P{AmtBig}) <= 0 THEN
																								CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																							ELSE
																								CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}) THEN 4 ELSE
																									CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 4 ELSE 5 END
																								END
																							END
																						END
																					END
																				END
																			END AS GROUP_NO
																		,	CASE	WHEN X.SIZE_PROJECT = 'A' THEN 'P1'
																					WHEN X.SIZE_PROJECT = 'H' THEN 'P2'
																					WHEN X.SIZE_PROJECT = 'M' THEN 'P3'
																					ELSE 'P4'
																			END AS GROUP_PIPELINE
																		,SUM(X.AMOUNT) AS AMOUNT
																		,SUM(X.AMOUNT_S1) AS AMOUNT_S1
																		,SUM(X.AMOUNT_S2) AS AMOUNT_S2
																FROM	(
																			SELECT	MAD.COMPANY
																					,MAD.SALES_CODE
																					,MAD.CABANG
																					,MAD.CUSTOMER
																					,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																					,MAD.POTENSIAL_PROJECT
																					,MAD.SPV_BY
																					,MAD.ITEM
																					,MAD.ITEM_CAT
																					,MAD.HW_PS
																					,ROUND((
																						CASE WHEN MAD.JML_TAHUN <> 0 THEN
																							CASE WHEN  MAD.EST_Q = 1234 THEN
																								((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
																							ELSE
																								CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																										WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																										WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE 0
																								END
																							END
																						ELSE
																							(MAD.UNIT_PRICE * MAD.QTY_OUT)
																						END
																						/ 1000000 ),2) AS AMOUNT
																					,	ROUND(((
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																									+
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																						) / 1000000) ,2) AS AMOUNT_S1
																					,	ROUND(((
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																									+
																									CASE WHEN MAD.JML_TAHUN <> 0 THEN
																										CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																											(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																										ELSE
																											0
																										END
																									ELSE
																										CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
																									END
																						) / 1000000) ,2) AS AMOUNT_S2
																					,MAD.DIM_PRINCIPAL
																					,MAD.EST_YEAR
																			FROM	(
																						SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
																								,SOH.[Salesperson Code] AS SALES_CODE
																								,SOH.[Responsibility Center] AS CABANG
																								,SOH.[Sell-to Customer Name] AS CUSTOMER
																								, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																										SUBSTRING(SOH.[Posting Description], 1,1)
																									ELSE
																										CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																									END AS SIZE_PROJECT
																								, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
																								,SOH.[Sell-to County] AS SPV_BY
																								,SOL.[No_] AS ITEM
																								,SOL.[Description] AS ITEM_DESC
																								,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
																								,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
																								,SOL.[Quantity] AS QTY_OUT
																								,SOL.[Unit Price] AS UNIT_PRICE
																								,DIMD.DIM_PRINCIPAL
																								,SOH.[Payment Discount _] AS JML_TAHUN
																								,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																													$P{Tahun}
																												ELSE
																													0
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																													$P{Tahun}
																												ELSE
																													0
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																												ELSE
																													0
																												END
																											END
																										END
																									ELSE
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																										END
																									END AS EST_YEAR
																								,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																													1234
																												ELSE
																													CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																														CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																																WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																																WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																																ELSE 4
																														END
																													ELSE
																														0
																													END
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																															WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																															WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																															ELSE 123
																													END
																												ELSE
																													0
																												END
																											END
																										ELSE
																											CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																												CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																													1234
																												ELSE
																													CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																														CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																																WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																																WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																																ELSE 4
																														END
																													ELSE
																														0
																													END
																												END
																											ELSE
																												CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																													CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																															WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																															WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																															ELSE 123
																													END
																												ELSE
																													0
																												END
																											END
																										END
																									ELSE
																										CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																											DATEPART(quarter, GETDATE())
																										ELSE
																											DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																										END
																									END AS EST_Q
																						FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																						INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																						LEFT JOIN	(
																										SELECT X.[Dimension Set ID]
																												,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																										FROM [dbo].[BC_AUTOJAYA$Dimension Set Entry] X
																										GROUP BY [Dimension Set ID]
																									) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
																						WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																					) MAD
																		) X
																LEFT JOIN	(
																				SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
																				FROM	(
																							SELECT	MAD.CUSTOMER_REAL
																									,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
																									,MAD.EST_YEAR
																							FROM	(
																										SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																												, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																														SUBSTRING(SOH.[Posting Description], 1,1)
																													ELSE
																														CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																													END AS SIZE_PROJECT
																												,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																														CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																																CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																																	$P{Tahun}
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																																	CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																ELSE
																																	0
																																END
																															END
																														ELSE
																															CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																																CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																																	$P{Tahun}
																																ELSE
																																	0
																																END
																															ELSE
																																CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																																	CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																																ELSE
																																	0
																																END
																															END
																														END
																													ELSE
																														CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																															DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																														END
																													END AS EST_YEAR
																										FROM [dbo].[BC_AUTOJAYA$Sales Header] SOH
																										INNER JOIN [dbo].[BC_AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																										WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
																									) MAD
																						) X
																				WHERE	X.EST_YEAR = $P{Tahun}
																						AND X.SIZE_PROJECT IN ('M', 'H', 'A')
																			) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER
																LEFT JOIN [dbo].[BC_AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
																LEFT JOIN [dbo].[BC_AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
																WHERE	X.EST_YEAR = $P{Tahun}
																		AND SLS.[Global Dimension 1 Code] IS NOT NULL
																GROUP BY CAB.[Name]
																		,X.SALES_CODE
																		,X.CUSTOMER
																		,X.SIZE_PROJECT
																		,SLS.[Global Dimension 1 Code]
															) X1
													GROUP BY X1.CUSTOMER
															,X1.BRANCHES_NAME
															,X1.SPV_BY
															,X1.SALES_CODE
															,X1.BRANCHES
															,X1.GROUP_PIPELINE
												) XI
										WHERE XI.GROUP_NO <> 5
										GROUP BY XI.BRANCHES , XI.CUSTOMER
									) XXX
							GROUP BY XXX.CABANG_NO, XXX.CUST_NAME
						) XXI
				GROUP BY XXI.CABANG_NO
			) II4 ON II4.URUT = CABX.[Code]]]>
	</queryString>
	<field name="NO_JUDUL" class="java.lang.Integer"/>
	<field name="JUDUL" class="java.lang.String"/>
	<field name="URUT" class="java.lang.Integer"/>
	<field name="KETERANGAN" class="java.lang.String"/>
	<field name="AMOUNT_POTENSI" class="java.math.BigDecimal"/>
	<field name="PCN_POTENSI" class="java.math.BigDecimal"/>
	<field name="PCN_JML_SALES" class="java.math.BigDecimal"/>
	<field name="JML_SALES" class="java.lang.Integer"/>
	<field name="AVG_PER_SALES" class="java.math.BigDecimal"/>
	<field name="JML_CUST" class="java.lang.Integer"/>
	<sortField name="NO_JUDUL"/>
	<sortField name="URUT"/>
	<variable name="vSemester" class="java.lang.String">
		<variableExpression><![CDATA[( $P{Sem}.equals( "S1" ) == true? "SEMESTER I"  : ($P{Sem}.equals( "S2" ) == true ? "SEMESTER II" : "ALL SEMESTER") )]]></variableExpression>
		<initialValueExpression><![CDATA[( $P{Sem}.equals( "S1" ) == true? "SEMESTER I"  : ($P{Sem}.equals( "S2" ) == true ? "SEMESTER II" : "ALL SEMESTER") )]]></initialValueExpression>
	</variable>
	<variable name="vSemesterAkhir" class="java.lang.String">
		<variableExpression><![CDATA[( $P{Sem1Akhir} == 1 ? "JANUARI" :
( $P{Sem1Akhir} == 2 ? "FEBRUARI" :
( $P{Sem1Akhir} == 3 ? "MARET" :
( $P{Sem1Akhir} == 4 ? "APRIL" :
( $P{Sem1Akhir} == 5 ? "MEI" :
( $P{Sem1Akhir} == 6 ? "JUNI" :
( $P{Sem1Akhir} == 7 ? "JULI" :
( $P{Sem1Akhir} == 8 ? "AGUSTUS" :
( $P{Sem1Akhir} == 9 ? "SEPTEMBER" :
( $P{Sem1Akhir} == 10 ? "OKTOBER" :
( $P{Sem1Akhir} == 11 ? "NOVEMBER" : "DESEMBER"
)))))))))))]]></variableExpression>
		<initialValueExpression><![CDATA[( $P{Sem1Akhir} == 1 ? "JANUARI" :
( $P{Sem1Akhir} == 2 ? "FEBRUARI" :
( $P{Sem1Akhir} == 3 ? "MARET" :
( $P{Sem1Akhir} == 4 ? "APRIL" :
( $P{Sem1Akhir} == 5 ? "MEI" :
( $P{Sem1Akhir} == 6 ? "JUNI" :
( $P{Sem1Akhir} == 7 ? "JULI" :
( $P{Sem1Akhir} == 8 ? "AGUSTUS" :
( $P{Sem1Akhir} == 9 ? "SEPTEMBER" :
( $P{Sem1Akhir} == 10 ? "OKTOBER" :
( $P{Sem1Akhir} == 11 ? "NOVEMBER" : "DESEMBER"
)))))))))))]]></initialValueExpression>
	</variable>
	<variable name="AMOUNT_POTENSI_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{AMOUNT_POTENSI}]]></variableExpression>
	</variable>
	<variable name="PCN_POTENSI_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{PCN_POTENSI}]]></variableExpression>
	</variable>
	<variable name="PCN_JML_SALES_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{PCN_JML_SALES}]]></variableExpression>
	</variable>
	<variable name="JML_SALES_1" class="java.lang.Integer" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_SALES}]]></variableExpression>
	</variable>
	<variable name="AVG_PER_SALES_1" class="java.math.BigDecimal" resetType="Group" resetGroup="Judul" calculation="Average">
		<variableExpression><![CDATA[$F{AVG_PER_SALES}]]></variableExpression>
	</variable>
	<variable name="JML_CUST_1" class="java.lang.Integer" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_CUST}]]></variableExpression>
	</variable>
	<variable name="JML_SALES_2" class="java.lang.Integer" resetType="Group" resetGroup="Judul" calculation="Sum">
		<variableExpression><![CDATA[$F{JML_SALES}]]></variableExpression>
	</variable>
	<group name="Judul" isStartNewColumn="true">
		<groupExpression><![CDATA[$F{NO_JUDUL}]]></groupExpression>
		<groupHeader>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 1]]></printWhenExpression>
				<textField>
					<reportElement x="0" y="0" width="225" height="14" uuid="7cfdbbda-4a51-498c-8446-8ae7387ee82b"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{JUDUL}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="225" y="14" width="50" height="14" uuid="b7adacd1-a159-4645-ba23-8c6d787a666d"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[%]]></text>
				</staticText>
				<staticText>
					<reportElement x="275" y="14" width="50" height="14" uuid="9c3f99da-58b4-4eb9-9b99-11a3472efe37"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[#Sales]]></text>
				</staticText>
				<staticText>
					<reportElement x="325" y="0" width="100" height="14" uuid="05224777-8844-4eda-81d7-2aeeeb60da64"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Average / Sales]]></text>
				</staticText>
				<staticText>
					<reportElement x="225" y="0" width="100" height="14" uuid="e51b1035-b8d8-4d1f-b7df-7eca59677f43"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="030fbc9e-d57a-4d21-995f-dfc7bbca5c82"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="325" y="14" width="100" height="14" uuid="4b984feb-6577-4e3b-82cc-356c4e089b8a"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="100" y="14" width="75" height="14" uuid="444edbf9-3f06-4946-adb1-8ae6a4c744ef"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Million Rp.]]></text>
				</staticText>
				<staticText>
					<reportElement x="175" y="14" width="50" height="14" uuid="8aa8b194-96cf-46fb-ac01-a85fa9ceda74"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[%]]></text>
				</staticText>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 3]]></printWhenExpression>
				<staticText>
					<reportElement x="150" y="14" width="75" height="14" uuid="f9180603-3987-4165-917d-f6cd87123d32"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Million Rp.]]></text>
				</staticText>
				<staticText>
					<reportElement x="100" y="14" width="50" height="14" uuid="01b35ebe-b0dc-4d63-acb2-90e4a3230702"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[# Sales]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="650ca276-7cfb-4839-b572-9b504fc66630"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField>
					<reportElement x="0" y="0" width="275" height="14" uuid="175e9c27-c282-4f91-98eb-31ec41afe657"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{JUDUL}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="225" y="14" width="50" height="14" uuid="ad61ab17-cd14-4a89-9fc5-ff38f62526b3"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[# Cust]]></text>
				</staticText>
			</band>
			<band height="14">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 4]]></printWhenExpression>
				<textField>
					<reportElement x="0" y="0" width="175" height="14" uuid="c56018c9-c8b5-47ab-97b8-c891d36c489d"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{JUDUL}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="175" y="0" width="50" height="14" uuid="e22dc518-7b60-45e7-b312-ef08e2dbb94f"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[# Sales]]></text>
				</staticText>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 2]]></printWhenExpression>
				<textField>
					<reportElement x="0" y="0" width="225" height="14" uuid="48d4a12d-5aa4-4f9b-a59a-3c68c2349d9b"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{JUDUL}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="325" y="0" width="100" height="14" uuid="b9cbf1a4-b462-49e5-b55b-164b6a7eaeaf"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Average / Customer]]></text>
				</staticText>
				<staticText>
					<reportElement x="225" y="0" width="100" height="14" uuid="8499a889-44e6-4542-b1ec-a7cc699368f3"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="100" y="14" width="75" height="14" uuid="e2dbfe40-f8bf-4595-bbb2-f92cd116d038"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Million Rp.]]></text>
				</staticText>
				<staticText>
					<reportElement x="225" y="14" width="50" height="14" uuid="fcc555f4-8504-41ca-a0f4-958cc55d5de8"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[%]]></text>
				</staticText>
				<staticText>
					<reportElement x="275" y="14" width="50" height="14" uuid="52063202-efa5-40be-871a-e7921d8d6f79"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[#Cust]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="9de80841-574a-4e38-afdc-46b30cedd429"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="175" y="14" width="50" height="14" uuid="b44109a3-2915-4cf6-a49f-9d5c9cd52040"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[%]]></text>
				</staticText>
				<staticText>
					<reportElement x="325" y="14" width="100" height="14" uuid="7e3a8639-a30c-40fa-8898-853f1b49628c"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 1]]></printWhenExpression>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="f7d83f33-f38a-4de0-a14b-f758c6d7815f"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_POTENSI_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="a026c684-5059-4bad-ba33-0aa6f11da073"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{PCN_POTENSI_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="0793ab39-576e-4fff-a3d1-77dae85aeb1d"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{PCN_JML_SALES_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="275" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="3b60988e-940c-4d93-b149-191e233aaa1b"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{JML_SALES_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="325" y="0" width="100" height="14" isPrintWhenDetailOverflows="true" uuid="a880ca6c-44d9-4de0-9605-325193246098"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AVG_PER_SALES_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="0" width="100" height="14" uuid="37370355-655a-4fc5-aa1f-5cc32da120a8"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="59b6bc6f-e434-4d6e-b1c1-cc52411fb5df"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
			<band height="29">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 3]]></printWhenExpression>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="5199fce2-05b2-4e41-9202-79ddf46514d3"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="0" width="100" height="14" uuid="a0804fbe-7039-4d6c-8a14-c6c93d10999b"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="150" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="35443ead-d26c-460f-acf7-c2644b4920f5"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_POTENSI_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##" isBlankWhenNull="true">
					<reportElement x="100" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="e46ce8f7-40e0-42a4-af08-19d82f6f6c54"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{JML_SALES_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="a78becdf-d85a-4b74-bab8-c92b48f7a961"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{JML_CUST_1}]]></textFieldExpression>
				</textField>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 4]]></printWhenExpression>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="4bb76ac6-a595-4ada-9210-909026f97636"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="0" y="0" width="100" height="14" uuid="0a6f8733-3d86-45c8-aad6-df14f462b254"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="5114e1c6-5364-406c-8247-a5ee5d28f061"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_POTENSI_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="06a0efaf-109c-4283-8307-ce14e869c9e1"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{JML_SALES_2}]]></textFieldExpression>
				</textField>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{NO_JUDUL} == 2]]></printWhenExpression>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="325" y="0" width="100" height="14" isPrintWhenDetailOverflows="true" uuid="b35a3d22-7393-4ecb-974d-4d7710366a04"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AVG_PER_SALES_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="14" width="100" height="14" uuid="a90a8dad-6983-4acf-a88e-37f790ff3f38"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="e783abc3-ac73-4cc9-a1aa-7d044ece97c9"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{PCN_JML_SALES_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="0" y="0" width="100" height="14" uuid="7ff7ec46-ae8a-4f6d-9e2f-dd22350a4dcd"/>
					<textElement textAlignment="Center">
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="275" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="dcec2d41-1aae-4a46-9d13-ef3570378829"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{JML_SALES_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="3db32edc-05bb-4fc0-a6de-0689a5c64867"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{PCN_POTENSI_1}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="af3bedc5-fd41-412a-8bd7-b086fe9ae6fe"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMOUNT_POTENSI_1}]]></textFieldExpression>
				</textField>
			</band>
		</groupFooter>
	</group>
	<title>
		<band height="112">
			<staticText>
				<reportElement x="0" y="0" width="225" height="14" uuid="acd4205f-277b-4ec2-ada9-5a79458adb73"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04047-06) FORECAST SALES ACS-SUMMARY]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="14" width="125" height="14" uuid="d4400665-9c25-4138-b12f-910908625b6a"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="100" height="14" uuid="e89ce257-f955-45e4-a80e-6cab058ed45a"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="84" width="100" height="14" uuid="5d516873-20c7-48a6-86a6-3aeae26f97ad"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Printed on :]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="100" y="84" width="125" height="14" uuid="4dc4a503-b27e-439e-b1ae-c79bf378ce8f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="28" width="100" height="14" uuid="2c8a0df7-dc37-4e35-92c1-f757b469bf68"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tahun :]]></text>
			</staticText>
			<textField>
				<reportElement x="100" y="28" width="125" height="14" uuid="66282874-183e-42fd-a70b-3c72c237d244"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Tahun}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="98" width="100" height="14" uuid="c8404edf-05d2-4cea-8408-fb98a70d4245"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="98" width="125" height="14" uuid="a07d29f1-a2db-4c3d-a037-6fceade291ee"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="100" height="14" uuid="354369a8-b8af-45f2-a888-b25999bb4c64"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Semester :]]></text>
			</staticText>
			<textField>
				<reportElement x="100" y="56" width="125" height="14" uuid="dbeede28-f59f-4ab8-888f-23d734a9ce31"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemester}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="42" width="100" height="14" uuid="1a5e7bf3-6de7-43a5-88f8-0480e388737f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Akhir Sem I :]]></text>
			</staticText>
			<textField>
				<reportElement x="100" y="42" width="125" height="14" uuid="134f10e2-6bb8-42f9-b32c-9cb39576df4a"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemesterAkhir}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="100" y="70" width="125" height="14" uuid="b123dcda-6cbe-405c-9c25-824429443fbc"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtBig}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="70" width="100" height="14" uuid="48839c2e-9cca-4b47-b8d8-1268c3e0e7cf"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Amt Big Proj. :]]></text>
			</staticText>
		</band>
	</title>
	<detail>
		<band height="14">
			<printWhenExpression><![CDATA[$F{NO_JUDUL} == 1]]></printWhenExpression>
			<textField>
				<reportElement x="0" y="0" width="100" height="14" uuid="c5321b00-c36f-4075-8102-a5dcf15081ec"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{KETERANGAN}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="0ac173f3-6074-4477-a2e2-ec51ad6a333b"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="def1642f-bb10-485f-b86f-f944c658b516"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{PCN_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="9bfa5010-534e-40f8-9ef6-b2c06ade3c72"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{PCN_JML_SALES}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="275" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="7c20ebfa-0578-4155-a273-e49b1716bd63"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{JML_SALES}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="325" y="0" width="100" height="14" isPrintWhenDetailOverflows="true" uuid="e1e66851-4694-4833-b039-36523fc55ff2"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AVG_PER_SALES}]]></textFieldExpression>
			</textField>
		</band>
		<band height="14">
			<printWhenExpression><![CDATA[$F{NO_JUDUL} == 3]]></printWhenExpression>
			<textField>
				<reportElement x="0" y="0" width="100" height="14" uuid="50c8bb6e-003f-4868-9ca9-35f45751c241"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{KETERANGAN}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="150" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="8090319e-3d2d-4d3b-8cb7-de1498bb864a"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="100" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="5b28e4d6-cdd2-4737-8ed3-94e960b3da8e"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{JML_SALES}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="eee15ced-4189-4a67-9feb-20538355b340"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{JML_CUST}]]></textFieldExpression>
			</textField>
		</band>
		<band height="14">
			<printWhenExpression><![CDATA[$F{NO_JUDUL} == 4]]></printWhenExpression>
			<textField>
				<reportElement x="0" y="0" width="100" height="14" uuid="1a88f5d3-fabd-4e24-beb4-16dff2a50ca6"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{KETERANGAN}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="14859955-6c3d-49ae-b2d2-474e364b2907"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="34acd408-cc4a-4a3d-994d-41d02d498aab"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{JML_SALES}]]></textFieldExpression>
			</textField>
		</band>
		<band height="14">
			<printWhenExpression><![CDATA[$F{NO_JUDUL} == 2]]></printWhenExpression>
			<textField>
				<reportElement x="0" y="0" width="100" height="14" uuid="cc716424-ad51-4982-86be-c994de29eea7"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{KETERANGAN}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="175" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="0b4bb823-062d-485e-8a70-b13b6ff072e4"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{PCN_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="275" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="7eebfcd0-eb67-43d5-9585-e55288d22522"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{JML_SALES}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="100" y="0" width="75" height="14" isPrintWhenDetailOverflows="true" uuid="49e5a25f-fa75-4fd0-b50d-354fd10b2690"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMOUNT_POTENSI}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="325" y="0" width="100" height="14" isPrintWhenDetailOverflows="true" uuid="6a8fc5e1-c6dc-4383-94ba-fa3b3bbc91c2"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AVG_PER_SALES}]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="225" y="0" width="50" height="14" isPrintWhenDetailOverflows="true" uuid="85cef8bb-9f38-45d9-890b-0da22f90ef49"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{PCN_JML_SALES}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<noData>
		<band height="126">
			<staticText>
				<reportElement x="100" y="112" width="285" height="14" uuid="e762fe98-ae4e-46c4-a6dc-d3d20f52f9ce"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[TIDAK ADA DATA YANG MEMENUHI KRITERIA]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="112" width="100" height="14" uuid="6a6cc73f-4591-44a1-bab5-6a29a48c0d3c"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="98" width="100" height="14" uuid="f1993306-4813-4a5a-ab03-42d8150b555d"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="14" width="100" height="14" uuid="1802ffbd-5816-4a46-8973-3b21d7fff35d"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="28" width="100" height="14" uuid="92b91104-e943-4a17-b397-5facbe206678"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tahun :]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="42" width="100" height="14" uuid="b52af8c0-a21c-4e29-aeec-def304b1abdb"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Akhir Sem I :]]></text>
			</staticText>
			<textField>
				<reportElement x="100" y="28" width="125" height="14" uuid="03dc2813-ef09-4e91-a809-abb71399dc38"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Tahun}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="70" width="100" height="14" uuid="a89bb41a-8c5d-484a-a1d7-0d5fde186fd5"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Amt Big P :]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="100" y="70" width="125" height="14" uuid="ff9b2a7d-7675-46f8-b8be-bce7ab531646"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtBig}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="84" width="100" height="14" uuid="aafd0096-6fe8-413a-9366-61df9f648d3b"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Printed on :]]></text>
			</staticText>
			<textField>
				<reportElement x="100" y="42" width="125" height="14" uuid="5d0e33da-c563-4ef2-91ab-648f4c675abd"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemesterAkhir}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="100" y="98" width="125" height="14" uuid="2d11a6c9-d86b-43b7-9178-3b87078f8500"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="0" y="56" width="100" height="14" uuid="86334322-c2df-44f0-819a-26da8db12e14"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Semester :]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="100" y="84" width="125" height="14" uuid="493bbcfa-7e30-403a-8815-2ab2dc7f0b10"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="100" y="56" width="125" height="14" uuid="7a793990-95dc-43a1-9d68-ca5a80b6e5a1"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemester}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="0" width="225" height="14" uuid="e164f056-44a3-4aa3-870c-f1bd59c0be00"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04047-06) FORECAST SALES ACS-SUMMARY]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="14" width="125" height="14" uuid="c4910ab0-f3fa-4fcd-8b1f-e62ea1d3c03a"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</noData>
</jasperReport>
