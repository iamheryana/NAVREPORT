<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="solusi.hapis.backend.model.SecRight" table="sec_right">

        <!--
              <id name="id" type="long"> <column name="rig_id" /> <generator
              class="assigned" /> </id>
          -->

        <id name="id" type="long">
            <column name="rig_id"/>
<!--             <generator class="sequence">
                <param name="sequence">sec_right_seq</param>
                
                        for mySQL use generator class="native" <generator class="native" />
                   
            </generator> -->
        </id>

        <version name="version" column="VERSION" type="integer"/>

        <property name="rigType" type="java.lang.Integer">
            <column name="rig_type"/>
        </property>
        <property name="rigName" type="string">
            <column name="rig_name" length="50" not-null="true" unique="true"/>
        </property>
        <property name="rigDesc" type="string">
            <column name="rig_desc" length="100" not-null="true" unique="true"/>
        </property>
        <property name="parentId" type="long">
			<column name="rig_parent_id" />
		</property>
        
<!--         <set name="secGrouprights" inverse="true">
            <key>
                <column name="rig_id"/>
            </key>
            <one-to-many class="solusi.hapis.backend.model.SecGroupright"/>
        </set> -->
        
        <set name="secRolerights" inverse="true">
            <key>
                <column name="rig_id"/>
            </key>
            <one-to-many class="solusi.hapis.backend.model.SecRoleright"/>
        </set>
        
    </class>

<!--     <query name="allRightFromUserSqlQuery">
        SELECT distinct r FROM SecRight r
        JOIN
        r.secGrouprights AS gr
        JOIN gr.secGroup.secRolegroups AS rg
        JOIN
        rg.secRole.secUserroles AS ur
        JOIN ur.secUser AS u
        WHERE u.id = ?
    </query> -->
    <query name="allRightFromUserSqlQuery">
	        SELECT distinct r FROM SecRight r
	        JOIN
	        r.secRolerights AS rr
	        JOIN rr.secRole.secUserroles AS ur
	        JOIN ur.secUser AS u
	        WHERE u.id = ?
	</query>
</hibernate-mapping>
