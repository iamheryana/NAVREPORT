<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="04030_LapSalesRevenueV5" language="groovy" pageWidth="1200" pageHeight="595" orientation="Landscape" columnWidth="1160" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20" uuid="d67d58b6-db98-43fc-b2fe-6c1d43bc5f9a">
	<property name="ireport.zoom" value="1.3310000000000202"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<parameter name="TglInvFrom" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="TglInvTo" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Company" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[SELECT	SRV.GROUP_NO
		,SRV.GROUP_DESC
		,SRV.GROUP_ITEM_CAT
		,SRV.ITEM_CAT
		,ROUND((SRV.AMT_HO / 1000),2) AS AMT_HO
		,ROUND((SRV.AMT_SBY / 1000),2) AS AMT_SBY
		,ROUND((SRV.AMT_DPS / 1000),2) AS AMT_DPS
		,ROUND((SRV.AMT_CKR / 1000),2) AS AMT_CKR
		,ROUND((SRV.AMT_SMR / 1000),2) AS AMT_SMR
		,	(ROUND((SRV.AMT_HO / 1000),2) + ROUND((SRV.AMT_SBY / 1000),2) + ROUND((SRV.AMT_DPS / 1000),2)
			+ROUND((SRV.AMT_CKR / 1000),2) +ROUND((SRV.AMT_SMR / 1000),2) )AS TOTAL
FROM	(
			SELECT	1 AS GROUP_NO
					,'Sales Revenue' AS GROUP_DESC
					,'PS' AS GROUP_ITEM_CAT
					, XX.CATEGORY AS ITEM_CAT
					,(SUM(XX.AMT_HO)) AS AMT_HO
					,(SUM(XX.AMT_SBY)) AS AMT_SBY
					,(SUM(XX.AMT_DPS)) AS AMT_DPS
					,(SUM(XX.AMT_CKR)) AS AMT_CKR
					,(SUM(XX.AMT_SMR)) AS AMT_SMR
			FROM	(
						SELECT '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS CATEGORY
								,'H001' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS CATEGORY
								,'H019' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT	'3. ENTERPRISE SECURITY SYSTEMS' AS CATEGORY
								,'H022' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT  '4. EBS & PS' AS CATEGORY
								,'S201' AS PRODUCT
								,'PS02' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT
								CASE WHEN X.ITEM_CAT = 'HW01' THEN
									CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
										 WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
										 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
									END
								ELSE
									'4. EBS & PS'
								END AS CATEGORY
								,X.PRODUCT
								,X.ITEM_CAT
								,CASE WHEN X.BRANCHES = '10' THEN X.AMOUNT ELSE 0 END AS AMT_HO
								,CASE WHEN X.BRANCHES = '15' THEN X.AMOUNT ELSE 0 END AS AMT_SBY
								,CASE WHEN X.BRANCHES = '19' THEN X.AMOUNT ELSE 0 END AS AMT_DPS
								,CASE WHEN X.BRANCHES = '16' THEN X.AMOUNT ELSE 0 END AS AMT_CKR
								,CASE WHEN X.BRANCHES = '17' THEN X.AMOUNT ELSE 0 END AS AMT_SMR

						FROM (
						SELECT	'SALES ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.PRODUCT
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.PRODUCT
													,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														END AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,DIMS.PRODUCT
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
						UNION ALL
						SELECT
								'(-) Accured Sales Current Year' AS NOTE
								,CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
								,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,DIMS.BRANCHES
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CMH.[Posting Date] AS TGL_CM
											,CMH.[No_] AS NO_CM
											,CMH.[External Document No_] AS NO_PO_CUST
											,CMH.[Bill-to Customer No_] AS CUST_NO
											,CMH.[Bill-to Name] AS CUST_NAME
											,CMH.[Prepayment Order No_] AS NO_SO
											, (SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
									LEFT JOIN	(
													SELECT CLE.[Entry No_]
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
													FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
													LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
													WHERE CLE.[Document Type] IN (2,3)
													AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
														(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
												) UM ON UM.NO_CM = GLE.[Document No_]
									LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
									WHERE GLE.[G_L Account No_] = '400.110.03'
											AND GLE.[Document No_] NOT LIKE 'UM%'
											AND (CMH.[Posting Date] >= $P{TglInvFrom} AND CMH.[Posting Date]<= $P{TglInvTo})
											AND (SIH.[Posting Date] < $P{TglInvFrom})
									GROUP BY	DIMS.ITEM_CAT
												,DIMS.BRANCHES
												,DIMS.SALESMAN
												,DIMS.PRODUCT
												,CMH.[Posting Date]
												,CMH.[No_]
												,CMH.[External Document No_]
												,CMH.[Bill-to Customer No_]
												,CMH.[Bill-to Name]
												,CMH.[Prepayment Order No_]
								) CMLM
						GROUP BY CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,CMLM.PRODUCT
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASPY.AMOUNT)  AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.PRODUCT
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														,UM.BRANCHES
														,UM.SALESMAN
														,UM.PRODUCT
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																					,MAX(DIM.PRODUCT) AS PRODUCT
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,DIMS.PRODUCT
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, GLE.[Amount]
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Document No_] <> '9SIAT200197'
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES ALL' AS NOTE
								, DIMS.BRANCHES
								, DIMS.ITEM_CAT
								, DIMS.SALESMAN
								, ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> ''AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.PRODUCT
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.PRODUCT
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
														SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
													END
													END	 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,DIMS.PRODUCT
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
						UNION ALL
						SELECT
								'(-) Accured Sales Current Year' AS NOTE
								,CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
								,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,DIMS.BRANCHES
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CMH.[Posting Date] AS TGL_CM
											,CMH.[No_] AS NO_CM
											,CMH.[External Document No_] AS NO_PO_CUST
											,CMH.[Bill-to Customer No_] AS CUST_NO
											,CMH.[Bill-to Name] AS CUST_NAME
											,CMH.[Prepayment Order No_] AS NO_SO
											, (SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
									LEFT JOIN	(
													SELECT CLE.[Entry No_]
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
													FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
													LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
													WHERE CLE.[Document Type] IN (2,3)
													AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
														(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
												) UM ON UM.NO_CM = GLE.[Document No_]
									LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
									WHERE GLE.[G_L Account No_] = '400.110.03'
											AND GLE.[Document No_] NOT LIKE 'UM%'
											AND (CMH.[Posting Date] >= $P{TglInvFrom} AND CMH.[Posting Date]<= $P{TglInvTo})
											AND (SIH.[Posting Date] < $P{TglInvFrom})
									GROUP BY	DIMS.ITEM_CAT
												,DIMS.BRANCHES
												,DIMS.SALESMAN
												,DIMS.PRODUCT
												,CMH.[Posting Date]
												,CMH.[No_]
												,CMH.[External Document No_]
												,CMH.[Bill-to Customer No_]
												,CMH.[Bill-to Name]
												,CMH.[Prepayment Order No_]
								) CMLM
						GROUP BY CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,CMLM.PRODUCT
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
								, SUM(ASPY.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.PRODUCT
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														, UM.BRANCHES
														, UM.SALESMAN
														, UM.PRODUCT
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																	,MAX(DIMS.BRANCHES) AS BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																	,DIMS.PRODUCT
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																					,MAX(DIM.PRODUCT) AS PRODUCT
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,DIMS.PRODUCT
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						) X
					) XX
			GROUP BY XX.CATEGORY
			UNION ALL
			SELECT	2 AS GROUP_NO
					,'Uang Muka (as per Today)' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					,ROUND((SUM(OSO.AMT_HO)),0) AS AMT_HO
					,ROUND((SUM(OSO.AMT_SBY)),0) AS AMT_SBY
					,ROUND((SUM(OSO.AMT_DPS)),0) AS AMT_DPS
					,ROUND((SUM(OSO.AMT_CKR)),0) AS AMT_CKR
					,ROUND((SUM(OSO.AMT_SMR)),0) AS AMT_SMR
			FROM	(
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN
										CASE WHEN UMX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN UMX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								,(SUM(UMX.AMT_HO)*-1) AS AMT_HO
								,(SUM(UMX.AMT_SBY)*-1) AS AMT_SBY
								,(SUM(UMX.AMT_DPS)*-1) AS AMT_DPS
								,(SUM(UMX.AMT_CKR)*-1) AS AMT_CKR
								,(SUM(UMX.AMT_SMR)*-1) AS AMT_SMR
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
									UNION ALL
									SELECT	DIMS.ITEM_CAT
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
								) UMX
						GROUP BY UMX.ITEM_CAT, UMX.PRODUCT
						UNION ALL
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN
										CASE WHEN OUM.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN OUM.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								,SUM(CASE WHEN OUM.BRANCHES = '10' THEN OUM.AMOUNT ELSE 0 END) AS AMT_HO
								,SUM(CASE WHEN OUM.BRANCHES = '15' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SBY
								,SUM(CASE WHEN OUM.BRANCHES = '19' THEN OUM.AMOUNT ELSE 0 END) AS AMT_DPS
								,SUM(CASE WHEN OUM.BRANCHES = '16' THEN OUM.AMOUNT ELSE 0 END) AS AMT_CKR
								,SUM(CASE WHEN OUM.BRANCHES = '17' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SMR
						FROM	(
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.PRODUCT
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.PRODUCT
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglInvTo} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglInvTo} > GETDATE() AND CMH.[Posting Date] >  $P{TglInvTo})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[AUTOJAYA$G_L Entry] GLE
													INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																	FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
									UNION ALL
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.PRODUCT
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'SOLUSI' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.PRODUCT
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglInvTo} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglInvTo} > GETDATE() AND CMH.[Posting Date] >  $P{TglInvTo})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[SOLUSI$G_L Entry] GLE
													INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																	FROM [dbo].[SOLUSI$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
								) OUM
						LEFT JOIN	(
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[AUTOJAYA$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
										UNION ALL
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[SOLUSI$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
									) SOS ON SOS.NO_SO = OUM.NO_SO
						WHERE	OUM.AMOUNT > 0 AND
								SOS.NO_SO IS NOT NULL AND
								SOS.NO_SO <> 'SOAT160274'
						GROUP BY OUM.ITEM_CAT, OUM.PRODUCT
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
			UNION ALL
			SELECT	3 AS GROUP_NO
					,'Outstanding SO (as per Today)' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					,ROUND((SUM(OSO.AMT_HO)),0) AS AMT_HO
					,ROUND((SUM(OSO.AMT_SBY)),0) AS AMT_SBY
					,ROUND((SUM(OSO.AMT_DPS)),0) AS AMT_DPS
					,ROUND((SUM(OSO.AMT_CKR)),0) AS AMT_CKR
					,ROUND((SUM(OSO.AMT_SMR)),0) AS AMT_SMR
			FROM	(
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
										CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								, CASE WHEN XAX.CABANG = 'JAKARTA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_HO
								, CASE WHEN XAX.CABANG = 'SURABAYA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SBY
								, CASE WHEN XAX.CABANG = 'BALI' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_DPS
								, CASE WHEN XAX.CABANG = 'CIKARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_CKR
								, CASE WHEN XAX.CABANG = 'SEMARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SMR
						FROM	(
									SELECT	XXX.CABANG
											,XXX.ITEM_CATEGORY
											,XXX.PRODUCT
											,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
											,XXX.EST_REALISASI AS EST_REALISASI_ASLI
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													XXX.AMOUNT_IDR
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
														ELSE
															ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
														END
													ELSE
														XXX.AMOUNT_IDR
													END
												END AS AMOUNT_IDR
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															XOX.EST_REALISASI
														ELSE
															CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																	ELSE  XXX.EST_REALISASI
															END
														END
													ELSE
														XXX.EST_REALISASI
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.ORDER_DATE
														, XY.STATUS_SO
														, XY.NO_PO_CUST
														, XY.ITEM_CATEGORY
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT - XY.UM_AMOUNT)
															ELSE
																(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
															END AS AMOUNT
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT SH.[No_] AS NO_SO
																	, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																	  END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																	, SL.PRODUCT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(SL.AMOUNT,0) AS AMOUNT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[AUTOJAYA$Sales Header] SH
															LEFT JOIN  (	SELECT	X.[Document No_]
																					, X.[Shortcut Dimension 2 Code]
																					, X.PRODUCT
																					,SUM(X.QTY) AS QTY
																					,SUM(X.QTY_INV)AS QTY_INV
																					,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT	SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SAL.[Quantity] AS QTY
																							, SAL.[Quantity Invoiced] AS QTY_INV
																							, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																								(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																							  ELSE
																								SAL.[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[AUTOJAYA$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE	SAL.[Document Type] = 1 AND
																							SAL.[Quantity] <> SAL.[Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																		) SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT SAL.[Document No_]
																					, SAL.[Shortcut Dimension 2 Code]
																					, DIMS.PRODUCT
																					, SUM(SAL.[Amount]) AS AMOUNT_TTL
																			FROM [dbo].[AUTOJAYA$Sales Line] SAL
																			LEFT JOIN	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																							GROUP BY [Dimension Set ID]
																						) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																			WHERE SAL.[Document Type] = 1
																			GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,Y.ITEM_CATEGORY
																					,Y.PRODUCT
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) Y
																			GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																		) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
															LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[AUTOJAYA$Purchase Header] POH
																					INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																						LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
												UNION ALL
												SELECT	'SOLUSI' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.ORDER_DATE
														, XY.STATUS_SO
														, XY.NO_PO_CUST
														, XY.ITEM_CATEGORY
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT - XY.UM_AMOUNT)
															ELSE
																(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
															END AS AMOUNT
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT	SH.[No_] AS NO_SO
																	, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																	  END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																	, SL.PRODUCT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(SL.AMOUNT,0) AS AMOUNT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[SOLUSI$Sales Header] SH
															INNER JOIN  (	SELECT	X.[Document No_]
																					, X.[Shortcut Dimension 2 Code]
																					, X.PRODUCT
																					,SUM(X.QTY) AS QTY
																					,SUM(X.QTY_INV)AS QTY_INV
																					,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SAL.[Quantity] AS QTY
																							, SAL.[Quantity Invoiced] AS QTY_INV
																							, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																								(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																							  ELSE
																								SAL.[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[SOLUSI$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE	SAL.[Document Type] = 1 AND
																							SAL.[Quantity] <> SAL.[Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT	SAL.[Document No_]
																					 , SAL.[Shortcut Dimension 2 Code]
																					 , DIMS.PRODUCT
																					 , SUM(SAL.[Amount]) AS AMOUNT_TTL
																			FROM [dbo].[SOLUSI$Sales Line] SAL
																			LEFT JOIN	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																							GROUP BY [Dimension Set ID]
																						) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																			WHERE SAL.[Document Type] = 1
																			GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,Y.ITEM_CATEGORY
																					,Y.PRODUCT
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) Y
																			GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																		) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
															LEFT JOIN [dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[SOLUSI$Purchase Header] POH
																					INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[SOLUSI$Reservation Entry] REA
																						LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
											) XXX
									LEFT JOIN	(
													SELECT T01.[NO_SO]
															,T01.[JENIS_PAYMENT]
															,T01.[QTY]
															,T01.[EST_REALISASI]
															,T02.[ADD_NUM]
													FROM [NavBI].[dbo].[T01_SO_ADJ] T01
													LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
												) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
									WHERE  (XXX.COMPANY = $P{Company} OR $P{Company} = 'ALL') AND
											XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
											XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001')AND
											XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
								) XAX
						WHERE	(
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4)
									)
								)
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
		) SRV
UNION ALL
SELECT	4 AS GROUP_NO
		,'Grand Total' AS GROUP_DESC
		,SRV.GROUP_ITEM_CAT
		,SRV.ITEM_CAT
		,SUM(ROUND((SRV.AMT_HO / 1000),2)) AS AMT_HO
		,SUM(ROUND((SRV.AMT_SBY / 1000),2)) AS AMT_SBY
		,SUM(ROUND((SRV.AMT_DPS / 1000),2)) AS AMT_DPS
		,SUM(ROUND((SRV.AMT_CKR / 1000),2)) AS AMT_CKR
		,SUM(ROUND((SRV.AMT_SMR / 1000),2)) AS AMT_SMR
		,SUM(	(ROUND((SRV.AMT_HO / 1000),2) + ROUND((SRV.AMT_SBY / 1000),2) + ROUND((SRV.AMT_DPS / 1000),2)
			+ROUND((SRV.AMT_CKR / 1000),2) +ROUND((SRV.AMT_SMR / 1000),2) ))AS TOTAL
FROM	(
			SELECT	1 AS GROUP_NO
					,'Sales Revenue' AS GROUP_DESC
					,'PS' AS GROUP_ITEM_CAT
					, XX.CATEGORY AS ITEM_CAT
					,(SUM(XX.AMT_HO)) AS AMT_HO
					,(SUM(XX.AMT_SBY)) AS AMT_SBY
					,(SUM(XX.AMT_DPS)) AS AMT_DPS
					,(SUM(XX.AMT_CKR)) AS AMT_CKR
					,(SUM(XX.AMT_SMR)) AS AMT_SMR
			FROM	(
						SELECT '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS CATEGORY
								,'H001' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS CATEGORY
								,'H019' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT	'3. ENTERPRISE SECURITY SYSTEMS' AS CATEGORY
								,'H022' AS PRODUCT
								,'HW01' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT  '4. EBS & PS' AS CATEGORY
								,'S201' AS PRODUCT
								,'PS02' AS ITEM_CAT
								, 0 AS AMT_HO
								, 0 AS AMT_SBY
								, 0 AS AMT_DPS
								, 0 AS AMT_CKR
								, 0 AS AMT_SMR
						UNION ALL
						SELECT
								CASE WHEN X.ITEM_CAT = 'HW01' THEN
									CASE WHEN X.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
										 WHEN X.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
										 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
									END
								ELSE
									'4. EBS & PS'
								END AS CATEGORY
								,X.PRODUCT
								,X.ITEM_CAT
								,CASE WHEN X.BRANCHES = '10' THEN X.AMOUNT ELSE 0 END AS AMT_HO
								,CASE WHEN X.BRANCHES = '15' THEN X.AMOUNT ELSE 0 END AS AMT_SBY
								,CASE WHEN X.BRANCHES = '19' THEN X.AMOUNT ELSE 0 END AS AMT_DPS
								,CASE WHEN X.BRANCHES = '16' THEN X.AMOUNT ELSE 0 END AS AMT_CKR
								,CASE WHEN X.BRANCHES = '17' THEN X.AMOUNT ELSE 0 END AS AMT_SMR

						FROM (
						SELECT	'SALES ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.PRODUCT
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.PRODUCT
													,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														END AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,DIMS.PRODUCT
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
						UNION ALL
						SELECT
								'(-) Accured Sales Current Year' AS NOTE
								,CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
								,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,DIMS.BRANCHES
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CMH.[Posting Date] AS TGL_CM
											,CMH.[No_] AS NO_CM
											,CMH.[External Document No_] AS NO_PO_CUST
											,CMH.[Bill-to Customer No_] AS CUST_NO
											,CMH.[Bill-to Name] AS CUST_NAME
											,CMH.[Prepayment Order No_] AS NO_SO
											, (SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
									LEFT JOIN	(
													SELECT CLE.[Entry No_]
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
													FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
													LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
													WHERE CLE.[Document Type] IN (2,3)
													AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
														(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
												) UM ON UM.NO_CM = GLE.[Document No_]
									LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
									WHERE GLE.[G_L Account No_] = '400.110.03'
											AND GLE.[Document No_] NOT LIKE 'UM%'
											AND (CMH.[Posting Date] >= $P{TglInvFrom} AND CMH.[Posting Date]<= $P{TglInvTo})
											AND (SIH.[Posting Date] < $P{TglInvFrom})
									GROUP BY	DIMS.ITEM_CAT
												,DIMS.BRANCHES
												,DIMS.SALESMAN
												,DIMS.PRODUCT
												,CMH.[Posting Date]
												,CMH.[No_]
												,CMH.[External Document No_]
												,CMH.[Bill-to Customer No_]
												,CMH.[Bill-to Name]
												,CMH.[Prepayment Order No_]
								) CMLM
						GROUP BY CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,CMLM.PRODUCT
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASPY.AMOUNT)  AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.PRODUCT
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														,UM.BRANCHES
														,UM.SALESMAN
														,UM.PRODUCT
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.PRODUCT
																	,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																					,MAX(DIM.PRODUCT) AS PRODUCT
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,DIMS.PRODUCT
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, GLE.[Amount]
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Document No_] <> '9SIAT200197'
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES ALL' AS NOTE
								, DIMS.BRANCHES
								, DIMS.ITEM_CAT
								, DIMS.SALESMAN
								, ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> ''AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,ISNULL(ASCY.PRODUCT, 'XXX') AS PRODUCT
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.PRODUCT
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,UM.PRODUCT
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
														SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
													END
													END	 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,DIMS.PRODUCT
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																				,MAX(DIM.PRODUCT) AS PRODUCT
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																					FROM [dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglInvTo} ))
															  AND (SIH.[Posting Date] >= $P{TglInvFrom} AND SIH.[Posting Date]<= $P{TglInvTo})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,DIMS.PRODUCT
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglInvTo}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN, ASCY.PRODUCT
						UNION ALL
						SELECT
								'(-) Accured Sales Current Year' AS NOTE
								,CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,ISNULL(CMLM.PRODUCT, 'XXX') AS PRODUCT
								,SUM(CMLM.AMOUNT) * -1 AS AMOUNT
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,DIMS.BRANCHES
											,DIMS.SALESMAN
											,DIMS.PRODUCT
											,CMH.[Posting Date] AS TGL_CM
											,CMH.[No_] AS NO_CM
											,CMH.[External Document No_] AS NO_PO_CUST
											,CMH.[Bill-to Customer No_] AS CUST_NO
											,CMH.[Bill-to Name] AS CUST_NAME
											,CMH.[Prepayment Order No_] AS NO_SO
											, (SUM(GLE.[Amount]) * -1) AS AMOUNT
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																		,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																		,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																		,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																		,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = GLE.[Document No_]
									LEFT JOIN	(
													SELECT CLE.[Entry No_]
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
															, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
													FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
													LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
													WHERE CLE.[Document Type] IN (2,3)
													AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
														(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
												) UM ON UM.NO_CM = GLE.[Document No_]
									LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = UM.NO_UM
									WHERE GLE.[G_L Account No_] = '400.110.03'
											AND GLE.[Document No_] NOT LIKE 'UM%'
											AND (CMH.[Posting Date] >= $P{TglInvFrom} AND CMH.[Posting Date]<= $P{TglInvTo})
											AND (SIH.[Posting Date] < $P{TglInvFrom})
									GROUP BY	DIMS.ITEM_CAT
												,DIMS.BRANCHES
												,DIMS.SALESMAN
												,DIMS.PRODUCT
												,CMH.[Posting Date]
												,CMH.[No_]
												,CMH.[External Document No_]
												,CMH.[Bill-to Customer No_]
												,CMH.[Bill-to Name]
												,CMH.[Prepayment Order No_]
								) CMLM
						GROUP BY CMLM.BRANCHES
								,CMLM.ITEM_CAT
								,CMLM.SALESMAN
								,CMLM.PRODUCT
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,ISNULL(ASPY.PRODUCT, 'XXX') AS PRODUCT
								, SUM(ASPY.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.PRODUCT
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														, UM.BRANCHES
														, UM.SALESMAN
														, UM.PRODUCT
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																	,MAX(DIMS.BRANCHES) AS BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																	,DIMS.PRODUCT
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																					,MAX(DIM.PRODUCT) AS PRODUCT
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < $P{TglInvFrom})
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,DIMS.PRODUCT
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN, ASPY.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,DIMS.PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN, DIMS.PRODUCT
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,'XXX' AS PRODUCT
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
												,MAX(DIM.PRODUCT) AS PRODUCT
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
														  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND (GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <= $P{TglInvTo})
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, ISNULL(SLC.PRODUCT, 'XXX') AS PRODUCT
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, DIMS.PRODUCT
											, GLE.[Amount]
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= $P{TglInvFrom} AND GLE.[Posting Date] <=  $P{TglInvTo}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN, SLC.PRODUCT
						) X
					) XX
			GROUP BY XX.CATEGORY
			UNION ALL
			SELECT	2 AS GROUP_NO
					,'Uang Muka (as per Today)' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					,ROUND((SUM(OSO.AMT_HO)),0) AS AMT_HO
					,ROUND((SUM(OSO.AMT_SBY)),0) AS AMT_SBY
					,ROUND((SUM(OSO.AMT_DPS)),0) AS AMT_DPS
					,ROUND((SUM(OSO.AMT_CKR)),0) AS AMT_CKR
					,ROUND((SUM(OSO.AMT_SMR)),0) AS AMT_SMR
			FROM	(
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN UMX.ITEM_CAT = 'HW01' THEN
										CASE WHEN UMX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN UMX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								,(SUM(UMX.AMT_HO)*-1) AS AMT_HO
								,(SUM(UMX.AMT_SBY)*-1) AS AMT_SBY
								,(SUM(UMX.AMT_DPS)*-1) AS AMT_DPS
								,(SUM(UMX.AMT_CKR)*-1) AS AMT_CKR
								,(SUM(UMX.AMT_SMR)*-1) AS AMT_SMR
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
									UNION ALL
									SELECT	DIMS.ITEM_CAT
											,ISNULL(DIMS.PRODUCT, 'XXX') AS PRODUCT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
															,MAX(DIM.PRODUCT) AS PRODUCT
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																	  ,CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END AS PRODUCT
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.PRODUCT
								) UMX
						GROUP BY UMX.ITEM_CAT, UMX.PRODUCT
						UNION ALL
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN OUM.ITEM_CAT = 'HW01' THEN
										CASE WHEN OUM.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN OUM.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								,SUM(CASE WHEN OUM.BRANCHES = '10' THEN OUM.AMOUNT ELSE 0 END) AS AMT_HO
								,SUM(CASE WHEN OUM.BRANCHES = '15' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SBY
								,SUM(CASE WHEN OUM.BRANCHES = '19' THEN OUM.AMOUNT ELSE 0 END) AS AMT_DPS
								,SUM(CASE WHEN OUM.BRANCHES = '16' THEN OUM.AMOUNT ELSE 0 END) AS AMT_CKR
								,SUM(CASE WHEN OUM.BRANCHES = '17' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SMR
						FROM	(
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.PRODUCT
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.PRODUCT
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglInvTo} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglInvTo} > GETDATE() AND CMH.[Posting Date] >  $P{TglInvTo})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[AUTOJAYA$G_L Entry] GLE
													INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																	FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
									UNION ALL
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.PRODUCT
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.PRODUCT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'SOLUSI' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.PRODUCT
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																					,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																			FROM [dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.PRODUCT
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglInvTo} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglInvTo} > GETDATE() AND CMH.[Posting Date] >  $P{TglInvTo})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[SOLUSI$G_L Entry] GLE
													INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																	FROM [dbo].[SOLUSI$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglInvTo} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglInvTo} > GETDATE() AND GLE.[Posting Date] <=  $P{TglInvTo})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,DIMS.PRODUCT
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.PRODUCT = UM.PRODUCT
								) OUM
						LEFT JOIN	(
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[AUTOJAYA$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
										UNION ALL
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[SOLUSI$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
									) SOS ON SOS.NO_SO = OUM.NO_SO
						WHERE	OUM.AMOUNT > 0 AND
								SOS.NO_SO IS NOT NULL AND
								SOS.NO_SO <> 'SOAT160274'
						GROUP BY OUM.ITEM_CAT, OUM.PRODUCT
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
			UNION ALL
			SELECT	3 AS GROUP_NO
					,'Outstanding SO (as per Today)' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					,ROUND((SUM(OSO.AMT_HO)),0) AS AMT_HO
					,ROUND((SUM(OSO.AMT_SBY)),0) AS AMT_SBY
					,ROUND((SUM(OSO.AMT_DPS)),0) AS AMT_DPS
					,ROUND((SUM(OSO.AMT_CKR)),0) AS AMT_CKR
					,ROUND((SUM(OSO.AMT_SMR)),0) AS AMT_SMR
			FROM	(
						SELECT	'PS' AS GROUP_ITEM_CAT
								,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
										CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
											 WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
											 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
										END
									ELSE
										'4. EBS & PS'
									END AS ITEM_CAT
								, CASE WHEN XAX.CABANG = 'JAKARTA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_HO
								, CASE WHEN XAX.CABANG = 'SURABAYA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SBY
								, CASE WHEN XAX.CABANG = 'BALI' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_DPS
								, CASE WHEN XAX.CABANG = 'CIKARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_CKR
								, CASE WHEN XAX.CABANG = 'SEMARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SMR
						FROM	(
									SELECT	XXX.CABANG
											,XXX.ITEM_CATEGORY
											,XXX.PRODUCT
											,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
											,XXX.EST_REALISASI AS EST_REALISASI_ASLI
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													XXX.AMOUNT_IDR
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
														ELSE
															ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
														END
													ELSE
														XXX.AMOUNT_IDR
													END
												END AS AMOUNT_IDR
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															XOX.EST_REALISASI
														ELSE
															CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																	ELSE  XXX.EST_REALISASI
															END
														END
													ELSE
														XXX.EST_REALISASI
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.ORDER_DATE
														, XY.STATUS_SO
														, XY.NO_PO_CUST
														, XY.ITEM_CATEGORY
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT - XY.UM_AMOUNT)
															ELSE
																(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
															END AS AMOUNT
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT SH.[No_] AS NO_SO
																	, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																	  END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																	, SL.PRODUCT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(SL.AMOUNT,0) AS AMOUNT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[AUTOJAYA$Sales Header] SH
															LEFT JOIN  (	SELECT	X.[Document No_]
																					, X.[Shortcut Dimension 2 Code]
																					, X.PRODUCT
																					,SUM(X.QTY) AS QTY
																					,SUM(X.QTY_INV)AS QTY_INV
																					,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT	SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SAL.[Quantity] AS QTY
																							, SAL.[Quantity Invoiced] AS QTY_INV
																							, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																								(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																							  ELSE
																								SAL.[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[AUTOJAYA$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE	SAL.[Document Type] = 1 AND
																							SAL.[Quantity] <> SAL.[Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																		) SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT SAL.[Document No_]
																					, SAL.[Shortcut Dimension 2 Code]
																					, DIMS.PRODUCT
																					, SUM(SAL.[Amount]) AS AMOUNT_TTL
																			FROM [dbo].[AUTOJAYA$Sales Line] SAL
																			LEFT JOIN	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																							GROUP BY [Dimension Set ID]
																						) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																			WHERE SAL.[Document Type] = 1
																			GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,Y.ITEM_CATEGORY
																					,Y.PRODUCT
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) Y
																			GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																		) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
															LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[AUTOJAYA$Purchase Header] POH
																					INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																						LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
												UNION ALL
												SELECT	'SOLUSI' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.ORDER_DATE
														, XY.STATUS_SO
														, XY.NO_PO_CUST
														, XY.ITEM_CATEGORY
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT - XY.UM_AMOUNT)
															ELSE
																(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
															END AS AMOUNT
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT	SH.[No_] AS NO_SO
																	, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																	  END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																	, SL.PRODUCT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(SL.AMOUNT,0) AS AMOUNT
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[SOLUSI$Sales Header] SH
															INNER JOIN  (	SELECT	X.[Document No_]
																					, X.[Shortcut Dimension 2 Code]
																					, X.PRODUCT
																					,SUM(X.QTY) AS QTY
																					,SUM(X.QTY_INV)AS QTY_INV
																					,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT SAL.[Document No_]
																							, SAL.[Shortcut Dimension 2 Code]
																							, DIMS.PRODUCT
																							, SAL.[Quantity] AS QTY
																							, SAL.[Quantity Invoiced] AS QTY_INV
																							, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																								(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																							  ELSE
																								SAL.[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[SOLUSI$Sales Line] SAL
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																					WHERE	SAL.[Document Type] = 1 AND
																							SAL.[Quantity] <> SAL.[Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT	SAL.[Document No_]
																					 , SAL.[Shortcut Dimension 2 Code]
																					 , DIMS.PRODUCT
																					 , SUM(SAL.[Amount]) AS AMOUNT_TTL
																			FROM [dbo].[SOLUSI$Sales Line] SAL
																			LEFT JOIN	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																							GROUP BY [Dimension Set ID]
																						) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																			WHERE SAL.[Document Type] = 1
																			GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,Y.ITEM_CATEGORY
																					,Y.PRODUCT
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																						  ,DIMS.PRODUCT
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					LEFT JOIN	(
																									SELECT [Dimension Set ID] AS DIM_ID
																										  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																									FROM [dbo].[SOLUSI$Dimension Set Entry]
																									GROUP BY [Dimension Set ID]
																								) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																				) Y
																			GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
																		) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
															LEFT JOIN [dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[SOLUSI$Purchase Header] POH
																					INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[SOLUSI$Reservation Entry] REA
																						LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
											) XXX
									LEFT JOIN	(
													SELECT T01.[NO_SO]
															,T01.[JENIS_PAYMENT]
															,T01.[QTY]
															,T01.[EST_REALISASI]
															,T02.[ADD_NUM]
													FROM [NavBI].[dbo].[T01_SO_ADJ] T01
													LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
												) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
									WHERE  (XXX.COMPANY = $P{Company} OR $P{Company} = 'ALL') AND
											XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
											XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
											XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
								) XAX
						WHERE	(
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) <= SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) > SUBSTRING(CONVERT(varchar, GETDATE(), 105), 7,4) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) <= SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4)
									)
								)
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
		) SRV
GROUP BY SRV.GROUP_ITEM_CAT ,SRV.ITEM_CAT
UNION ALL
SELECT	5 AS GROUP_NO
		,'Outstanding SO (Carried over to Next Year)' AS GROUP_DESC
		, OSO.GROUP_ITEM_CAT
		, OSO.ITEM_CAT
		,ROUND((SUM(OSO.AMT_HO )/1000),2) AS AMT_HO
		,ROUND((SUM(OSO.AMT_SBY )/1000),2) AS AMT_SBY
		,ROUND((SUM(OSO.AMT_DPS )/1000),2) AS AMT_DPS
		,ROUND((SUM(OSO.AMT_CKR )/1000),2) AS AMT_CKR
		,ROUND((SUM(OSO.AMT_SMR )/1000),2) AS AMT_SMR
		,(ROUND((SUM(OSO.AMT_HO )/1000),2)  +  ROUND((SUM(OSO.AMT_SBY )/1000),2) + ROUND((SUM(OSO.AMT_DPS )/1000),2) +
			ROUND((SUM(OSO.AMT_CKR )/1000),2) + ROUND((SUM(OSO.AMT_SMR )/1000),2)) AS TOTAL
FROM	(
			SELECT 'PS' AS GROUP_ITEM_CAT
					,'1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)' AS ITEM_CAT
					, 0 AS AMT_HO
					, 0 AS AMT_SBY
					, 0 AS AMT_DPS
					, 0 AS AMT_CKR
					, 0 AS AMT_SMR
			UNION ALL
			SELECT 'PS' AS GROUP_ITEM_CAT
					,'2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY' AS ITEM_CAT
					, 0 AS AMT_HO
					, 0 AS AMT_SBY
					, 0 AS AMT_DPS
					, 0 AS AMT_CKR
					, 0 AS AMT_SMR
			UNION ALL
			SELECT 'PS' AS GROUP_ITEM_CAT
					,'3. ENTERPRISE SECURITY SYSTEMS' AS ITEM_CAT
					, 0 AS AMT_HO
					, 0 AS AMT_SBY
					, 0 AS AMT_DPS
					, 0 AS AMT_CKR
					, 0 AS AMT_SMR
			UNION ALL
			SELECT 'PS' AS GROUP_ITEM_CAT
					, '4. EBS & PS' AS ITEM_CAT
					, 0 AS AMT_HO
					, 0 AS AMT_SBY
					, 0 AS AMT_DPS
					, 0 AS AMT_CKR
					, 0 AS AMT_SMR
			UNION ALL
			SELECT	'PS' AS GROUP_ITEM_CAT
					,	CASE WHEN XAX.ITEM_CATEGORY = 'HW01' THEN
							CASE WHEN XAX.PRODUCT IN ('H005', 'H019', 'H020', 'H021', 'H027') THEN '2. WIRELESS NETWORK INFRASTRUCTURE & SECURITY'
								 WHEN XAX.PRODUCT IN ('H011', 'H015', 'H022', 'H023', 'H024', 'H028') THEN '3. ENTERPRISE SECURITY SYSTEMS'
								 ELSE  '1. AUTOMATIC IDENTIFICATION & DATA COLLECTION (AIDC)'
							END
						ELSE
							'4. EBS & PS'
						END AS ITEM_CAT
					, CASE WHEN XAX.CABANG = 'JAKARTA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_HO
					, CASE WHEN XAX.CABANG = 'SURABAYA' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SBY
					, CASE WHEN XAX.CABANG = 'BALI' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_DPS
					, CASE WHEN XAX.CABANG = 'CIKARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_CKR
					, CASE WHEN XAX.CABANG = 'SEMARANG' THEN XAX.AMOUNT_IDR ELSE 0 END AS AMT_SMR
			FROM	(
						SELECT	XXX.CABANG
								,XXX.ITEM_CATEGORY
								,XXX.PRODUCT
								,XXX.AMOUNT_IDR AS AMOUNT_IDR_ASLI
								,XXX.EST_REALISASI AS EST_REALISASI_ASLI
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										XXX.AMOUNT_IDR
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
											ELSE
												ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
											END
										ELSE
											XXX.AMOUNT_IDR
										END
									END AS AMOUNT_IDR
								,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
										CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
									ELSE
										CASE WHEN XOX.NO_SO IS NOT NULL THEN
											CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
												XOX.EST_REALISASI
											ELSE
												CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
														WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
														ELSE  XXX.EST_REALISASI
												END
											END
										ELSE
											XXX.EST_REALISASI
										END
									END AS EST_REALISASI
						FROM	(
									SELECT	'AUTOJAYA' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
														  END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
														  END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [dbo].[AUTOJAYA$Sales Header] SH
												LEFT JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT	SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																				  ELSE
																					SAL.[Amount]
																				  END AS AMOUNT
																		FROM [dbo].[AUTOJAYA$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															) SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT SAL.[Document No_]
																		, SAL.[Shortcut Dimension 2 Code]
																		, DIMS.PRODUCT
																		, SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [dbo].[AUTOJAYA$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																					  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																			  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			  ,DIMS.PRODUCT
																			  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																			  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																		INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																			  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			  ,DIMS.PRODUCT
																			  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																			  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																		INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND  UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																			  ,POH.[No_] AS NO_PO
																			  ,POD.[Line No_] AS NO_PO_LINE
																			  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																			  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [dbo].[AUTOJAYA$Purchase Header] POH
																		INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																			LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																				  REA.[Positive] = 1 AND
																				  REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
									UNION ALL
									SELECT	'SOLUSI' AS COMPANY
											, XY.NO_SO
											, XY.RULE_TIPE
											, XY.RELEASE_TODAY
											, XY.DELIVERY_DATE
											, XY.CABANG
											, XY.CUST_CODE
											, XY.ORDER_DATE
											, XY.STATUS_SO
											, XY.NO_PO_CUST
											, XY.ITEM_CATEGORY
											, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
											, ISNULL(XY.PRODUCT, 'XXX') AS PRODUCT
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
												ELSE
													(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
												END AS AMOUNT_IDR
											,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
													(XY.AMOUNT - XY.UM_AMOUNT)
												ELSE
													(XY.AMOUNT - ((XY.UM_AMOUNT*XY.AMOUNT) /(XY.AMOUNT_TTL)))
												END AS AMOUNT
											,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
													CASE WHEN XY.ORDER_DATE < GETDATE() THEN
														CAST(CAST(GETDATE() AS DATE) AS DATETIME)
													ELSE
														XY.ORDER_DATE
													END
												ELSE
													CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
														XY.SHIP_DATE_ADJ
													ELSE
														CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
															CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																END
															ELSE
																CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																		WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																			CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																		ELSE
																			CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																END
															END
														ELSE
															CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																		CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																	WHEN XY.RULE_TIPE = 'ALFA' THEN
																		CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																					CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																					CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																				WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																					CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																				ELSE
																					CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																		END
																	ELSE
																		CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
															END
														END
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	SH.[No_] AS NO_SO
														, CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																END
															END
														  END AS TIPE
														, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
															CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																	CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																END
															END
														  END AS RULE_TIPE
														, SH.[Requested Delivery Date] AS DELIVERY_DATE
														, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
														, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
														, SH.[Bill-to Customer No_] AS CUST_CODE
														, SH.[Order Date] AS ORDER_DATE
														, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																WHEN SH.[Status] = 1 THEN 'RELEASED'
																WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																WHEN SH.[Status] = 3 THEN 'RELEASED'
																ELSE '' END AS STATUS_SO
														, SH.[External Document No_] AS NO_PO_CUST
														, SL.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
														, SL.PRODUCT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
														, ISNULL(SL.AMOUNT,0) AS AMOUNT
														, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
														, ISNULL(SL2.AMOUNT_TTL,0) AS AMOUNT_TTL
														, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
														, ISNULL(UM.UM_AMOUNT,0) AS UM_AMOUNT
														, SH.[Shipment Date] AS SHIP_DATE
														,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																CAST('01/01/1753' AS DATETIME)
															ELSE
																CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
															END AS SHIP_DATE_ADJ
												FROM [dbo].[SOLUSI$Sales Header] SH
												INNER JOIN  (	SELECT	X.[Document No_]
																		, X.[Shortcut Dimension 2 Code]
																		, X.PRODUCT
																		,SUM(X.QTY) AS QTY
																		,SUM(X.QTY_INV)AS QTY_INV
																		,SUM(X.AMOUNT) AS AMOUNT
																FROM (
																		SELECT SAL.[Document No_]
																				, SAL.[Shortcut Dimension 2 Code]
																				, DIMS.PRODUCT
																				, SAL.[Quantity] AS QTY
																				, SAL.[Quantity Invoiced] AS QTY_INV
																				, CASE WHEN SAL.[Quantity Invoiced] <> 0 AND SAL.[Quantity] <> SAL.[Quantity Invoiced] THEN
																					(SAL.[Amount] / SAL.[Quantity]) * (SAL.[Quantity] - SAL.[Quantity Invoiced])
																				  ELSE
																					SAL.[Amount]
																				  END AS AMOUNT
																		FROM [dbo].[SOLUSI$Sales Line] SAL
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																		WHERE	SAL.[Document Type] = 1 AND
																				SAL.[Quantity] <> SAL.[Quantity Invoiced]
																	) X
																GROUP BY X.[Document No_], X.[Shortcut Dimension 2 Code], X.PRODUCT
															)SL ON SL.[Document No_] = SH.[No_]
												LEFT JOIN  (
																SELECT	SAL.[Document No_]
																		 , SAL.[Shortcut Dimension 2 Code]
																		 , DIMS.PRODUCT
																		 , SUM(SAL.[Amount]) AS AMOUNT_TTL
																FROM [dbo].[SOLUSI$Sales Line] SAL
																LEFT JOIN	(
																				SELECT [Dimension Set ID] AS DIM_ID
																					  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																				FROM [dbo].[SOLUSI$Dimension Set Entry]
																				GROUP BY [Dimension Set ID]
																			) DIMS ON DIMS.DIM_ID = SAL.[Dimension Set ID]
																WHERE SAL.[Document Type] = 1
																GROUP BY SAL.[Document No_], SAL.[Shortcut Dimension 2 Code], DIMS.PRODUCT
															) SL2 ON SL2.[Document No_] = SL.[Document No_] AND SL2.[Shortcut Dimension 2 Code] = SL.[Shortcut Dimension 2 Code] AND SL2.PRODUCT = SL.PRODUCT
												LEFT JOIN	(
																SELECT Y.NO_SO
																		,Y.ITEM_CATEGORY
																		,Y.PRODUCT
																		,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																		,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																FROM (
																		SELECT [Prepayment Order No_] AS NO_SO
																			  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			  ,DIMS.PRODUCT
																			  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																			  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																		FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																		INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																		UNION ALL
																		SELECT [Prepayment Order No_] AS NO_SO
																			  ,UMD.[Shortcut Dimension 2 Code] AS ITEM_CATEGORY
																			  ,DIMS.PRODUCT
																			  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																			  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																		FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																		INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																		LEFT JOIN	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,MAX(CASE WHEN [Dimension Code] = 'PRODUCT' THEN [Dimension Value Code] ELSE NULL END) AS PRODUCT
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																						GROUP BY [Dimension Set ID]
																					) DIMS ON DIMS.DIM_ID = UMD.[Dimension Set ID]
																		GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor], UMD.[Shortcut Dimension 2 Code], DIMS.PRODUCT
																	) Y
																GROUP BY Y.NO_SO, Y.ITEM_CATEGORY, Y.PRODUCT
															) UM ON UM.NO_SO = SH.[No_] AND  UM.ITEM_CATEGORY = SL.[Shortcut Dimension 2 Code] AND UM.PRODUCT = SL.PRODUCT
												LEFT JOIN [dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
												WHERE SH.[Document Type] = 1
											) XY
									LEFT JOIN	(
													SELECT	POX.NO_SO
															,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
													FROM (
															SELECT	PO.ITEM_NO
																	,RSV.NO_SO
																	,RSV.NO_SO_LINE
																	,PO.NO_PO
																	,PO.EXPECTED_DATE
															FROM	(
																		SELECT POD.[No_] AS ITEM_NO
																			  ,POH.[No_] AS NO_PO
																			  ,POD.[Line No_] AS NO_PO_LINE
																			  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																			  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																		FROM [dbo].[SOLUSI$Purchase Header] POH
																		INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																		WHERE POH.[Document Type] = 1 AND
																			POD.[Type] = 2
																		GROUP BY POD.[No_]
																				,POH.[No_]
																				,POD.[Expected Receipt Date]
																				,POD.[IC Partner Reference]
																				,POD.[Line No_]
																	) PO
															LEFT JOIN	(
																			SELECT  REA.[Item No_] AS ITEM_NO
																					, REA.[Source ID] AS NO_PO
																					, REA.[Source Ref_ No_] AS NO_PO_LINE
																					, REB.[Source ID] AS NO_SO
																					, REB.[Source Ref_ No_] AS NO_SO_LINE
																					, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																			FROM [dbo].[SOLUSI$Reservation Entry] REA
																			LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																			WHERE REA.[Reservation Status] = 0 AND
																				  REA.[Positive] = 1 AND
																				  REA.[Source ID] <>''
																			GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																		) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
															WHERE PO.QTY_ON_ORDER > 0
														) POX
													GROUP BY POX.NO_SO
												) POC ON POC.NO_SO = XY.NO_SO
									WHERE	XY.STATUS_SO = 'RELEASED'
								) XXX
						LEFT JOIN	(
										SELECT T01.[NO_SO]
												,T01.[JENIS_PAYMENT]
												,T01.[QTY]
												,T01.[EST_REALISASI]
												,T02.[ADD_NUM]
										FROM [NavBI].[dbo].[T01_SO_ADJ] T01
										LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
									) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
						WHERE  (XXX.COMPANY = $P{Company} OR $P{Company} = 'ALL') AND
								XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
								XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
								XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
					) XAX
			WHERE SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = (SUBSTRING(CONVERT(varchar, $P{TglInvTo}, 105), 7,4) + 1)
		) OSO
GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT]]>
	</queryString>
	<field name="GROUP_NO" class="java.lang.Integer"/>
	<field name="GROUP_DESC" class="java.lang.String"/>
	<field name="GROUP_ITEM_CAT" class="java.lang.String"/>
	<field name="ITEM_CAT" class="java.lang.String"/>
	<field name="AMT_HO" class="java.math.BigDecimal"/>
	<field name="AMT_SBY" class="java.math.BigDecimal"/>
	<field name="AMT_DPS" class="java.math.BigDecimal"/>
	<field name="AMT_CKR" class="java.math.BigDecimal"/>
	<field name="AMT_SMR" class="java.math.BigDecimal"/>
	<field name="TOTAL" class="java.math.BigDecimal"/>
	<sortField name="GROUP_NO"/>
	<sortField name="GROUP_ITEM_CAT"/>
	<sortField name="ITEM_CAT"/>
	<variable name="TOTAL_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<variable name="AMT_HO_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_HO}]]></variableExpression>
	</variable>
	<variable name="AMT_SBY_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SBY}]]></variableExpression>
	</variable>
	<variable name="AMT_DPS_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_DPS}]]></variableExpression>
	</variable>
	<variable name="AMT_CKR_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_CKR}]]></variableExpression>
	</variable>
	<variable name="AMT_SMR_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SMR}]]></variableExpression>
	</variable>
	<variable name="TOTAL_3" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<group name="NoGroup">
		<groupExpression><![CDATA[$F{GROUP_NO}]]></groupExpression>
		<groupHeader>
			<band height="15">
				<textField>
					<reportElement x="8" y="1" width="25" height="14" uuid="bf99114e-0c64-45d3-b5ef-1f9831441711"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_NO}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="33" y="1" width="324" height="14" uuid="5df2e85c-a37d-459b-9cd5-c2670eb41267"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_DESC}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="500" y="1" width="105" height="14" uuid="14fde8d7-c8ce-4ae7-aaf4-202bef421b3a"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{TOTAL_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="605" y="1" width="105" height="14" uuid="f908eebc-2cfd-4762-8b06-15e57559a5bb"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_HO_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="710" y="1" width="105" height="14" uuid="5ca983bd-3357-4656-bdd4-57a1132974d1"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SBY_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="815" y="1" width="105" height="14" uuid="d014ca11-0c7a-4557-8cae-6e67d0c251dd"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_DPS_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="920" y="1" width="105" height="14" uuid="f32b1267-c5e0-4673-84f8-2596cbf956a8"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_CKR_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,###" isBlankWhenNull="true">
					<reportElement x="1025" y="1" width="105" height="14" uuid="1fba4753-54e1-412a-97ef-2a188dc12606"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SMR_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="376" y="1" width="105" height="14" uuid="5ed29b7c-0532-4c3d-8ef9-7870d2cdbb09"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="357" y="1" width="19" height="14" uuid="56e3a221-d0dc-41c3-9c3d-657935dba6fe"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="481" y="1" width="19" height="14" uuid="04d08705-78bd-44dc-bf00-1cbd68b4c719"/>
					<textElement>
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Rp.]]></text>
				</staticText>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="15">
				<staticText>
					<reportElement x="8" y="1" width="25" height="14" uuid="2795654d-59f2-4a20-a507-d86edf296cc0"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupFooter>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band height="74" splitType="Stretch">
			<textField pattern="dd-MM-yyyy">
				<reportElement x="158" y="18" width="108" height="14" uuid="e983ef99-7a2c-412b-8c04-aa31da3407c1"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglInvFrom}]]></textFieldExpression>
			</textField>
			<textField pattern="dd-MM-yyyy">
				<reportElement x="294" y="18" width="187" height="14" uuid="a76e333a-f2cb-410c-a1dd-330ea4d1d958"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglInvTo}]]></textFieldExpression>
			</textField>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="158" y="32" width="323" height="14" uuid="354c48b6-c745-4179-8c35-437bfbe26bc6"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="60" width="25" height="14" uuid="1a0a7d66-4dc0-4ec8-93c3-d8c90d44153b"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[No]]></text>
			</staticText>
			<staticText>
				<reportElement x="481" y="60" width="124" height="14" uuid="bc0b5f21-bd58-4128-90d9-0da9bfd247a3"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Value (Thousand)]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="32" width="125" height="14" uuid="2416e567-b590-46cd-b14e-f9281133ba81"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Dicetak Pada :]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="4" width="448" height="14" uuid="b3e39015-60b7-4554-84b0-56f951c68c37"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04030) Sales Revenue by 4 Pilars]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="18" width="125" height="14" uuid="4eb2c989-0b8b-464e-9e93-b047e47ba9df"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Periode :]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="32" width="25" height="14" uuid="86f4442f-d4fa-485e-a792-070757043699"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="266" y="18" width="28" height="14" uuid="7a7817d3-1ca0-4345-9306-f2cecc43279f"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[S/D]]></text>
			</staticText>
			<staticText>
				<reportElement x="815" y="60" width="105" height="14" uuid="5e5ceff5-de3a-4cc9-a8c6-01c7ce8522f9"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[DPS]]></text>
			</staticText>
			<staticText>
				<reportElement x="920" y="60" width="105" height="14" uuid="798b8235-df28-4de8-9158-3bf2fbfb4099"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[CKR]]></text>
			</staticText>
			<staticText>
				<reportElement x="1025" y="60" width="105" height="14" uuid="87d55bb2-fb68-4e60-95e4-8bfdf7f67cc9"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SMR]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="46" width="25" height="14" uuid="9291c97c-d705-4c4f-9b22-75a690c45d20"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="4" width="25" height="14" uuid="b6311f09-282d-4eb9-8e70-a658e3f827b1"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="18" width="25" height="14" uuid="795c6dcd-ca4b-491a-af39-28311afd70b3"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="46" width="448" height="14" uuid="c2958fed-a0e5-405b-876d-a86598f384bc"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="60" width="448" height="14" uuid="f47a3c22-aad1-4ef8-8762-fa524640460e"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Keterangan]]></text>
			</staticText>
			<staticText>
				<reportElement x="605" y="60" width="105" height="14" uuid="1818ba43-b204-4c76-88c0-362881d0c1b4"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[HO]]></text>
			</staticText>
			<staticText>
				<reportElement x="710" y="60" width="105" height="14" uuid="ca2ce7ef-7660-4370-879c-0101315383f6"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SBY]]></text>
			</staticText>
		</band>
	</title>
	<detail>
		<band height="15" splitType="Stretch">
			<printWhenExpression><![CDATA[$F{GROUP_ITEM_CAT}.equals( "PS" )]]></printWhenExpression>
			<textField>
				<reportElement x="33" y="1" width="324" height="14" uuid="f3cec1b9-7fe6-48a6-82a8-65f3552fce5e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{ITEM_CAT}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="376" y="1" width="105" height="14" uuid="1594783e-23da-4d4a-af40-8dfd36911060"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{TOTAL}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="605" y="1" width="105" height="14" uuid="358d9063-ef3b-42b0-be1c-101d09ad73b1"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_HO}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="710" y="1" width="105" height="14" uuid="47d8606c-11ac-4dad-8ba5-edf4b0ef4b95"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SBY}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="815" y="1" width="105" height="14" uuid="a13936e8-6b92-49de-a634-8cf2964a2dbe"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_DPS}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="920" y="1" width="105" height="14" uuid="b40352b4-da43-4f3e-abf3-77d64798a0aa"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_CKR}]]></textFieldExpression>
			</textField>
			<textField pattern="#,###" isBlankWhenNull="true">
				<reportElement x="1025" y="1" width="105" height="14" uuid="562d0c64-2d50-4369-94b6-23622ef2768c"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SMR}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="1" width="25" height="14" uuid="93403b32-82a1-4cba-a0fb-aabfe157b97f"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="357" y="1" width="19" height="14" uuid="86c8bcdf-190c-479c-8d7f-908460b88d11"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Rp.]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="1" width="105" height="14" uuid="cb180ea8-e45f-4456-a7b2-8291838392ed"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="481" y="1" width="19" height="14" uuid="f0da4591-dcb2-4b04-8986-a814426cd294"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</detail>
</jasperReport>
