<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="04047_07_ForecastSalesACSByBranch" language="groovy" pageWidth="865" pageHeight="595" orientation="Landscape" whenNoDataType="NoDataSection" columnWidth="825" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20" uuid="d67d58b6-db98-43fc-b2fe-6c1d43bc5f9a">
	<property name="ireport.zoom" value="1.2100000000000217"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="44"/>
	<parameter name="Tahun" class="java.lang.Integer">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="AmtBig" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="SpvBy" class="java.lang.String"/>
	<parameter name="Sem1Akhir" class="java.lang.Integer"/>
	<parameter name="TglUpto" class="java.util.Date"/>
	<parameter name="weightH" class="java.math.BigDecimal"/>
	<parameter name="weightM" class="java.math.BigDecimal"/>
	<parameter name="weightL" class="java.math.BigDecimal"/>
	<queryString>
		<![CDATA[SELECT	1 AS GR_CRNXY
		,SRV.GROUP_NO
		,SRV.GROUP_DESC
		,SRV.GROUP_ITEM_CAT
		,SRV.ITEM_CAT
		,ROUND((SRV.AMT_HO / 1000000),2) AS AMT_HO
		,ROUND((SRV.AMT_SBY / 1000000),2) AS AMT_SBY
		,ROUND((SRV.AMT_DPS / 1000000),2) AS AMT_DPS
		,ROUND((SRV.AMT_CKR / 1000000),2) AS AMT_CKR
		,ROUND((SRV.AMT_SMR / 1000000),2) AS AMT_SMR
		,	(ROUND((SRV.AMT_HO / 1000000),2) + ROUND((SRV.AMT_SBY / 1000000),2) + ROUND((SRV.AMT_DPS / 1000000),2)
			+ROUND((SRV.AMT_CKR / 1000000),2) +ROUND((SRV.AMT_SMR / 1000000),2) )AS TOTAL
		, ROUND((ISNULL(TRG.AMT_TARGET,0) / 1000000),2) AS AMT_TARGET
		,TRG.LBL_TARGET
FROM	(
			SELECT	1 AS GROUP_NO
					,'Sales Revenue' AS GROUP_DESC
					,XX.GROUP_ITEM_CAT
					,XX.ITEM_CAT
					,(SUM(XX.AMT_HO)) AS AMT_HO
					,(SUM(XX.AMT_SBY)) AS AMT_SBY
					,(SUM(XX.AMT_DPS)) AS AMT_DPS
					,(SUM(XX.AMT_CKR)) AS AMT_CKR
					,(SUM(XX.AMT_SMR)) AS AMT_SMR
			FROM	(
						SELECT	CASE WHEN X.ITEM_CAT = 'HW01' THEN 'HW' ELSE 'PS' END AS GROUP_ITEM_CAT
								,CASE	WHEN X.ITEM_CAT = 'HW01' THEN 'HW01 - Hardware'
										WHEN X.ITEM_CAT = 'PS01' THEN 'PS01 - 3rd Party Software'
										WHEN X.ITEM_CAT = 'PS02' THEN 'PS02 - Own Software'
										WHEN X.ITEM_CAT = 'PS03' THEN 'PS03 - Technology Service'
										WHEN X.ITEM_CAT = 'PS04' THEN 'PS04 - Hardware Service'
										WHEN X.ITEM_CAT = 'PS05' THEN 'PS05 - Manage Service'
									END AS ITEM_CAT
								,CASE WHEN X.BRANCHES = '10' THEN X.AMOUNT ELSE 0 END AS AMT_HO
								,CASE WHEN X.BRANCHES = '15' THEN X.AMOUNT ELSE 0 END AS AMT_SBY
								,CASE WHEN X.BRANCHES = '19' THEN X.AMOUNT ELSE 0 END AS AMT_DPS
								,CASE WHEN X.BRANCHES = '16' THEN X.AMOUNT ELSE 0 END AS AMT_CKR
								,CASE WHEN X.BRANCHES = '17' THEN X.AMOUNT ELSE 0 END AS AMT_SMR

						FROM (
						SELECT	'SALES ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AUTOJAYA$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AUTOJAYA$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,	CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
																SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														END AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[AUTOJAYA$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglUpto} ))
															  AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<= $P{TglUpto})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglUpto}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								,SUM(ASPY.AMOUNT)  AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														,UM.BRANCHES
														,UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMAT150027' THEN 'HRY' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)))
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[AUTOJAYA$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= $P{TglUpto})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								,SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[AJ-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[AJ-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	DIMS.BRANCHES
											,DIMS.ITEM_CAT
											,DIMS.SALESMAN
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] = 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, GLE.[Amount]
									FROM [dbo].[AUTOJAYA$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[AUTOJAYA$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Document No_] <> '9SIAT200197'
											AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES ALL' AS NOTE
								, DIMS.BRANCHES
								, DIMS.ITEM_CAT
								, DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> ''AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'Sales - LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SOLUSI$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SOLUSI$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto})
						UNION ALL
						SELECT	'(-) Accured Sales Current Year' AS NOTE
								,ASCY.BRANCHES
								,ASCY.ITEM_CAT
								,ASCY.SALESMAN
								,SUM(ASCY.AMOUNT) * -1 AS AMOUNT
						FROM (
								SELECT	OUM.ITEM_CAT
										,OUM.BRANCHES
										,OUM.SALESMAN
										,OUM.AMOUNT
								FROM	(
											SELECT	UM.ITEM_CAT
													,UM.BRANCHES
													,UM.SALESMAN
													,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
														CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
														SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
													END
													END	 AS AMOUNT
											FROM	(
														SELECT	DIMS.ITEM_CAT
																,DIMS.BRANCHES
																,DIMS.SALESMAN
																,SIH.[Posting Date] AS TGL_UM
																,SIH.[No_] AS NO_UM
																,SIH.[External Document No_] AS NO_PO_CUST
																,SIH.[Bill-to Customer No_] AS CUST_NO
																,SIH.[Bill-to Name] AS CUST_NAME
																,SIH.[Prepayment Order No_] AS NO_SO
																, (SUM(GLE.[Amount]) * -1) AS AMOUNT
														FROM [dbo].[SOLUSI$G_L Entry] GLE
														LEFT JOIN	(
																		SELECT	DIM.DIM_ID
																				,MAX(DIM.BRANCHES) AS BRANCHES
																				,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																				,MAX(DIM.SALESMAN) AS SALESMAN
																		FROM	(
																					SELECT [Dimension Set ID] AS DIM_ID
																						  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																						  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																						  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																					FROM [dbo].[SOLUSI$Dimension Set Entry]
																				) DIM
																		GROUP BY DIM.DIM_ID
																	) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
														LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
														LEFT JOIN	(
																		SELECT CLE.[Entry No_]
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																				, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																		FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																		LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																		WHERE CLE.[Document Type] IN (2,3)
																		AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																			(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																	) CM ON CM.NO_UM = GLE.[Document No_]
														LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
														WHERE GLE.[G_L Account No_] = '400.110.03'
															  AND GLE.[Document No_] LIKE 'UM%'
															  AND (CM.NO_CM IS NULL OR (CM.NO_CM IS NOT NULL AND CMH.[Posting Date] > $P{TglUpto} ))
															  AND (SIH.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND SIH.[Posting Date]<= $P{TglUpto})
														GROUP BY DIMS.ITEM_CAT
																 ,DIMS.BRANCHES
																 ,DIMS.SALESMAN
																 ,SIH.[Posting Date]
																 ,SIH.[No_]
																 ,SIH.[External Document No_]
																 ,SIH.[Bill-to Customer No_]
																 ,SIH.[Bill-to Name]
																 ,SIH.[Prepayment Order No_]
													) UM
											LEFT JOIN	(
															SELECT	DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_] AS NO_SO
																	,MAX(SIH.[Posting Date]) AS TGL_INV
																	,SUM(GLE.[Amount]) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] NOT LIKE 'UM%'
																  AND GLE.[Posting Date] <=  $P{TglUpto}
															GROUP BY DIMS.ITEM_CAT
																	,DIMS.BRANCHES
																	,DIMS.SALESMAN
																	,SIH.[Order No_]
														) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
										) OUM
								WHERE OUM.AMOUNT > 0
							 ) ASCY
						GROUP BY ASCY.BRANCHES, ASCY.ITEM_CAT, ASCY.SALESMAN
						UNION ALL
						SELECT	'(+) Accured Sales Previous Year' AS NOTE
								,ASPY.BRANCHES
								,ASPY.ITEM_CAT
								,ASPY.SALESMAN
								, SUM(ASPY.AMOUNT) AS AMOUNT
						FROM	(
									SELECT	OUM.ITEM_CAT
											,OUM.BRANCHES
											,OUM.SALESMAN
											,OUM.AMOUNT
									FROM	(
												SELECT	UM.ITEM_CAT
														, UM.BRANCHES
														, UM.SALESMAN
														, CASE WHEN ISNULL(INV.AMOUNT,0) =  0 THEN 0 ELSE
															CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN
																UM.AMOUNT ELSE SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT, UM.SALESMAN ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
															END
														  END AS AMOUNT
												FROM	(
															SELECT	CASE WHEN SIH.[No_] = 'UMSS190005' THEN 'HW01' ELSE DIMS.ITEM_CAT END AS ITEM_CAT
																	,DIMS.BRANCHES
																	,CASE WHEN SIH.[No_] = 'UMST150023' THEN 'ARH' ELSE DIMS.SALESMAN END AS SALESMAN
																	,SIH.[Posting Date] AS TGL_UM
																	,SIH.[No_] AS NO_UM
																	,SIH.[External Document No_] AS NO_PO_CUST
																	,SIH.[Bill-to Customer No_] AS CUST_NO
																	,SIH.[Bill-to Name] AS CUST_NAME
																	,SIH.[Prepayment Order No_] AS NO_SO
																	, (SUM(GLE.[Amount]) * -1) AS AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															LEFT JOIN	(
																			SELECT	DIM.DIM_ID
																					,MAX(DIM.BRANCHES) AS BRANCHES
																					,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																					,MAX(DIM.SALESMAN) AS SALESMAN
																			FROM	(
																						SELECT [Dimension Set ID] AS DIM_ID
																							  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																							  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																							  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																						FROM [dbo].[SOLUSI$Dimension Set Entry]
																					) DIM
																			GROUP BY DIM.DIM_ID
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT CLE.[Entry No_]
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																					, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																			FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																			LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																			WHERE CLE.[Document Type] IN (2,3)
																			AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																				(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
																		) CM ON CM.NO_UM = GLE.[Document No_]
															LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
															WHERE GLE.[G_L Account No_] = '400.110.03'
																  AND GLE.[Document No_] LIKE 'UM%'
																  AND CM.NO_CM IS NULL
																  AND (SIH.[Posting Date] < (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)))
															GROUP BY DIMS.ITEM_CAT
																	 ,DIMS.BRANCHES
																	 ,DIMS.SALESMAN
																	 ,SIH.[Posting Date]
																	 ,SIH.[No_]
																	 ,SIH.[External Document No_]
																	 ,SIH.[Bill-to Customer No_]
																	 ,SIH.[Bill-to Name]
																	 ,SIH.[Prepayment Order No_]
														) UM
												LEFT JOIN	(
																SELECT	DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_] AS NO_SO
																		,MAX(SIH.[Posting Date]) AS TGL_INV
																		,SUM(GLE.[Amount]) AS AMOUNT
																FROM [dbo].[SOLUSI$G_L Entry] GLE
																LEFT JOIN	(
																				SELECT	DIM.DIM_ID
																						,MAX(DIM.BRANCHES) AS BRANCHES
																						,MAX(DIM.ITEM_CAT) AS ITEM_CAT
																						,MAX(DIM.SALESMAN) AS SALESMAN
																				FROM	(
																							SELECT [Dimension Set ID] AS DIM_ID
																								  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																								  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																								  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																							FROM [dbo].[SOLUSI$Dimension Set Entry]
																						) DIM
																				GROUP BY DIM.DIM_ID
																			) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
																LEFT JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
																WHERE GLE.[G_L Account No_] = '400.110.03'
																	  AND GLE.[Document No_] NOT LIKE 'UM%'
																	  AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= $P{TglUpto})
																GROUP BY DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,DIMS.SALESMAN
																		,SIH.[Order No_]
															) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT AND INV.SALESMAN = UM.SALESMAN
											) OUM
									WHERE OUM.AMOUNT > 0
								) ASPY
						GROUP BY ASPY.BRANCHES, ASPY.ITEM_CAT, ASPY.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - ALL' AS NOTE
								,DIMS.BRANCHES
								,DIMS.ITEM_CAT
								,DIMS.SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	(GLE.[G_L Account No_] BETWEEN '400.110.00'  AND '420.110.01') AND
								GLE.[G_L Account No_] <> '400.110.04' AND
								DIMS.ITEM_CAT <> '' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= $P{TglUpto})
						GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT, DIMS.SALESMAN
						UNION ALL
						SELECT	'(-/+) Others Management Adjustment - SALES LAINNYA' AS NOTE
								,'10' BRANCHES
								,'HW01' AS ITEM_CAT
								,'OFC' AS SALESMAN
								, SUM(GLE.[Amount]) * -1 AS AMOUNT
						FROM [dbo].[SP-ADJ$G_L Entry] GLE
						LEFT JOIN	(
										SELECT	DIM.DIM_ID
												,MAX(DIM.BRANCHES) AS BRANCHES
												,MAX(DIM.ITEM_CAT) AS ITEM_CAT
												,MAX(DIM.SALESMAN) AS SALESMAN
										FROM	(
													SELECT [Dimension Set ID] AS DIM_ID
														  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
														  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
														  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
													FROM [dbo].[SP-ADJ$Dimension Set Entry]
												) DIM
										GROUP BY DIM.DIM_ID
									) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
						WHERE	GLE.[G_L Account No_] = '400.110.04' AND
								(GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= $P{TglUpto})
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '2. Sales INTERCOY' ELSE '1. Sales FA' END AS SALES_TITLE
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN '(-) Sales INTERCOY' ELSE '(-) Sales FA' END AS SALES_TITLE2
											,CASE WHEN GLE.[Source No_] <> 'SOPE001' THEN 'SLS-0302' ELSE 'SLS-0301' END AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[SOLUSI$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[SOLUSI$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND (GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <= $P{TglUpto})
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						UNION ALL
						SELECT	'SALES CORRECTION - FA/INTERCOY ADJ' AS NOTE
								, SLC.BRANCHES
								, SLC.ITEM_CAT
								, SLC.SALESMAN
								, SUM(SLC.[Amount]) AS AMOUNT
						FROM	(
									SELECT	'3. Others Sales Adjustment' AS SALES_TITLE
											,'(-/+) Others Management Adjustment' AS SALES_TITLE2
											,'SLS-0303' AS SORT_SLS
											, DIMS.BRANCHES
											, DIMS.ITEM_CAT
											, DIMS.SALESMAN
											, GLE.[Amount]
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE GLE.[G_L Account No_] IN ('400.110.01', '410.110.01', '420.110.01')
											AND GLE.[Posting Date] >= (CAST((SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4)+'-01-01') AS datetime)) AND GLE.[Posting Date] <=  $P{TglUpto}
								) SLC
						GROUP BY SLC.BRANCHES, SLC.ITEM_CAT, SLC.SALESMAN
						) X
					) XX
			GROUP BY XX.GROUP_ITEM_CAT, XX.ITEM_CAT
			UNION ALL
			SELECT	2 AS GROUP_NO
					,'Uang Muka (as per Today)' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					,	CASE WHEN $P{Tahun} <> DATEPART(year, GETDATE()) THEN
							0
						ELSE
							(SUM(OSO.AMT_HO))
						END AS AMT_HO
					,	CASE WHEN $P{Tahun} <> DATEPART(year, GETDATE()) THEN
							0
						ELSE
							(SUM(OSO.AMT_SBY))
						END AS AMT_SBY
					,	CASE WHEN $P{Tahun} <> DATEPART(year, GETDATE()) THEN
							0
						ELSE
							(SUM(OSO.AMT_DPS))
						END AS AMT_DPS
					,	CASE WHEN $P{Tahun} <> DATEPART(year, GETDATE()) THEN
							0
						ELSE
							(SUM(OSO.AMT_CKR))
						END AS AMT_CKR
					,	CASE WHEN $P{Tahun} <> DATEPART(year, GETDATE()) THEN
							0
						ELSE
							(SUM(OSO.AMT_SMR))
						END AS AMT_SMR
			FROM	(
						SELECT	'OS1' AS GROUP_ITEM_CAT
								,'Uang Muka' AS ITEM_CAT
								,(SUM(UMX.AMT_HO)*-1) AS AMT_HO
								,(SUM(UMX.AMT_SBY)*-1) AS AMT_SBY
								,(SUM(UMX.AMT_DPS)*-1) AS AMT_DPS
								,(SUM(UMX.AMT_CKR)*-1) AS AMT_CKR
								,(SUM(UMX.AMT_SMR)*-1) AS AMT_SMR
						FROM	(
									SELECT	DIMS.ITEM_CAT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[AJ-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[AJ-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME' AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT
									UNION ALL
									SELECT	DIMS.ITEM_CAT
											,CASE WHEN DIMS.BRANCHES = '10' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_HO
											,CASE WHEN DIMS.BRANCHES = '15' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SBY
											,CASE WHEN DIMS.BRANCHES = '19' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_DPS
											,CASE WHEN DIMS.BRANCHES = '16' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_CKR
											,CASE WHEN DIMS.BRANCHES = '17' THEN SUM(GLE.[Amount]) * -1 ELSE 0 END AS AMT_SMR
									FROM [dbo].[SP-ADJ$G_L Entry] GLE
									LEFT JOIN	(
													SELECT	DIM.DIM_ID
															,MAX(DIM.BRANCHES) AS BRANCHES
															,MAX(DIM.ITEM_CAT) AS ITEM_CAT
															,MAX(DIM.SALESMAN) AS SALESMAN
													FROM	(
																SELECT [Dimension Set ID] AS DIM_ID
																	  ,CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END AS BRANCHES
																	  ,CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END AS ITEM_CAT
																	  ,CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END AS SALESMAN
																FROM [dbo].[SP-ADJ$Dimension Set Entry]
															) DIM
													GROUP BY DIM.DIM_ID
												) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
									WHERE	GLE.[G_L Account No_] = '400.110.00' AND
											GLE.[Source Code] <> 'CLSINCOME'AND
											GLE.[Document No_] NOT LIKE 'OBAL-CLOSE%' AND
											GLE.[Document No_] NOT LIKE 'JV-SNUM%' AND
											(
												($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
												($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
											)
									GROUP BY DIMS.BRANCHES, DIMS.ITEM_CAT
								) UMX
						UNION ALL
						SELECT	'OS1' AS GROUP_ITEM_CAT
								,'Uang Muka' AS ITEM_CAT
								,SUM(CASE WHEN OUM.BRANCHES = '10' THEN OUM.AMOUNT ELSE 0 END) AS AMT_HO
								,SUM(CASE WHEN OUM.BRANCHES = '15' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SBY
								,SUM(CASE WHEN OUM.BRANCHES = '19' THEN OUM.AMOUNT ELSE 0 END) AS AMT_DPS
								,SUM(CASE WHEN OUM.BRANCHES = '16' THEN OUM.AMOUNT ELSE 0 END) AS AMT_CKR
								,SUM(CASE WHEN OUM.BRANCHES = '17' THEN OUM.AMOUNT ELSE 0 END) AS AMT_SMR
						FROM	(
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[AUTOJAYA$G_L Entry] GLE
															INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[AUTOJAYA$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglUpto} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglUpto} > GETDATE() AND CMH.[Posting Date] >  $P{TglUpto})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[AUTOJAYA$G_L Entry] GLE
													INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																	FROM [dbo].[AUTOJAYA$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT
									UNION ALL
									SELECT	UM.COMPANY
											,UM.ITEM_CAT
											,UM.BRANCHES
											,UM.TGL_UM
											,UM.NO_UM
											,UM.NO_SO
											,CASE WHEN ISNULL(INV.AMOUNT,0) = 0 THEN UM.AMOUNT ELSE
												CASE WHEN SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) <= ISNULL(INV.AMOUNT,0) THEN 0 ELSE
													SUM(UM.AMOUNT)OVER(PARTITION BY UM.NO_SO, UM.BRANCHES, UM.ITEM_CAT  ORDER BY UM.TGL_UM) - ISNULL(INV.AMOUNT,0)
												END
											END AS AMOUNT
									FROM	(
												SELECT	'SOLUSI' AS COMPANY
														,SIH.ITEM_CAT
														,SIH.BRANCHES
														,SIH.TGL_UM
														,SIH.NO_UM
														,SIH.NO_SO
														,SIH.AMOUNT
												FROM	(
															SELECT		GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,SIH.[Posting Date] AS TGL_UM
																		,SIH.[No_] AS NO_UM
																		,SIH.[Prepayment Order No_] AS NO_SO
																		, SUM(GLE.[Amount] * -1) AMOUNT
															FROM [dbo].[SOLUSI$G_L Entry] GLE
															INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
															LEFT JOIN	(
																			SELECT [Dimension Set ID] AS DIM_ID
																					,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																					,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																					,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																			FROM [dbo].[SOLUSI$Dimension Set Entry]
																			GROUP BY [Dimension Set ID]
																		) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
															WHERE	GLE.[G_L Account No_] = '400.110.03' AND
																	GLE.[Document No_] LIKE 'UM%' AND
																	(
																		($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																		($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
																	)
															GROUP BY GLE.[Document No_]
																		,DIMS.ITEM_CAT
																		,DIMS.BRANCHES
																		,SIH.[Posting Date]
																		,SIH.[No_]
																		,SIH.[Prepayment Order No_]
														) SIH
												LEFT JOIN	(
																SELECT CLE.[Entry No_]
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE.[Document No_] ELSE CLE2.[Document No_] END AS NO_UM
																		, CASE WHEN CLE.[Document No_] LIKE 'UM%' THEN CLE2.[Document No_] ELSE CLE.[Document No_] END AS NO_CM
																FROM [dbo].[SOLUSI$Cust_ Ledger Entry] CLE
																LEFT JOIN [dbo].[SOLUSI$Cust_ Ledger Entry] CLE2 ON CLE2.[Entry No_] = CLE.[Closed by Entry No_]
																WHERE CLE.[Document Type] IN (2,3)
																AND ((CLE.[Document No_]  LIKE 'UM%' AND CLE2.[Document Type] = 3) OR
																	(CLE2.[Document No_]  LIKE 'UM%' AND CLE.[Document Type] = 3) )
															) CM ON CM.NO_UM = SIH.NO_UM
												LEFT JOIN [dbo].[SOLUSI$Sales Cr_Memo Header] CMH ON CMH.[No_] = CM.NO_CM
												WHERE	(
															CM.NO_CM IS NULL OR
															(
																CM.NO_CM IS NOT NULL AND
																(
																	($P{TglUpto} <= GETDATE() AND CMH.[Posting Date] >  GETDATE()) OR
																	($P{TglUpto} > GETDATE() AND CMH.[Posting Date] >  $P{TglUpto})
																)
															)
														)
											) UM
									LEFT JOIN	(
													SELECT	DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,SIH.[Order No_] AS NO_SO
															,MAX(SIH.[Posting Date]) AS TGL_INV
															,SUM(GLE.[Amount]) AS AMOUNT
													FROM [dbo].[SOLUSI$G_L Entry] GLE
													INNER JOIN [dbo].[SOLUSI$Sales Invoice Header] SIH ON SIH.[No_] = GLE.[Document No_]
													LEFT JOIN	(
																	SELECT [Dimension Set ID] AS DIM_ID
																			,MAX(CASE WHEN [Dimension Code] = 'BRANCHES' THEN [Dimension Value Code] ELSE NULL END) AS BRANCHES
																			,MAX(CASE WHEN [Dimension Code] = 'ITEM CATEGORY' THEN [Dimension Value Code] ELSE NULL END) AS ITEM_CAT
																			,MAX(CASE WHEN [Dimension Code] = 'SALESMAN' THEN [Dimension Value Code] ELSE NULL END) AS SALESMAN
																	FROM [dbo].[SOLUSI$Dimension Set Entry]
																	GROUP BY [Dimension Set ID]
																) DIMS ON DIMS.DIM_ID = GLE.[Dimension Set ID]
													WHERE	GLE.[G_L Account No_] = '400.110.03'
															AND GLE.[Document No_] NOT LIKE 'UM%'
															AND
															(
																($P{TglUpto} <= GETDATE() AND GLE.[Posting Date] <=  GETDATE()) OR
																($P{TglUpto} > GETDATE() AND GLE.[Posting Date] <=  $P{TglUpto})
															)
													GROUP BY DIMS.ITEM_CAT
															,DIMS.BRANCHES
															,SIH.[Order No_]
												) INV ON INV.NO_SO = UM.NO_SO AND INV.BRANCHES = UM.BRANCHES AND INV.ITEM_CAT = UM.ITEM_CAT
								) OUM
						LEFT JOIN	(
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[AUTOJAYA$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
										UNION ALL
										SELECT [Document No_] AS NO_SO
											  ,SUM([Amount]) AS AMOUNT
										FROM [dbo].[SOLUSI$Sales Line]
										WHERE [Document Type] = 1
										GROUP BY [Document No_]
									) SOS ON SOS.NO_SO = OUM.NO_SO
						WHERE	OUM.AMOUNT > 0 AND
								SOS.NO_SO IS NOT NULL AND
								SOS.NO_SO <> 'SOAT160274'
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
			UNION ALL
			SELECT	3 AS GROUP_NO
					,	CASE WHEN (DATEPART(quarter, GETDATE()) IN (1,2)) THEN
							'Outstanding SO (as per Today) - Semester I'
						ELSE
							'Outstanding SO (as per Today) - ALL Semester'
						END AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					, SUM(CASE WHEN OSO.CABANG = 'JAKARTA' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_HO
					, SUM(CASE WHEN OSO.CABANG = 'SURABAYA' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_SBY
					, SUM(CASE WHEN OSO.CABANG = 'BALI' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_DPS
					, SUM(CASE WHEN OSO.CABANG = 'CIKARANG' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_CKR
					, SUM(CASE WHEN OSO.CABANG = 'SEMARANG' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_SMR
			FROM	(
						SELECT	'OS2' AS GROUP_ITEM_CAT
								,'Outstanding SO' AS ITEM_CAT
								, XAX.CABANG
								, CASE WHEN	(
												(DATEPART(quarter, GETDATE()) IN (1,2) AND DATEPART(quarter, XAX.EST_REALISASI) IN (1,2))
												 OR
												DATEPART(quarter, GETDATE()) IN (3,4)
											) THEN XAX.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR
						FROM	(
									SELECT	XXX.CABANG
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													XXX.AMOUNT_IDR
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
														ELSE
															ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
														END
													ELSE
														XXX.AMOUNT_IDR
													END
												END AS AMOUNT_IDR
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															XOX.EST_REALISASI
														ELSE
															CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																	ELSE  XXX.EST_REALISASI
															END
														END
													ELSE
														XXX.EST_REALISASI
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.NO_PO_CUST
														, XY.STATUS_SO
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT	  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																		END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, SH.[No_] AS NO_SO
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[AUTOJAYA$Sales Header] SH
															LEFT JOIN  (	SELECT X.[Document No_]
																				,SUM(X.QTY) AS QTY
																				,SUM(X.QTY_INV)AS QTY_INV
																				,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT [Document No_]
																							, [Quantity] AS QTY
																							, [Quantity Invoiced] AS QTY_INV
																							, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																								([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																							  ELSE
																								[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[AUTOJAYA$Sales Line]
																					WHERE [Document Type] = 1 AND
																					 [Quantity] <> [Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_]
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT [Document No_]
																				 , SUM([Amount]) AS AMOUNT_TTL
																					FROM [dbo].[AUTOJAYA$Sales Line]
																					WHERE [Document Type] = 1
																			GROUP BY [Document No_]
																		)SL2 ON SL2.[Document No_] = SH.[No_]
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																				) Y
																			GROUP BY Y.NO_SO
																		) UM ON UM.NO_SO = SH.[No_]
															LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[AUTOJAYA$Purchase Header] POH
																					INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																						LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
												UNION ALL
												SELECT	'SOLUSI' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.NO_PO_CUST
														, XY.STATUS_SO
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																		END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, SH.[No_] AS NO_SO
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[SOLUSI$Sales Header] SH
															INNER JOIN  (	SELECT X.[Document No_]
																				,SUM(X.QTY) AS QTY
																				,SUM(X.QTY_INV)AS QTY_INV
																				,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT [Document No_]
																							, [Quantity] AS QTY
																							, [Quantity Invoiced] AS QTY_INV
																							, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																								([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																							  ELSE
																								[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[SOLUSI$Sales Line]
																					WHERE [Document Type] = 1 AND
																					 [Quantity] <> [Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_]
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT [Document No_]
																				 , SUM([Amount]) AS AMOUNT_TTL
																					FROM [dbo].[SOLUSI$Sales Line]
																					WHERE [Document Type] = 1
																			GROUP BY [Document No_]
																		)SL2 ON SL2.[Document No_] = SH.[No_]
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																				) Y
																			GROUP BY Y.NO_SO
																		) UM ON UM.NO_SO = SH.[No_]
															LEFT JOIN [dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[SOLUSI$Purchase Header] POH
																					INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[SOLUSI$Reservation Entry] REA
																						LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
											) XXX
									LEFT JOIN	(
													SELECT T01.[NO_SO]
															,T01.[JENIS_PAYMENT]
															,T01.[QTY]
															,T01.[EST_REALISASI]
															,T02.[ADD_NUM]
													FROM [NavBI].[dbo].[T01_SO_ADJ] T01
													LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
												) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
									WHERE	XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
											XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
											XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
								) XAX
						WHERE	(
									(
										$P{Tahun} <= DATEPART(year, GETDATE()) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										$P{Tahun} > DATEPART(year, GETDATE()) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = CAST($P{Tahun} as varchar(4))
									)
								)
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
			UNION ALL
			SELECT	4 AS GROUP_NO
					, 'Outstanding SO (as per Today) - Semester II' AS GROUP_DESC
					, OSO.GROUP_ITEM_CAT
					, OSO.ITEM_CAT
					, SUM(CASE WHEN OSO.CABANG = 'JAKARTA' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_HO
					, SUM(CASE WHEN OSO.CABANG = 'SURABAYA' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_SBY
					, SUM(CASE WHEN OSO.CABANG = 'BALI' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_DPS
					, SUM(CASE WHEN OSO.CABANG = 'CIKARANG' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_CKR
					, SUM(CASE WHEN OSO.CABANG = 'SEMARANG' THEN OSO.AMOUNT_IDR ELSE 0 END) AS AMT_SMR
			FROM	(
						SELECT	'OS2' AS GROUP_ITEM_CAT
								,'Outstanding SO' AS ITEM_CAT
								, XAX.CABANG
								, CASE WHEN	DATEPART(quarter, XAX.EST_REALISASI) IN (3,4) THEN XAX.AMOUNT_IDR ELSE 0 END AS AMOUNT_IDR
						FROM	(
									SELECT	XXX.CABANG
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													XXX.AMOUNT_IDR
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															ROUND(((XXX.AMOUNT_IDR_FULL * XOX.QTY)/100),0)
														ELSE
															ROUND((XXX.AMOUNT_IDR  / XOX.QTY),0)
														END
													ELSE
														XXX.AMOUNT_IDR
													END
												END AS AMOUNT_IDR
											,	CASE WHEN XXX.RULE_TIPE = 'TRAD' AND XXX.RELEASE_TODAY = 'YES' THEN
													CASE WHEN XXX.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XXX.DELIVERY_DATE END
												ELSE
													CASE WHEN XOX.NO_SO IS NOT NULL THEN
														CASE WHEN XOX.JENIS_PAYMENT = 'D' THEN
															XOX.EST_REALISASI
														ELSE
															CASE WHEN XOX.JENIS_PAYMENT = 'M' THEN DATEADD(month, XOX.ADD_NUM, XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Q' THEN DATEADD(month, (XOX.ADD_NUM*3), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'S' THEN DATEADD(month, (XOX.ADD_NUM*6), XXX.EST_REALISASI)
																	WHEN XOX.JENIS_PAYMENT = 'Y' THEN DATEADD(month, (XOX.ADD_NUM*12), XXX.EST_REALISASI)
																	ELSE  XXX.EST_REALISASI
															END
														END
													ELSE
														XXX.EST_REALISASI
													END
												END AS EST_REALISASI
									FROM	(
												SELECT	'AUTOJAYA' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.NO_PO_CUST
														, XY.STATUS_SO
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT	  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOAR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																		END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, SH.[No_] AS NO_SO
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[AUTOJAYA$Sales Header] SH
															LEFT JOIN  (	SELECT X.[Document No_]
																				,SUM(X.QTY) AS QTY
																				,SUM(X.QTY_INV)AS QTY_INV
																				,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT [Document No_]
																							, [Quantity] AS QTY
																							, [Quantity Invoiced] AS QTY_INV
																							, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																								([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																							  ELSE
																								[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[AUTOJAYA$Sales Line]
																					WHERE [Document Type] = 1 AND
																					 [Quantity] <> [Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_]
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT [Document No_]
																				 , SUM([Amount]) AS AMOUNT_TTL
																					FROM [dbo].[AUTOJAYA$Sales Line]
																					WHERE [Document Type] = 1
																			GROUP BY [Document No_]
																		)SL2 ON SL2.[Document No_] = SH.[No_]
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[AUTOJAYA$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[AUTOJAYA$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																				) Y
																			GROUP BY Y.NO_SO
																		) UM ON UM.NO_SO = SH.[No_]
															LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[AUTOJAYA$Purchase Header] POH
																					INNER JOIN [dbo].[AUTOJAYA$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[AUTOJAYA$Reservation Entry] REA
																						LEFT JOIN [dbo].[AUTOJAYA$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
												UNION ALL
												SELECT	'SOLUSI' AS COMPANY
														, XY.NO_SO
														, XY.RULE_TIPE
														, XY.RELEASE_TODAY
														, XY.DELIVERY_DATE
														, XY.CABANG
														, XY.CUST_CODE
														, XY.NO_PO_CUST
														, XY.STATUS_SO
														, XY.AMOUNT_IDR AS AMOUNT_IDR_FULL
														,	CASE WHEN XY.AMOUNT_IDR_TTL = 0 THEN
																(XY.AMOUNT_IDR - XY.UM_AMOUNT_IDR)
															ELSE
																(XY.AMOUNT_IDR - ((XY.UM_AMOUNT_IDR*XY.AMOUNT_IDR)/(XY.AMOUNT_IDR_TTL)))
															END AS AMOUNT_IDR
														,	CASE WHEN XY.RULE_TIPE = 'RTAL' THEN
																CASE WHEN XY.ORDER_DATE < GETDATE() THEN
																	CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																ELSE
																	XY.ORDER_DATE
																END
															ELSE
																CASE WHEN XY.SHIP_DATE_ADJ <> CAST('01/01/1753' AS DATETIME) THEN
																	XY.SHIP_DATE_ADJ
																ELSE
																	CASE WHEN MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO) IS NOT NULL THEN
																		CASE WHEN XY.RULE_TIPE = 'IDMR' THEN
																			CASE WHEN DATEADD(WEEK, 3, (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))) <  GETDATE() THEN
																				CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			ELSE
																				DATEADD(WEEK, 3, MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO))
																			END
																		ELSE
																			CASE	WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Mon' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Tue' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 3 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Wed' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Thu' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Fri' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sat' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 5 END
																					WHEN FORMAT((MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)), 'ddd') = 'Sun' THEN
																						CASE WHEN (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE (MAX(POC.EXPECTED_DATE) OVER (PARTITION BY  XY.NO_SO)) + 4 END
																					ELSE
																						CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																			END
																		END
																	ELSE
																		CASE	WHEN XY.RULE_TIPE = 'IDMR' THEN
																					CASE WHEN DATEADD(WEEK, 3, XY.ORDER_DATE) < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE DATEADD(WEEK, 3, XY.ORDER_DATE) END
																				WHEN XY.RULE_TIPE = 'ALFA' THEN
																					CASE	WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Mon' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Tue' THEN
																								CASE WHEN XY.ORDER_DATE + 3 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 3 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Wed' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Thu' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Fri' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sat' THEN
																								CASE WHEN XY.ORDER_DATE + 5 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 5 END
																							WHEN FORMAT(XY.ORDER_DATE, 'ddd') = 'Sun' THEN
																								CASE WHEN XY.ORDER_DATE + 4 < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.ORDER_DATE + 4 END
																							ELSE
																								CAST(CAST(GETDATE() AS DATE) AS DATETIME)
																					END
																				ELSE
																					CASE WHEN XY.DELIVERY_DATE < GETDATE() THEN CAST(CAST(GETDATE() AS DATE) AS DATETIME) ELSE XY.DELIVERY_DATE END
																		END
																	END
																END
															END AS EST_REALISASI
												FROM	(
															SELECT  CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSS' THEN 'SC' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 1, 4) = 'SOSR' THEN 'RT' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('8S','9S') THEN 'AI' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) IN ('7S') THEN 'LZ' ELSE 'TD' END
																			END
																		END
																	  END AS TIPE
																	, CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'S' THEN 'SCEN' ELSE
																		CASE WHEN SUBSTRING( SH.[No_], 4, 1) = 'R' THEN 'RTAL' ELSE
																			CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '8S' THEN 'ALFA' ELSE
																				CASE WHEN SUBSTRING( SH.[No_], 1, 2) = '9S' THEN 'IDMR' ELSE 'TRAD' END
																			END
																		END
																		END AS RULE_TIPE
																	, SH.[Requested Delivery Date] AS DELIVERY_DATE
																	, CASE WHEN DATEADD(dd, DATEDIFF(dd, 0, SH.[Released Date]), 0) = DATEADD(dd, DATEDIFF(dd, 0, getdate()), 0) THEN 'YES' ELSE 'NO' END AS RELEASE_TODAY
																	, SH.[No_] AS NO_SO
																	, ISNULL(CAB.[Name], 'JAKARTA') AS CABANG
																	, SH.[Bill-to Customer No_] AS CUST_CODE
																	, SH.[Order Date] AS ORDER_DATE
																	, CASE	WHEN SH.[Status] = 0 THEN 'OPEN'
																			WHEN SH.[Status] = 1 THEN 'RELEASED'
																			WHEN SH.[Status] = 2 THEN 'PENDING APPROVAL'
																			WHEN SH.[Status] = 3 THEN 'RELEASED'
																			ELSE '' END AS STATUS_SO
																	, SH.[External Document No_] AS NO_PO_CUST
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL.AMOUNT / SH.[Currency Factor],0) ELSE SL.AMOUNT END,0) AS AMOUNT_IDR
																	, ISNULL(CASE WHEN SH.[Currency Code] <> '' THEN ROUND(SL2.AMOUNT_TTL / SH.[Currency Factor],0) ELSE SL2.AMOUNT_TTL END,0) AS AMOUNT_IDR_TTL
																	, ISNULL(UM.UM_AMOUNT_IDR,0) AS UM_AMOUNT_IDR
																	, SH.[Shipment Date] AS SHIP_DATE
																	,	CASE WHEN ISDATE(SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)) = 0 THEN
																			CAST('01/01/1753' AS DATETIME)
																		ELSE
																			CONVERT(DATETIME, (SUBSTRING(SH.[Package Tracking No_],4,2)+'/'+SUBSTRING(SH.[Package Tracking No_],1,2)+'/'+SUBSTRING(SH.[Package Tracking No_],7,4)))
																		END AS SHIP_DATE_ADJ
															FROM [dbo].[SOLUSI$Sales Header] SH
															INNER JOIN  (	SELECT X.[Document No_]
																				,SUM(X.QTY) AS QTY
																				,SUM(X.QTY_INV)AS QTY_INV
																				,SUM(X.AMOUNT) AS AMOUNT
																			FROM (
																					SELECT [Document No_]
																							, [Quantity] AS QTY
																							, [Quantity Invoiced] AS QTY_INV
																							, CASE WHEN [Quantity Invoiced] <> 0 AND [Quantity] <> [Quantity Invoiced] THEN
																								([Amount] / [Quantity]) * ([Quantity] - [Quantity Invoiced])
																							  ELSE
																								[Amount]
																							  END AS AMOUNT
																					FROM [dbo].[SOLUSI$Sales Line]
																					WHERE [Document Type] = 1 AND
																					 [Quantity] <> [Quantity Invoiced]
																				) X
																			GROUP BY X.[Document No_]
																		)SL ON SL.[Document No_] = SH.[No_]
															LEFT JOIN  (
																			SELECT [Document No_]
																				 , SUM([Amount]) AS AMOUNT_TTL
																					FROM [dbo].[SOLUSI$Sales Line]
																					WHERE [Document Type] = 1
																			GROUP BY [Document No_]
																		)SL2 ON SL2.[Document No_] = SH.[No_]
															LEFT JOIN	(
																			SELECT Y.NO_SO
																					,SUM(Y.UM_AMOUNT) AS UM_AMOUNT
																					,SUM(Y.UM_AMOUNT_IDR) AS UM_AMOUNT_IDR
																			FROM (
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Invoice Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Invoice Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																					UNION ALL
																					SELECT [Prepayment Order No_] AS NO_SO
																						  ,SUM(UMD.[Amount]) * -1 AS UM_AMOUNT
																						  ,CASE WHEN UMH.[Currency Code] <> '' THEN ROUND(SUM(UMD.[Amount]) / UMH.[Currency Factor],0) ELSE SUM(UMD.[Amount]) * -1 END AS UM_AMOUNT_IDR
																					FROM [dbo].[SOLUSI$Sales Cr_Memo Header] UMH
																					INNER JOIN [dbo].[SOLUSI$Sales Cr_Memo Line] UMD ON UMH.[No_] = UMD.[Document No_]
																					GROUP BY UMH.[Prepayment Order No_], UMH.[Currency Code], UMH.[Currency Factor]
																				) Y
																			GROUP BY Y.NO_SO
																		) UM ON UM.NO_SO = SH.[No_]
															LEFT JOIN [dbo].[SOLUSI$Responsibility Center] CAB ON CAB.[Code] = SH.[Shortcut Dimension 1 Code]
															WHERE SH.[Document Type] = 1
														) XY
												LEFT JOIN	(
																SELECT	POX.NO_SO
																		,MAX(POX.EXPECTED_DATE) AS EXPECTED_DATE
																FROM (
																		SELECT	PO.ITEM_NO
																				,RSV.NO_SO
																				,RSV.NO_SO_LINE
																				,PO.NO_PO
																				,PO.EXPECTED_DATE
																		FROM	(
																					SELECT POD.[No_] AS ITEM_NO
																						  ,POH.[No_] AS NO_PO
																						  ,POD.[Line No_] AS NO_PO_LINE
																						  ,SUM(POD.[Outstanding Qty_ (Base)]) AS QTY_ON_ORDER
																						  ,POD.[Expected Receipt Date] AS EXPECTED_DATE
																					FROM [dbo].[SOLUSI$Purchase Header] POH
																					INNER JOIN [dbo].[SOLUSI$Purchase Line] POD ON POD.[Document No_] = POH.[No_]
																					WHERE POH.[Document Type] = 1 AND
																						POD.[Type] = 2
																					GROUP BY POD.[No_]
																							,POH.[No_]
																							,POD.[Expected Receipt Date]
																							,POD.[IC Partner Reference]
																							,POD.[Line No_]
																				) PO
																		LEFT JOIN	(
																						SELECT  REA.[Item No_] AS ITEM_NO
																								, REA.[Source ID] AS NO_PO
																								, REA.[Source Ref_ No_] AS NO_PO_LINE
																								, REB.[Source ID] AS NO_SO
																								, REB.[Source Ref_ No_] AS NO_SO_LINE
																								, SUM(REA.[Quantity (Base)]) AS RSRV_ON_ORDER
																						FROM [dbo].[SOLUSI$Reservation Entry] REA
																						LEFT JOIN [dbo].[SOLUSI$Reservation Entry] REB ON REA.[Entry No_] = REB.[Entry No_] AND REB.[Positive] = 0
																						WHERE REA.[Reservation Status] = 0 AND
																							  REA.[Positive] = 1 AND
																							  REA.[Source ID] <>''
																						GROUP BY REA.[Item No_],  REA.[Source ID], REB.[Source ID], REB.[Source Ref_ No_], REA.[Source Ref_ No_]
																					) RSV ON RSV.ITEM_NO = PO.ITEM_NO AND RSV.NO_PO = PO.NO_PO AND RSV.NO_PO_LINE = PO.NO_PO_LINE
																		WHERE PO.QTY_ON_ORDER > 0
																	) POX
																GROUP BY POX.NO_SO
															) POC ON POC.NO_SO = XY.NO_SO
												WHERE	XY.STATUS_SO = 'RELEASED'
											) XXX
									LEFT JOIN	(
													SELECT T01.[NO_SO]
															,T01.[JENIS_PAYMENT]
															,T01.[QTY]
															,T01.[EST_REALISASI]
															,T02.[ADD_NUM]
													FROM [NavBI].[dbo].[T01_SO_ADJ] T01
													LEFT JOIN [NavBI].[dbo].[T02_SO_ADJ_LINE] T02 ON T02.[ADD_NUM] < T01.[QTY] AND T01.[JENIS_PAYMENT] <> 'D'
												) XOX ON XOX.[NO_SO] = XXX.NO_SO  COLLATE Latin1_General_CI_AS
									WHERE
											XXX.NO_PO_CUST NOT LIKE '%OTP%' AND XXX.NO_PO_CUST NOT LIKE 'BOOKING%' AND
											XXX.CUST_CODE NOT IN ('AUJA001' , 'AUJA002', 'SOPE001') AND
											XXX.NO_SO NOT IN ('SOST150107', 'SOST150657', 'HW15 C 000000274')
								) XAX
						WHERE	(
									(
										$P{Tahun} <= DATEPART(year, GETDATE()) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = SUBSTRING(CONVERT(varchar,  GETDATE(), 105), 7,4)
									)
										OR
									(
										$P{Tahun} > DATEPART(year, GETDATE()) AND
										SUBSTRING(CONVERT(varchar, XAX.EST_REALISASI, 105), 7,4) = CAST($P{Tahun} as varchar(4))
									)
								)
					) OSO
			GROUP BY OSO.GROUP_ITEM_CAT, OSO.ITEM_CAT
		) SRV
LEFT JOIN	(
				SELECT	CASE WHEN DATEPART(month, $P{TglUpto}) IN (1,2,3,4) THEN
							'Target - Semester I ' + CAST(DATEPART(YEAR, $P{TglUpto}) AS VARCHAR)
						ELSE
							'Target - '+CAST(DATEPART(YEAR, $P{TglUpto}) AS VARCHAR)
						END AS LBL_TARGET
						,SUM(TGT.AMT_TARGET) AS AMT_TARGET
				FROM	(
							SELECT	CAST(CMP.[Description] AS DECIMAL(38,20)) AS AMT_TARGET
									,	CASE WHEN	SUBSTRING(CMP.[No_],1,4) = SUBSTRING(CONVERT(varchar, $P{TglUpto}, 105), 7,4) THEN
											CASE WHEN (DATEPART(month, $P{TglUpto}) IN (1,2,3,4)) THEN
												CASE WHEN SUBSTRING(CMP.[No_],9,2) = 'S1' THEN
													'Y'
												ELSE
													'N'
												END
											ELSE
												'Y'
											END
										ELSE
											'N'
										END AS TARGET_VALID
							FROM [dbo].[AUTOJAYA$Campaign]  CMP
							WHERE	CMP.[Description] <> ''
									AND CMP.[Salesperson Code] = ''
						) TGT
				WHERE TGT.TARGET_VALID = 'Y'
			) TRG ON 1 = 1
WHERE	(DATEPART(month, GETDATE()) IN (5,6)) OR
		(DATEPART(month, GETDATE()) NOT IN (5,6) AND SRV.GROUP_NO <> 4)
UNION ALL
SELECT	2 AS GR_CRNXY
		,	CASE WHEN DATEPART(month, GETDATE()) IN (5,6) THEN 5 ELSE 4 END AS GROUP_NO
		,	CASE WHEN	DATEPART(quarter, GETDATE()) IN (1,2)  THEN
				'TOTAL Weighted PIPELINE SEMESTER I '+CONVERT(VARCHAR(4),$P{Tahun})
			ELSE
				'TOTAL Weighted PIPELINE '+CONVERT(VARCHAR(4),$P{Tahun})
			END AS GROUP_DESC
		,'PL' GROUP_ITEM_CAT
		,XI.GROUP_DESC AS ITEM_CAT
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_HO) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_HO) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_HO) * ($P{weightL}/100)
				ELSE 0 END AS AMT_HO
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SBY) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SBY) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SBY) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SBY
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_DPS) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_DPS) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_DPS) * ($P{weightL}/100)
				ELSE 0 END AS AMT_DPS
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_CKR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_CKR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_CKR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_CKR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SMR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SMR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SMR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SMR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN	(SUM(XI.AMT_HO) * ($P{weightH}/100)) + (SUM(XI.AMT_SBY) * ($P{weightH}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightH}/100)) + (SUM(XI.AMT_CKR) * ($P{weightH}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightH}/100))
				WHEN XI.SUBGROUP_NO = 2 THEN	(SUM(XI.AMT_HO) * ($P{weightM}/100)) + (SUM(XI.AMT_SBY) * ($P{weightM}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightM}/100)) + (SUM(XI.AMT_CKR) * ($P{weightM}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightM}/100))
				WHEN XI.SUBGROUP_NO = 3 THEN	(SUM(XI.AMT_HO) * ($P{weightL}/100)) + (SUM(XI.AMT_SBY) * ($P{weightL}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightL}/100)) + (SUM(XI.AMT_CKR) * ($P{weightL}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightL}/100))
				ELSE 0 END AS TOTAL
		, 0 AS AMT_TARGET
		, '' AS LBL_TARGET
FROM	(
			SELECT	MIN(X1.GROUP_NO) AS SUBGROUP_NO
					,X1.GROUP_PIPELINE
					,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'1. Weighted PIPELINE (H) '
								WHEN MIN(X1.GROUP_NO) =  2 THEN	'2. Weighted PIPELINE (M)'
								WHEN MIN(X1.GROUP_NO) =  3 THEN	'3. Weighted PIPELINE (L)'
								ELSE '4. Weighted PIPELINE (R)'
						END AS GROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) = 1 THEN
							'HIGH POTENTIAL (H)'
						ELSE
							CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.CUSTOMER ELSE X1.BRANCHES_NAME END
						END AS SUBGROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SPV_BY ELSE '' END AS SPV_BY
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SALES_CODE ELSE '' END AS SALES_CODE
					, CASE WHEN X1.BRANCHES = '10' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_HO
					, CASE WHEN X1.BRANCHES = '15' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SBY
					, CASE WHEN X1.BRANCHES = '19' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_DPS
					, CASE WHEN X1.BRANCHES = '16' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_CKR
					, CASE WHEN X1.BRANCHES = '17' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SMR
			FROM	(
						SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
								, CAB.[Name] AS BRANCHES_NAME
								, X.SALES_CODE
								, X.CUSTOMER
								, X.CUSTOMER_REAL
								, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER_REAL, CAB.[Name]) AS SPV_BY
								,	CASE WHEN X.SIZE_PROJECT = 'H' THEN
										1
									ELSE
										CASE WHEN X.SIZE_PROJECT = 'M' THEN
											2
										ELSE
											CASE WHEN X.SIZE_PROJECT = 'L' THEN
												3
											ELSE
												CASE WHEN ($P{AmtBig}*1) <= 0 THEN
													CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
												ELSE
													CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}*1) THEN 3
													ELSE
														CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
													END
												END
											END
										END
									END AS GROUP_NO
								,	CASE	WHEN X.SIZE_PROJECT = 'H' THEN 'P1'
											WHEN X.SIZE_PROJECT = 'M' THEN 'P2'
											ELSE 'P3'
									END AS GROUP_PIPELINE
								,	CASE WHEN	DATEPART(quarter, GETDATE()) IN (1,2)  THEN
										SUM(X.AMOUNT_S1)
									ELSE
										SUM(X.AMOUNT)
									END AS AMOUNT
						FROM	(
									SELECT	MAD.COMPANY
											,MAD.SALES_CODE
											,MAD.CABANG
											,MAD.CUSTOMER
											,MAD.CUSTOMER_REAL
											,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
											,MAD.POTENSIAL_PROJECT
											,MAD.SPV_BY
											,MAD.ITEM
											,MAD.ITEM_CAT
											,MAD.HW_PS
											,ROUND((
												CASE WHEN MAD.JML_TAHUN <> 0 THEN
													CASE WHEN  MAD.EST_Q = 1234 THEN
														((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
													ELSE
														CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE 0
														END
													END
												ELSE
													(MAD.UNIT_PRICE * MAD.QTY_OUT)
												END
												/ 1000000 ),2) AS AMOUNT
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S1
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S2
											,MAD.DIM_PRINCIPAL
											,MAD.EST_YEAR
									FROM	(
												SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
														,SOH.[Salesperson Code] AS SALES_CODE
														,SOH.[Responsibility Center] AS CABANG
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																'*) '+SOH.[Sell-to Customer Name]
															ELSE
																SOH.[Sell-to Customer Name]
															END AS CUSTOMER
														,	SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
														, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																SUBSTRING(SOH.[Posting Description], 1,1)
															ELSE
																CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
															END AS SIZE_PROJECT
														, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
														,SOH.[Sell-to County] AS SPV_BY
														,SOL.[No_] AS ITEM
														,SOL.[Description] AS ITEM_DESC
														,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
														,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
														,SOL.[Quantity] AS QTY_OUT
														,SOL.[Unit Price] AS UNIT_PRICE
														,DIMD.DIM_PRINCIPAL
														,SOH.[Payment Discount _] AS JML_TAHUN
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																			$P{Tahun}
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																			$P{Tahun}
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_YEAR
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																				CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																						WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																						WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																				 WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																				 WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																				CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(quarter, GETDATE())
																ELSE
																	DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_Q
												FROM [dbo].[AUTOJAYA$Sales Header] SOH
												INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
												LEFT JOIN	(
																SELECT X.[Dimension Set ID]
																	  ,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																FROM [dbo].[AUTOJAYA$Dimension Set Entry] X
																GROUP BY [Dimension Set ID]
															) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
												WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
											) MAD
								) X
						LEFT JOIN [dbo].[AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
						LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
						LEFT JOIN	(
										SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
										FROM	(
													SELECT	MAD.CUSTOMER_REAL
															,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
															,MAD.EST_YEAR
													FROM	(
																SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																		, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																				SUBSTRING(SOH.[Posting Description], 1,1)
																			ELSE
																				CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																			END AS SIZE_PROJECT
																		,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																						CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																							$P{Tahun}
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																							CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																						ELSE
																							0
																						END
																					END
																				ELSE
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																						CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																							$P{Tahun}
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																							CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																						ELSE
																							0
																						END
																					END
																				END
																			ELSE
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																				END
																			END AS EST_YEAR
																FROM [dbo].[AUTOJAYA$Sales Header] SOH
																INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
															) MAD
												) X
										WHERE	X.EST_YEAR = $P{Tahun}
												AND X.SIZE_PROJECT IN ('M', 'H')
									) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER_REAL
						WHERE	X.EST_YEAR = $P{Tahun}
								AND SLS.[Global Dimension 1 Code] IS NOT NULL
						GROUP BY CAB.[Name]
								,X.SALES_CODE
								,X.CUSTOMER
								,X.CUSTOMER_REAL
								,X.SIZE_PROJECT
								,SLS.[Global Dimension 1 Code]
					) X1
			GROUP BY X1.CUSTOMER
					,X1.BRANCHES_NAME
					,X1.SPV_BY
					,X1.SALES_CODE
					,X1.BRANCHES
					,X1.GROUP_PIPELINE
		) XI
WHERE (XI.SPV_BY LIKE '%'+$P{SpvBy}+'%' OR $P{SpvBy} = 'ALL')
		AND XI.SUBGROUP_NO <> 4
GROUP BY XI.SUBGROUP_NO
		,XI.GROUP_DESC
UNION ALL
SELECT	NSEM.GR_CRNXY
		,NSEM.GROUP_NO
		,NSEM.GROUP_DESC
		,NSEM.GROUP_ITEM_CAT
		,NSEM.ITEM_CAT
		,NSEM.AMT_HO
		,NSEM.AMT_SBY
		,NSEM.AMT_DPS
		,NSEM.AMT_CKR
		,NSEM.AMT_SMR
		,NSEM.TOTAL
		,NSEM.AMT_TARGET
		,NSEM.LBL_TARGET
FROM	(
SELECT	3 AS GR_CRNXY
		,CASE WHEN DATEPART(month,GETDATE()) IN (5,6) THEN 6 ELSE 5 END AS GROUP_NO
		,'TOTAL Weighted PIPELINE SEMESTER II '+CONVERT(VARCHAR(4),$P{Tahun}) AS GROUP_DESC
		,'PL' GROUP_ITEM_CAT
		,XI.GROUP_DESC AS ITEM_CAT
				, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_HO) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_HO) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_HO) * ($P{weightL}/100)
				ELSE 0 END AS AMT_HO
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SBY) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SBY) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SBY) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SBY
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_DPS) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_DPS) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_DPS) * ($P{weightL}/100)
				ELSE 0 END AS AMT_DPS
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_CKR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_CKR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_CKR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_CKR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SMR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SMR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SMR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SMR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN	(SUM(XI.AMT_HO) * ($P{weightH}/100)) + (SUM(XI.AMT_SBY) * ($P{weightH}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightH}/100)) + (SUM(XI.AMT_CKR) * ($P{weightH}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightH}/100))
				WHEN XI.SUBGROUP_NO = 2 THEN	(SUM(XI.AMT_HO) * ($P{weightM}/100)) + (SUM(XI.AMT_SBY) * ($P{weightM}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightM}/100)) + (SUM(XI.AMT_CKR) * ($P{weightM}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightM}/100))
				WHEN XI.SUBGROUP_NO = 3 THEN	(SUM(XI.AMT_HO) * ($P{weightL}/100)) + (SUM(XI.AMT_SBY) * ($P{weightL}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightL}/100)) + (SUM(XI.AMT_CKR) * ($P{weightL}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightL}/100))
				ELSE 0 END AS TOTAL
		, 0 AS AMT_TARGET
		, '' AS LBL_TARGET
		, 1 AS SEMESTER
FROM	(
			SELECT	MIN(X1.GROUP_NO) AS SUBGROUP_NO
					,X1.GROUP_PIPELINE
					,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'1. Weighted PIPELINE (H) '
								WHEN MIN(X1.GROUP_NO) =  2 THEN	'2. Weighted PIPELINE (M)'
								WHEN MIN(X1.GROUP_NO) =  3 THEN	'3. Weighted PIPELINE (L)'
								ELSE '4. Weighted PIPELINE (R)'
						END AS GROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) = 1 THEN
							'HIGH POTENTIAL (H)'
						ELSE
							CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.CUSTOMER ELSE X1.BRANCHES_NAME END
						END AS SUBGROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SPV_BY ELSE '' END AS SPV_BY
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SALES_CODE ELSE '' END AS SALES_CODE
					, CASE WHEN X1.BRANCHES = '10' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_HO
					, CASE WHEN X1.BRANCHES = '15' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SBY
					, CASE WHEN X1.BRANCHES = '19' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_DPS
					, CASE WHEN X1.BRANCHES = '16' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_CKR
					, CASE WHEN X1.BRANCHES = '17' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SMR
			FROM	(
						SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
								, CAB.[Name] AS BRANCHES_NAME
								, X.SALES_CODE
								, X.CUSTOMER
								, X.CUSTOMER_REAL
								, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER_REAL, CAB.[Name]) AS SPV_BY
								,	CASE WHEN X.SIZE_PROJECT = 'H' THEN
										1
									ELSE
										CASE WHEN X.SIZE_PROJECT = 'M' THEN
											2
										ELSE
											CASE WHEN X.SIZE_PROJECT = 'L' THEN
												3
											ELSE
												CASE WHEN ($P{AmtBig}*1) <= 0 THEN
													CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
												ELSE
													CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}*1) THEN 3
													ELSE
														CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
													END
												END
											END
										END
									END AS GROUP_NO
								,	CASE	WHEN X.SIZE_PROJECT = 'H' THEN 'P1'
											WHEN X.SIZE_PROJECT = 'M' THEN 'P2'
											ELSE 'P3'
									END AS GROUP_PIPELINE
								,	SUM(X.AMOUNT_S2) AS AMOUNT
						FROM	(
									SELECT	MAD.COMPANY
											,MAD.SALES_CODE
											,MAD.CABANG
											,MAD.CUSTOMER
											,MAD.CUSTOMER_REAL
											,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
											,MAD.POTENSIAL_PROJECT
											,MAD.SPV_BY
											,MAD.ITEM
											,MAD.ITEM_CAT
											,MAD.HW_PS
											,ROUND((
												CASE WHEN MAD.JML_TAHUN <> 0 THEN
													CASE WHEN  MAD.EST_Q = 1234 THEN
														((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
													ELSE
														CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE 0
														END
													END
												ELSE
													(MAD.UNIT_PRICE * MAD.QTY_OUT)
												END
												/ 1000000 ),2) AS AMOUNT
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S1
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S2
											,MAD.DIM_PRINCIPAL
											,MAD.EST_YEAR
									FROM	(
												SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
														,SOH.[Salesperson Code] AS SALES_CODE
														,SOH.[Responsibility Center] AS CABANG
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																'*) '+SOH.[Sell-to Customer Name]
															ELSE
																SOH.[Sell-to Customer Name]
															END AS CUSTOMER
														,	SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
														, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																SUBSTRING(SOH.[Posting Description], 1,1)
															ELSE
																CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
															END AS SIZE_PROJECT
														, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
														,SOH.[Sell-to County] AS SPV_BY
														,SOL.[No_] AS ITEM
														,SOL.[Description] AS ITEM_DESC
														,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
														,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
														,SOL.[Quantity] AS QTY_OUT
														,SOL.[Unit Price] AS UNIT_PRICE
														,DIMD.DIM_PRINCIPAL
														,SOH.[Payment Discount _] AS JML_TAHUN
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																			$P{Tahun}
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																			$P{Tahun}
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_YEAR
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, GETDATE()) < $P{Tahun} THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, GETDATE()) = $P{Tahun} THEN
																				CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																						WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																						WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																				 WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																				 WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < $P{Tahun} THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = $P{Tahun} THEN
																				CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(quarter, GETDATE())
																ELSE
																	DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_Q
												FROM [dbo].[AUTOJAYA$Sales Header] SOH
												INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
												LEFT JOIN	(
																SELECT X.[Dimension Set ID]
																	  ,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																FROM [dbo].[AUTOJAYA$Dimension Set Entry] X
																GROUP BY [Dimension Set ID]
															) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
												WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
											) MAD
								) X
						LEFT JOIN [dbo].[AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
						LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
						LEFT JOIN	(
										SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
										FROM	(
													SELECT	MAD.CUSTOMER_REAL
															,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
															,MAD.EST_YEAR
													FROM	(
																SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																		, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																				SUBSTRING(SOH.[Posting Description], 1,1)
																			ELSE
																				CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																			END AS SIZE_PROJECT
																		,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > $P{Tahun} THEN
																						CASE WHEN DATEPART(year, GETDATE()) <= $P{Tahun} THEN
																							$P{Tahun}
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = $P{Tahun} THEN
																							CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE $P{Tahun} END
																						ELSE
																							0
																						END
																					END
																				ELSE
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > $P{Tahun} THEN
																						CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= $P{Tahun} THEN
																							$P{Tahun}
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = $P{Tahun} THEN
																							CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE $P{Tahun} END
																						ELSE
																							0
																						END
																					END
																				END
																			ELSE
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																				END
																			END AS EST_YEAR
																FROM [dbo].[AUTOJAYA$Sales Header] SOH
																INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
															) MAD
												) X
										WHERE	X.EST_YEAR = $P{Tahun}
												AND X.SIZE_PROJECT IN ('M', 'H')
									) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER_REAL
						WHERE	X.EST_YEAR = $P{Tahun}
								AND SLS.[Global Dimension 1 Code] IS NOT NULL
						GROUP BY CAB.[Name]
								,X.SALES_CODE
								,X.CUSTOMER
								,X.CUSTOMER_REAL
								,X.SIZE_PROJECT
								,SLS.[Global Dimension 1 Code]
					) X1
			GROUP BY X1.CUSTOMER
					,X1.BRANCHES_NAME
					,X1.SPV_BY
					,X1.SALES_CODE
					,X1.BRANCHES
					,X1.GROUP_PIPELINE
		) XI
WHERE (XI.SPV_BY LIKE '%'+$P{SpvBy}+'%' OR $P{SpvBy} = 'ALL')
GROUP BY XI.SUBGROUP_NO
		,XI.GROUP_DESC
UNION ALL
SELECT	3 AS GR_CRNXY
		,CASE WHEN DATEPART(month, GETDATE()) IN (5,6) THEN 7 ELSE 5 END AS GROUP_NO
		, 'TOTAL Weighted PIPELINE SEMESTER I '+CONVERT(VARCHAR(4),($P{Tahun} +1)) AS GROUP_DESC
		,'PL' GROUP_ITEM_CAT
		,XI.GROUP_DESC AS ITEM_CAT
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_HO) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_HO) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_HO) * ($P{weightL}/100)
				ELSE 0 END AS AMT_HO
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SBY) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SBY) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SBY) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SBY
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_DPS) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_DPS) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_DPS) * ($P{weightL}/100)
				ELSE 0 END AS AMT_DPS
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_CKR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_CKR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_CKR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_CKR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN SUM(XI.AMT_SMR) * ($P{weightH}/100)
				WHEN XI.SUBGROUP_NO = 2 THEN SUM(XI.AMT_SMR) * ($P{weightM}/100)
				WHEN XI.SUBGROUP_NO = 3 THEN SUM(XI.AMT_SMR) * ($P{weightL}/100)
				ELSE 0 END AS AMT_SMR
		, CASE	WHEN XI.SUBGROUP_NO = 1 THEN	(SUM(XI.AMT_HO) * ($P{weightH}/100)) + (SUM(XI.AMT_SBY) * ($P{weightH}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightH}/100)) + (SUM(XI.AMT_CKR) * ($P{weightH}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightH}/100))
				WHEN XI.SUBGROUP_NO = 2 THEN	(SUM(XI.AMT_HO) * ($P{weightM}/100)) + (SUM(XI.AMT_SBY) * ($P{weightM}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightM}/100)) + (SUM(XI.AMT_CKR) * ($P{weightM}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightM}/100))
				WHEN XI.SUBGROUP_NO = 3 THEN	(SUM(XI.AMT_HO) * ($P{weightL}/100)) + (SUM(XI.AMT_SBY) * ($P{weightL}/100)) +
												(SUM(XI.AMT_DPS) * ($P{weightL}/100)) + (SUM(XI.AMT_CKR) * ($P{weightL}/100)) +
												(SUM(XI.AMT_SMR) * ($P{weightL}/100))
				ELSE 0 END AS TOTAL		, 0 AS AMT_TARGET
		, '' AS LBL_TARGET
		, 2 AS SEMESTER
FROM	(
			SELECT	MIN(X1.GROUP_NO) AS SUBGROUP_NO
					,X1.GROUP_PIPELINE
					,	CASE	WHEN MIN(X1.GROUP_NO) =  1 THEN	'1. Weighted PIPELINE (H) '
								WHEN MIN(X1.GROUP_NO) =  2 THEN	'2. Weighted PIPELINE (M)'
								WHEN MIN(X1.GROUP_NO) =  3 THEN	'3. Weighted PIPELINE (L)'
								ELSE '4. Weighted PIPELINE (R)'
						END AS GROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) = 1 THEN
							'HIGH POTENTIAL (H)'
						ELSE
							CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.CUSTOMER ELSE X1.BRANCHES_NAME END
						END AS SUBGROUP_DESC
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SPV_BY ELSE '' END AS SPV_BY
					,	CASE WHEN MIN(X1.GROUP_NO) <> 4 THEN X1.SALES_CODE ELSE '' END AS SALES_CODE
					, CASE WHEN X1.BRANCHES = '10' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_HO
					, CASE WHEN X1.BRANCHES = '15' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SBY
					, CASE WHEN X1.BRANCHES = '19' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_DPS
					, CASE WHEN X1.BRANCHES = '16' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_CKR
					, CASE WHEN X1.BRANCHES = '17' THEN SUM(X1.AMOUNT) ELSE 0 END AS AMT_SMR
			FROM	(
						SELECT	SLS.[Global Dimension 1 Code] AS BRANCHES
								, CAB.[Name] AS BRANCHES_NAME
								, X.SALES_CODE
								, X.CUSTOMER
								, X.CUSTOMER_REAL
								, MAX(MAX(X.SPV_BY)) OVER (PARTITION BY X.CUSTOMER_REAL, CAB.[Name]) AS SPV_BY
								,	CASE WHEN X.SIZE_PROJECT = 'H' THEN
										1
									ELSE
										CASE WHEN X.SIZE_PROJECT = 'M' THEN
											2
										ELSE
											CASE WHEN X.SIZE_PROJECT = 'L' THEN
												3
											ELSE
												CASE WHEN ($P{AmtBig}*1) <= 0 THEN
													CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
												ELSE
													CASE WHEN SUM(X.AMOUNT) >= ($P{AmtBig}*1) THEN 3
													ELSE
														CASE WHEN SUM(ISNULL(CUST.ADA,0)) > 0 THEN 3 ELSE 4 END
													END
												END
											END
										END
									END AS GROUP_NO
								,	CASE	WHEN X.SIZE_PROJECT = 'H' THEN 'P1'
											WHEN X.SIZE_PROJECT = 'M' THEN 'P2'
											ELSE 'P3'
									END AS GROUP_PIPELINE
								,	SUM(X.AMOUNT_S1) AS AMOUNT
						FROM	(
									SELECT	MAD.COMPANY
											,MAD.SALES_CODE
											,MAD.CABANG
											,MAD.CUSTOMER
											,MAD.CUSTOMER_REAL
											,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
											,MAD.POTENSIAL_PROJECT
											,MAD.SPV_BY
											,MAD.ITEM
											,MAD.ITEM_CAT
											,MAD.HW_PS
											,ROUND((
												CASE WHEN MAD.JML_TAHUN <> 0 THEN
													CASE WHEN  MAD.EST_Q = 1234 THEN
														((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN)
													ELSE
														CASE	WHEN MAD.EST_Q IN (123, 234) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4) * 3
																WHEN MAD.EST_Q IN (12, 34) THEN ((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 2
																WHEN MAD.EST_Q IN (1,2,3,4) THEN (((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE 0
														END
													END
												ELSE
													(MAD.UNIT_PRICE * MAD.QTY_OUT)
												END
												/ 1000000 ),2) AS AMOUNT
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (1, 1234, 123, 12) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (2, 1234, 123, 12, 234) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S1
											,	ROUND(((
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (3, 1234, 123, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
															+
															CASE WHEN MAD.JML_TAHUN <> 0 THEN
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN
																	(((MAD.UNIT_PRICE * MAD.QTY_OUT) / MAD.JML_TAHUN) / 4)
																ELSE
																	0
																END
															ELSE
																CASE WHEN MAD.EST_Q IN (4, 1234, 234, 34) THEN (MAD.UNIT_PRICE * MAD.QTY_OUT) ELSE 0 END
															END
												) / 1000000) ,2) AS AMOUNT_S2
											,MAD.DIM_PRINCIPAL
											,MAD.EST_YEAR
									FROM	(
												SELECT	CASE WHEN SOH.[No_ Series] = 'SBOM' THEN 'AJ' ELSE 'SP' END AS COMPANY
														,SOH.[Salesperson Code] AS SALES_CODE
														,SOH.[Responsibility Center] AS CABANG
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																'*) '+SOH.[Sell-to Customer Name]
															ELSE
																SOH.[Sell-to Customer Name]
															END AS CUSTOMER
														,	SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
														, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																SUBSTRING(SOH.[Posting Description], 1,1)
															ELSE
																CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
															END AS SIZE_PROJECT
														, CASE WHEN SUBSTRING(SOH.[Posting Description], 2,1) NOT IN ('1','0') THEN '0' ELSE SUBSTRING(SOH.[Posting Description], 2,1) END AS POTENSIAL_PROJECT
														,SOH.[Sell-to County] AS SPV_BY
														,SOL.[No_] AS ITEM
														,SOL.[Description] AS ITEM_DESC
														,SOL.[Shortcut Dimension 2 Code] AS ITEM_CAT
														,SUBSTRING(SOL.[Shortcut Dimension 2 Code] , 1,2) AS HW_PS
														,SOL.[Quantity] AS QTY_OUT
														,SOL.[Unit Price] AS UNIT_PRICE
														,DIMD.DIM_PRINCIPAL
														,SOH.[Payment Discount _] AS JML_TAHUN
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > ($P{Tahun} +1) THEN
																		CASE WHEN DATEPART(year, GETDATE()) <= ($P{Tahun} +1) THEN
																			($P{Tahun} +1)
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = ($P{Tahun} +1) THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE ($P{Tahun} +1) END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > ($P{Tahun} +1) THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= ($P{Tahun} +1) THEN
																			($P{Tahun} +1)
																		ELSE
																			0
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = ($P{Tahun} +1) THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE ($P{Tahun} +1) END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_YEAR
														,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > ($P{Tahun} +1) THEN
																		CASE WHEN DATEPART(year, GETDATE()) < ($P{Tahun} +1) THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, GETDATE()) = ($P{Tahun} +1) THEN
																				CASE	WHEN DATEPART(quarter, GETDATE()) = 1 THEN 1234
																						WHEN DATEPART(quarter, GETDATE()) = 2 THEN 234
																						WHEN DATEPART(quarter, GETDATE()) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = ($P{Tahun} +1) THEN
																			CASE WHEN DATEPART(quarter, GETDATE()) = 1 THEN 0
																				 WHEN DATEPART(quarter, GETDATE()) = 2 THEN 1
																				 WHEN DATEPART(quarter, GETDATE()) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																ELSE
																	CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > ($P{Tahun} +1) THEN
																		CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) < ($P{Tahun} +1) THEN
																			1234
																		ELSE
																			CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = ($P{Tahun} +1) THEN
																				CASE	WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 1234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 234
																						WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 34
																						ELSE 4
																				END
																			ELSE
																				0
																			END
																		END
																	ELSE
																		CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = ($P{Tahun} +1) THEN
																			CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 1 THEN 0
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 2 THEN 1
																				 WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) = 3 THEN 12
																				 ELSE 123
																			END
																		ELSE
																			0
																		END
																	END
																END
															ELSE
																CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																	DATEPART(quarter, GETDATE())
																ELSE
																	DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																END
															END AS EST_Q
												FROM [dbo].[AUTOJAYA$Sales Header] SOH
												INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
												LEFT JOIN	(
																SELECT X.[Dimension Set ID]
																	  ,MAX(CASE WHEN X.[Dimension Code] = 'PRINCIPAL' THEN X.[Dimension Value Code] ELSE NULL END) AS DIM_PRINCIPAL
																FROM [dbo].[AUTOJAYA$Dimension Set Entry] X
																GROUP BY [Dimension Set ID]
															) DIMD ON DIMD.[Dimension Set ID] = SOL.[Dimension Set ID]
												WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
											) MAD
								) X
						LEFT JOIN [dbo].[AUTOJAYA$Salesperson_Purchaser] SLS ON SLS.[Code] = X.SALES_CODE
						LEFT JOIN [dbo].[AUTOJAYA$Responsibility Center] CAB ON CAB.[Code] = SLS.[Global Dimension 1 Code]
						LEFT JOIN	(
										SELECT	 DISTINCT  X.CUSTOMER_REAL, 1 AS ADA
										FROM	(
													SELECT	MAD.CUSTOMER_REAL
															,UPPER(MAD.SIZE_PROJECT) AS SIZE_PROJECT
															,MAD.EST_YEAR
													FROM	(
																SELECT		SOH.[Sell-to Customer Name] AS CUSTOMER_REAL
																		, 	CASE WHEN SOL.[Warranty Code] = '' THEN
																				SUBSTRING(SOH.[Posting Description], 1,1)
																			ELSE
																				CASE WHEN SOL.[Warranty Code] = 'CLOSED' THEN 'H' ELSE SUBSTRING(SOH.[Posting Description], 1,1) END
																			END AS SIZE_PROJECT
																		,	CASE WHEN SOH.[Payment Discount _] <> 0 THEN
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) > ($P{Tahun} +1) THEN
																						CASE WHEN DATEPART(year, GETDATE()) <= ($P{Tahun} +1) THEN
																							($P{Tahun} +1)
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], GETDATE()) - 1)) = ($P{Tahun} +1) THEN
																							CASE WHEN DATEPART(quarter, GETDATE()) IN (1,2) THEN 0 ELSE ($P{Tahun} +1) END
																						ELSE
																							0
																						END
																					END
																				ELSE
																					CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) > ($P{Tahun} +1) THEN
																						CASE WHEN DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) <= ($P{Tahun} +1) THEN
																							($P{Tahun} +1)
																						ELSE
																							0
																						END
																					ELSE
																						CASE WHEN DATEPART(year,(DATEADD(year, SOH.[Payment Discount _], DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) - 1)) = ($P{Tahun} +1) THEN
																							CASE WHEN DATEPART(quarter, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date])) IN (1,2) THEN 0 ELSE ($P{Tahun} +1) END
																						ELSE
																							0
																						END
																					END
																				END
																			ELSE
																				CASE WHEN DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]) <=  GETDATE() THEN
																					DATEPART(year, GETDATE()) ELSE DATEPART(year, DATEADD(MONTH, (6-$P{Sem1Akhir}) , SOL.[Shipment Date]))
																				END
																			END AS EST_YEAR
																FROM [dbo].[AUTOJAYA$Sales Header] SOH
																INNER JOIN [dbo].[AUTOJAYA$Sales Line] SOL ON SOL.[Document Type] = SOH.[Document Type] AND SOL.[Document No_] = SOH.[No_]
																WHERE SOH.[No_ Series] IN ('SBOM', 'SBOMS')
															) MAD
												) X
										WHERE	X.EST_YEAR = ($P{Tahun} +1)
												AND X.SIZE_PROJECT IN ('M', 'H')
									) CUST ON CUST.CUSTOMER_REAL = X.CUSTOMER_REAL
						WHERE	X.EST_YEAR = ($P{Tahun} +1)
								AND SLS.[Global Dimension 1 Code] IS NOT NULL
						GROUP BY CAB.[Name]
								,X.SALES_CODE
								,X.CUSTOMER
								,X.CUSTOMER_REAL
								,X.SIZE_PROJECT
								,SLS.[Global Dimension 1 Code]
					) X1
			GROUP BY X1.CUSTOMER
					,X1.BRANCHES_NAME
					,X1.SPV_BY
					,X1.SALES_CODE
					,X1.BRANCHES
					,X1.GROUP_PIPELINE
		) XI
WHERE (XI.SPV_BY LIKE '%'+$P{SpvBy}+'%' OR $P{SpvBy} = 'ALL')
		AND XI.SUBGROUP_NO <> 4
GROUP BY XI.SUBGROUP_NO
		,XI.GROUP_DESC
		) NSEM
WHERE NSEM.SEMESTER = CASE WHEN	DATEPART(quarter, GETDATE()) IN (1,2) THEN 1 ELSE 2 END]]>
	</queryString>
	<field name="GR_CRNXY" class="java.lang.Integer"/>
	<field name="GROUP_NO" class="java.lang.Integer"/>
	<field name="GROUP_DESC" class="java.lang.String"/>
	<field name="GROUP_ITEM_CAT" class="java.lang.String"/>
	<field name="ITEM_CAT" class="java.lang.String"/>
	<field name="AMT_HO" class="java.math.BigDecimal"/>
	<field name="AMT_SBY" class="java.math.BigDecimal"/>
	<field name="AMT_DPS" class="java.math.BigDecimal"/>
	<field name="AMT_CKR" class="java.math.BigDecimal"/>
	<field name="AMT_SMR" class="java.math.BigDecimal"/>
	<field name="TOTAL" class="java.math.BigDecimal"/>
	<field name="AMT_TARGET" class="java.math.BigDecimal"/>
	<field name="LBL_TARGET" class="java.lang.String"/>
	<sortField name="GR_CRNXY"/>
	<sortField name="GROUP_NO"/>
	<sortField name="GROUP_ITEM_CAT"/>
	<sortField name="ITEM_CAT"/>
	<variable name="TOTAL_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<variable name="AMT_HO_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_HO}]]></variableExpression>
	</variable>
	<variable name="AMT_SBY_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SBY}]]></variableExpression>
	</variable>
	<variable name="AMT_DPS_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_DPS}]]></variableExpression>
	</variable>
	<variable name="AMT_CKR_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_CKR}]]></variableExpression>
	</variable>
	<variable name="AMT_SMR_1" class="java.math.BigDecimal" resetType="Group" resetGroup="NoGroup" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SMR}]]></variableExpression>
	</variable>
	<variable name="TOTAL_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<variable name="AMT_HO_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_HO}]]></variableExpression>
	</variable>
	<variable name="AMT_SBY_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SBY}]]></variableExpression>
	</variable>
	<variable name="AMT_DPS_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_DPS}]]></variableExpression>
	</variable>
	<variable name="AMT_CKR_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_CKR}]]></variableExpression>
	</variable>
	<variable name="AMT_SMR_2" class="java.math.BigDecimal" resetType="Group" resetGroup="ItemCategory" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SMR}]]></variableExpression>
	</variable>
	<variable name="TOTAL_3" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<variable name="Balance" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$V{TOTAL_3} - $F{AMT_TARGET}]]></variableExpression>
		<initialValueExpression><![CDATA[$V{TOTAL_3} - $F{AMT_TARGET}]]></initialValueExpression>
	</variable>
	<variable name="AMT_HO_3" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_HO}]]></variableExpression>
	</variable>
	<variable name="AMT_SBY_3" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SBY}]]></variableExpression>
	</variable>
	<variable name="AMT_DPS_3" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_DPS}]]></variableExpression>
	</variable>
	<variable name="AMT_CKR_3" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_CKR}]]></variableExpression>
	</variable>
	<variable name="AMT_SMR_3" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{AMT_SMR}]]></variableExpression>
	</variable>
	<variable name="TOTAL_4" class="java.math.BigDecimal" resetType="Group" resetGroup="CRNX" calculation="Sum">
		<variableExpression><![CDATA[$F{TOTAL}]]></variableExpression>
	</variable>
	<variable name="pcnHO" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_HO_3} / $V{TOTAL_4})  : 0 )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_HO_3} / $V{TOTAL_4})  : 0 )]]></initialValueExpression>
	</variable>
	<variable name="pcnSBY" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_SBY_3} / $V{TOTAL_4})  : 0 )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_SBY_3} / $V{TOTAL_4})  : 0 )]]></initialValueExpression>
	</variable>
	<variable name="pcnDPS" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_DPS_3} / $V{TOTAL_4})  : 0 )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_DPS_3} / $V{TOTAL_4})  : 0 )]]></initialValueExpression>
	</variable>
	<variable name="pcnCKR" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_CKR_3} / $V{TOTAL_4})  : 0 )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_CKR_3} / $V{TOTAL_4})  : 0 )]]></initialValueExpression>
	</variable>
	<variable name="pcnSMR" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_SMR_3} / $V{TOTAL_4})  : 0 )]]></variableExpression>
		<initialValueExpression><![CDATA[( $V{TOTAL_4} != 0 ? ($V{AMT_SMR_3} / $V{TOTAL_4})  : 0 )]]></initialValueExpression>
	</variable>
	<variable name="vSemester" class="java.lang.String">
		<variableExpression><![CDATA[( $P{Sem1Akhir} == 1 ? "JANUARI" : ( $P{Sem1Akhir} == 2 ? "FEBRUARI" : ( $P{Sem1Akhir} == 3 ? "MARET" : ( $P{Sem1Akhir} == 4 ? "APRIL" : ( $P{Sem1Akhir} == 5 ? "MEI" : ( $P{Sem1Akhir} == 6 ? "JUNI" : ( $P{Sem1Akhir} == 7 ? "JULI" : ( $P{Sem1Akhir} == 8 ? "AGUSTUS" : ( $P{Sem1Akhir} == 9 ? "SEPTEMBER" : ( $P{Sem1Akhir} == 10 ? "OKTOBER" : ( $P{Sem1Akhir} == 11 ? "NOVEMBER" : "DESEMBER" )))))))))))]]></variableExpression>
		<initialValueExpression><![CDATA[( $P{Sem1Akhir} == 1 ? "JANUARI" : ( $P{Sem1Akhir} == 2 ? "FEBRUARI" : ( $P{Sem1Akhir} == 3 ? "MARET" : ( $P{Sem1Akhir} == 4 ? "APRIL" : ( $P{Sem1Akhir} == 5 ? "MEI" : ( $P{Sem1Akhir} == 6 ? "JUNI" : ( $P{Sem1Akhir} == 7 ? "JULI" : ( $P{Sem1Akhir} == 8 ? "AGUSTUS" : ( $P{Sem1Akhir} == 9 ? "SEPTEMBER" : ( $P{Sem1Akhir} == 10 ? "OKTOBER" : ( $P{Sem1Akhir} == 11 ? "NOVEMBER" : "DESEMBER" )))))))))))]]></initialValueExpression>
	</variable>
	<group name="CRNX">
		<groupExpression><![CDATA[$F{GR_CRNXY}]]></groupExpression>
		<groupFooter>
			<band height="29">
				<printWhenExpression><![CDATA[$F{GR_CRNXY} == 1]]></printWhenExpression>
				<staticText>
					<reportElement x="8" y="1" width="25" height="14" uuid="37e1fd62-62bf-42d2-9519-0fb60efabe29"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="33" y="1" width="200" height="14" uuid="46144eb2-f3ae-40a9-ad44-021486471b8d"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[Grand Total]]></text>
				</staticText>
				<staticText>
					<reportElement x="252" y="1" width="65" height="14" uuid="0a5b8fdb-ffa1-4d65-8347-1ff785c20a5d"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="233" y="1" width="19" height="14" uuid="86f7d565-d678-4fef-bd52-a96ce391c124"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="416" y="1" width="19" height="14" uuid="d4a111ee-8231-4cc1-9298-1eef5fcbeb08"/>
					<textElement>
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Rp.]]></text>
				</staticText>
				<textField pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="435" y="1" width="65" height="14" uuid="96074e3e-061d-42e0-9ef1-de1fc51909a8"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{TOTAL_3}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="336" y="1" width="80" height="14" uuid="0f533d4d-8340-40c4-986e-ad11ed5645e8"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="317" y="1" width="19" height="14" uuid="4667906b-da18-4549-b4cb-c6bae2b39abc"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="500" y="1" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="87429a4c-2b86-40b2-9330-e1b1096c3617"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_HO_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="565" y="1" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="7e0244e4-cf5d-4956-8677-320782805f6b"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SBY_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="1" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="db21eeb0-cf29-467a-bd9c-8dcb347d62f4"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_DPS_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="695" y="1" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="9525f985-181b-4721-a24b-349901a69a7d"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_CKR_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="760" y="1" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="51fa5d57-382a-45d1-b322-19cbedc24300"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SMR_3}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="8" y="15" width="25" height="14" uuid="de779830-7c63-4855-b8b1-906e0fb46e36"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
			<band height="28">
				<printWhenExpression><![CDATA[$F{GR_CRNXY} == 2 || $F{GR_CRNXY} == 3]]></printWhenExpression>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="565" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="11bfa906-2182-4750-ab53-e749245a4b7c"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SBY_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="695" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="25b370a1-7f76-4410-bbf0-8f443f18735f"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_CKR_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="760" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="2e8bea1d-cf10-4dba-aaa1-c70731286b81"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SMR_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="500" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="7896843d-3ffc-4d27-bee6-f25e17bd7b73"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_HO_3}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="ddbecd15-8714-46e2-8800-b0874585b3a5"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_DPS_3}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="8" y="0" width="25" height="14" uuid="9aa02f6c-ad99-4ecc-a057-d4bceb571348"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="252" y="0" width="65" height="14" uuid="95d61850-e88d-42bc-a643-89eae63ca238"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="233" y="0" width="19" height="14" uuid="6d87081c-9449-4034-b592-ce8d7f870731"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="33" y="0" width="200" height="14" uuid="fb46be62-c875-4089-8618-ce22118745ba"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="317" y="0" width="118" height="14" uuid="ab61fb0c-a4a8-4164-b534-e9965727803b"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[TOTAL Weighted PIPELINE]]></text>
				</staticText>
				<textField isStretchWithOverflow="true" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="435" y="0" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="30c87555-ac46-4daf-951e-42275b9f02e5"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{TOTAL_4}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
					<reportElement x="500" y="14" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="6d8c0786-c194-4366-9603-066941910a3a"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{pcnHO}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
					<reportElement x="565" y="14" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="8499c9d5-673b-4516-8750-a19d596f599f"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{pcnSBY}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
					<reportElement x="630" y="14" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="d1fd362d-234c-4ce0-930e-330c2c4eb304"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{pcnDPS}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
					<reportElement x="695" y="14" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="ca12f54c-0d09-4f52-a471-36105402b275"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{pcnCKR}]]></textFieldExpression>
				</textField>
				<textField isStretchWithOverflow="true" pattern="#,##0.00%" isBlankWhenNull="true">
					<reportElement x="760" y="14" width="65" height="14" isPrintWhenDetailOverflows="true" uuid="02680548-9a4c-4410-a2dc-6cf11f993afe"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{pcnSMR}]]></textFieldExpression>
				</textField>
			</band>
		</groupFooter>
	</group>
	<group name="NoGroup">
		<groupExpression><![CDATA[$F{GROUP_NO}]]></groupExpression>
		<groupHeader>
			<band height="15">
				<printWhenExpression><![CDATA[$F{GR_CRNXY} == 1]]></printWhenExpression>
				<textField isBlankWhenNull="true">
					<reportElement x="8" y="1" width="25" height="14" uuid="bf99114e-0c64-45d3-b5ef-1f9831441711"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_NO}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="33" y="1" width="200" height="14" uuid="5df2e85c-a37d-459b-9cd5-c2670eb41267"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_DESC}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="435" y="1" width="65" height="14" uuid="14fde8d7-c8ce-4ae7-aaf4-202bef421b3a"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{TOTAL_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="500" y="1" width="65" height="14" uuid="f908eebc-2cfd-4762-8b06-15e57559a5bb"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_HO_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="565" y="1" width="65" height="14" uuid="5ca983bd-3357-4656-bdd4-57a1132974d1"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SBY_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="1" width="65" height="14" uuid="d014ca11-0c7a-4557-8cae-6e67d0c251dd"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_DPS_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="695" y="1" width="65" height="14" uuid="f32b1267-c5e0-4673-84f8-2596cbf956a8"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_CKR_1}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="NoGroup" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="760" y="1" width="65" height="14" uuid="1fba4753-54e1-412a-97ef-2a188dc12606"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SMR_1}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="416" y="1" width="19" height="14" uuid="04d08705-78bd-44dc-bf00-1cbd68b4c719"/>
					<textElement>
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Rp.]]></text>
				</staticText>
				<staticText>
					<reportElement x="252" y="1" width="65" height="14" uuid="5ed29b7c-0532-4c3d-8ef9-7870d2cdbb09"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="233" y="1" width="19" height="14" uuid="56e3a221-d0dc-41c3-9c3d-657935dba6fe"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="317" y="1" width="19" height="14" uuid="bbea3352-0edd-4305-9d2b-be51bedaba7f"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="336" y="1" width="80" height="14" uuid="e9a2ebfa-1d54-4a4d-8392-b68a08b58b23"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
			<band height="14">
				<printWhenExpression><![CDATA[$F{GR_CRNXY} == 2 || $F{GR_CRNXY} == 3]]></printWhenExpression>
				<staticText>
					<reportElement x="252" y="0" width="65" height="14" uuid="df931cae-7f24-435e-9908-82e1968af677"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isBlankWhenNull="true">
					<reportElement x="8" y="0" width="25" height="14" uuid="8340cfee-3850-43d1-b3f1-3d7ca4643183"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_NO}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="336" y="0" width="65" height="14" uuid="fba51a20-d14a-43a0-b312-b55eddace039"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="317" y="0" width="19" height="14" uuid="2fb45828-d7c1-4ea1-90a7-cf199331f02c"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="233" y="0" width="19" height="14" uuid="410a6e11-888f-417d-8013-4eef9e6ce535"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<textField>
					<reportElement x="33" y="0" width="200" height="14" uuid="84d7f294-70b8-4dac-bcbe-799b679ece9c"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_DESC}]]></textFieldExpression>
				</textField>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="15">
				<staticText>
					<reportElement x="8" y="1" width="25" height="14" uuid="2795654d-59f2-4a20-a507-d86edf296cc0"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupFooter>
	</group>
	<group name="ItemCategory">
		<groupExpression><![CDATA[$F{GROUP_ITEM_CAT}]]></groupExpression>
		<groupHeader>
			<band height="15">
				<printWhenExpression><![CDATA[$F{GROUP_NO}==1]]></printWhenExpression>
				<textField>
					<reportElement x="33" y="1" width="200" height="14" uuid="ca67c068-8103-40b8-8287-dfdae4f5db8e"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<textFieldExpression><![CDATA[$F{GROUP_ITEM_CAT}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="336" y="1" width="80" height="14" uuid="f657d473-9539-4672-8517-7637ad68de7a"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{TOTAL_2}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="500" y="1" width="65" height="14" uuid="28f28021-352a-4272-ad84-37c8ab8a5c4d"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_HO_2}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="565" y="1" width="65" height="14" uuid="1510b3cc-779c-4ca1-963c-92d149e57995"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SBY_2}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="630" y="1" width="65" height="14" uuid="27227a75-e528-4656-996d-546b5a4e065e"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_DPS_2}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="695" y="1" width="65" height="14" uuid="2484bcba-f8fe-4385-a39f-38d9c2b682b1"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_CKR_2}]]></textFieldExpression>
				</textField>
				<textField evaluationTime="Group" evaluationGroup="ItemCategory" pattern="#,##0.00" isBlankWhenNull="true">
					<reportElement x="760" y="1" width="65" height="14" uuid="fae024c0-04ec-4cd1-af93-e255003f4504"/>
					<textElement textAlignment="Right">
						<font size="8" isBold="true"/>
					</textElement>
					<textFieldExpression><![CDATA[$V{AMT_SMR_2}]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement x="8" y="1" width="25" height="14" uuid="001be3fa-e44e-4650-9364-904ee5515293"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="233" y="1" width="19" height="14" uuid="72ba31af-c88c-4a96-869e-429014a934a9"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="252" y="1" width="65" height="14" uuid="891cbd11-0d08-4277-962c-488c7d4b17eb"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="317" y="1" width="19" height="14" uuid="ed31df5a-922e-4995-ad06-9c147e3b8aeb"/>
					<textElement>
						<font size="8" isBold="true"/>
					</textElement>
					<text><![CDATA[Rp.]]></text>
				</staticText>
				<staticText>
					<reportElement x="435" y="1" width="65" height="14" uuid="38294768-7e98-4728-8e0c-d58d6009c057"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
				<staticText>
					<reportElement x="416" y="1" width="19" height="14" uuid="24f5bcb8-56cc-48f9-a098-099f31993f44"/>
					<textElement>
						<font size="8"/>
					</textElement>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupHeader>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band height="168" splitType="Stretch">
			<staticText>
				<reportElement x="8" y="154" width="25" height="14" uuid="1a0a7d66-4dc0-4ec8-93c3-d8c90d44153b"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[No]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="154" width="84" height="14" uuid="bc0b5f21-bd58-4128-90d9-0da9bfd247a3"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Value (Million Rp.)]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="0" width="383" height="14" uuid="b3e39015-60b7-4554-84b0-56f951c68c37"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04047-07) FORECAST SALES ACS]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="154" width="383" height="14" uuid="f47a3c22-aad1-4ef8-8762-fa524640460e"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Keterangan]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="154" width="65" height="14" uuid="1818ba43-b204-4c76-88c0-362881d0c1b4"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[HO]]></text>
			</staticText>
			<staticText>
				<reportElement x="565" y="154" width="65" height="14" uuid="ca2ce7ef-7660-4370-879c-0101315383f6"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SBY]]></text>
			</staticText>
			<staticText>
				<reportElement x="630" y="154" width="65" height="14" uuid="5e5ceff5-de3a-4cc9-a8c6-01c7ce8522f9"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[DPS]]></text>
			</staticText>
			<staticText>
				<reportElement x="695" y="154" width="65" height="14" uuid="798b8235-df28-4de8-9158-3bf2fbfb4099"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[CKR]]></text>
			</staticText>
			<staticText>
				<reportElement x="760" y="154" width="65" height="14" uuid="87d55bb2-fb68-4e60-95e4-8bfdf7f67cc9"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SMR]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="0" width="25" height="14" uuid="b6311f09-282d-4eb9-8e70-a658e3f827b1"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="98" width="19" height="14" uuid="2c8993c4-c594-4131-b830-1c781795b679"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="14" width="200" height="14" uuid="e73ab09c-35b9-4d87-95e8-bde98ac23b43"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Jenis Laporan]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="112" width="200" height="14" uuid="caa9aa57-5164-4aac-840d-23b57803f7d4"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="252" y="56" width="164" height="14" uuid="e55a110e-6b48-4cfa-818a-083ab549d6a0"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemester}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="233" y="14" width="19" height="14" uuid="11ff6e42-cf1f-455a-b620-fb9cf9e93964"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="252" y="70" width="164" height="14" uuid="1a801159-5910-4a00-8837-1d1e1da36d40"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtBig}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="252" y="28" width="164" height="14" uuid="a724a583-2652-48b2-a386-09522d5a48df"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Tahun}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="233" y="56" width="19" height="14" uuid="031b14c4-8183-4892-b234-28b267eccba6"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="42" width="200" height="14" uuid="200b89a9-b553-44b7-a739-09f886913bec"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tgl. Cut-off Sales Revenue]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="56" width="200" height="14" uuid="8e500d9e-0584-48ed-93be-fae92e6f0d46"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Akhir Semester I]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="84" width="19" height="14" uuid="e2122772-5a48-44d4-afcb-210223533c32"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="252" y="14" width="164" height="14" uuid="8de4b4e7-aa9e-45c7-967c-0e3306ec6f8f"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Summary By Branch]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy" isBlankWhenNull="true">
				<reportElement x="252" y="42" width="164" height="14" uuid="09e8c073-f33c-404c-b8e2-28aeeabc67c1"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglUpto}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="233" y="42" width="19" height="14" uuid="5da16fa6-4ac6-48d4-a41b-acae8b27d924"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="126" width="200" height="14" uuid="9d73d488-3763-4bba-ab85-01edcb4b4295"/>
				<textElement>
					<font size="8" isBold="true" isItalic="true"/>
				</textElement>
				<text><![CDATA[Note : Amount in million (1,000,000)]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="70" width="200" height="14" uuid="887a5874-bc8c-4f57-a072-ac8103a7b401"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Amt Big Project]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="98" width="200" height="14" uuid="25693262-5252-49e8-a9f6-242d674c2d76"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Printed on]]></text>
			</staticText>
			<textField>
				<reportElement x="252" y="84" width="164" height="14" uuid="19a52c76-2847-42a0-8437-b6eaf3b28510"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{SpvBy}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="233" y="70" width="19" height="14" uuid="59ae4f78-fae7-471f-865d-dff4b56c9044"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="28" width="200" height="14" uuid="30d1ce6c-065b-46dd-8ba2-ed667d9542e5"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tahun]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="28" width="19" height="14" uuid="f963d2da-9d02-4dfe-8ccb-d239869d59d0"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="84" width="200" height="14" uuid="57c69642-ead8-4f6b-b622-f27d619f61cc"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SPV by]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="252" y="98" width="164" height="14" uuid="384d3ac8-e8ef-475e-a6bf-6d985596cec1"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="14" width="25" height="14" uuid="4e7ef3db-94e0-4f09-a852-a4cece7fdd77"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="28" width="25" height="14" uuid="d13a0452-20fe-41ea-bacb-a4f416146acb"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="42" width="25" height="14" uuid="febb409d-9ce8-4a23-bf56-f4f3680b08c3"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="56" width="25" height="14" uuid="21d7e7a5-938e-4d8e-9474-1a695a97f8a9"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="70" width="25" height="14" uuid="4cfd87a6-d2d1-45c8-a7d2-6a3e87b58c8b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="84" width="25" height="14" uuid="0b07775b-49b8-4350-be07-8777a93ca497"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="98" width="25" height="14" uuid="39bed5b8-3fea-44d4-8d27-0c50eab85849"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="112" width="25" height="14" uuid="4ee3ef07-5b05-409f-a6fc-0abb180be8f5"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="126" width="25" height="14" uuid="9a19a1f8-a057-4ca0-b71d-e8984aea202c"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="140" width="200" height="14" uuid="39dea6da-82b2-4b30-9dbc-9f023687b56e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="140" width="25" height="14" uuid="901e7713-550c-4489-a7fe-c81337289bff"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="56" width="130" height="14" uuid="25fb0048-0f0a-4303-a026-1975cb59b1e7"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Weighted Factor Pipeline (%)]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="70" width="65" height="14" uuid="79bff1ba-11e7-46e6-8116-626e55af1413"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(H) High :]]></text>
			</staticText>
			<textField>
				<reportElement x="565" y="98" width="65" height="14" uuid="8bc62424-edbe-40ee-a4f3-ec2090ab2bd9"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightL}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="565" y="84" width="65" height="14" uuid="1ba51b0e-0e67-4017-abae-cf5bae7ccb34"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightM}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="500" y="84" width="65" height="14" uuid="bdfa164b-c9ee-454a-914a-629fe870a951"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(M) Medium :]]></text>
			</staticText>
			<textField>
				<reportElement x="565" y="70" width="65" height="14" uuid="e44dfeb0-c001-481a-8df5-f7e62ca042fa"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightH}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="500" y="98" width="65" height="14" uuid="7429b045-fc81-4fe2-8410-7afa574c0c85"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(L) Low :]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="98" width="84" height="14" uuid="9ac79974-a6d8-4fae-8f45-7f392fb777fe"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="84" width="84" height="14" uuid="1f8b7cb1-17d3-4852-9ba4-ec1affca5593"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="70" width="84" height="14" uuid="00c33653-5223-4527-963d-cb3163836dbd"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="56" width="84" height="14" uuid="c3e36e20-7d8d-4723-bc57-85f8cad73f7c"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</title>
	<detail>
		<band height="15" splitType="Stretch">
			<printWhenExpression><![CDATA[$F{GROUP_ITEM_CAT}.equals( "PS" )]]></printWhenExpression>
			<textField>
				<reportElement x="33" y="1" width="200" height="14" uuid="f3cec1b9-7fe6-48a6-82a8-65f3552fce5e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{ITEM_CAT}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="252" y="1" width="65" height="14" uuid="1594783e-23da-4d4a-af40-8dfd36911060"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{TOTAL}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="500" y="1" width="65" height="14" uuid="358d9063-ef3b-42b0-be1c-101d09ad73b1"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_HO}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="565" y="1" width="65" height="14" uuid="47d8606c-11ac-4dad-8ba5-edf4b0ef4b95"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SBY}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="630" y="1" width="65" height="14" uuid="a13936e8-6b92-49de-a634-8cf2964a2dbe"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_DPS}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="695" y="1" width="65" height="14" uuid="b40352b4-da43-4f3e-abf3-77d64798a0aa"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_CKR}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="760" y="1" width="65" height="14" uuid="562d0c64-2d50-4369-94b6-23622ef2768c"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SMR}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="1" width="25" height="14" uuid="93403b32-82a1-4cba-a0fb-aabfe157b97f"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="1" width="19" height="14" uuid="86c8bcdf-190c-479c-8d7f-908460b88d11"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[Rp.]]></text>
			</staticText>
			<staticText>
				<reportElement x="336" y="1" width="80" height="14" uuid="2e9267ef-463a-4272-be0f-c5d8998a27b0"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="317" y="1" width="19" height="14" uuid="be05d732-adf8-4c56-b970-3ea8329ca1dc"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="435" y="1" width="65" height="14" uuid="cb180ea8-e45f-4456-a7b2-8291838392ed"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="1" width="19" height="14" uuid="f0da4591-dcb2-4b04-8986-a814426cd294"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
		<band height="14">
			<printWhenExpression><![CDATA[$F{GROUP_ITEM_CAT}.equals( "PL" )]]></printWhenExpression>
			<staticText>
				<reportElement x="8" y="0" width="25" height="14" uuid="8491fb4d-9562-4dd9-be1a-b2d251188c1d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="317" y="0" width="118" height="14" uuid="707392ea-1cbb-4d5c-b89d-1dffbe2f9cff"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{ITEM_CAT}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="435" y="0" width="65" height="14" uuid="e30651e5-cace-4445-854a-e84d5116afcc"/>
				<textElement textAlignment="Right">
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{TOTAL}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="33" y="0" width="200" height="14" uuid="afee1cdd-5a36-49bb-9272-cf98681a0448"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="565" y="0" width="65" height="14" uuid="bf86a6ad-1410-48e9-a20c-0ede944cc2c3"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SBY}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="630" y="0" width="65" height="14" uuid="5e92119f-1d55-4e3e-959f-2941bf944792"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_DPS}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="695" y="0" width="65" height="14" uuid="dd3251d0-e4b5-4e27-a9d0-5d34f85e7a43"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_CKR}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="500" y="0" width="65" height="14" uuid="a85f7805-05a2-4a51-a713-23e5143b74b9"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_HO}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00" isBlankWhenNull="true">
				<reportElement x="760" y="0" width="65" height="14" uuid="dc725a3d-c1af-40c0-8399-e9b17986f510"/>
				<textElement textAlignment="Right">
					<font size="8"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{AMT_SMR}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="233" y="0" width="19" height="14" uuid="93fce0bd-f943-408e-8405-26b0091f2bed"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="252" y="0" width="65" height="14" uuid="724a21b1-9693-4447-b8be-1fd9dde120b6"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</detail>
	<noData>
		<band height="168">
			<textField>
				<reportElement x="252" y="56" width="164" height="14" uuid="d99be9de-ccc6-40c2-bd25-6065a6b68f28"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$V{vSemester}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="33" y="70" width="200" height="14" uuid="19e731b3-05ed-43bb-8cdd-5cfd572cbf7c"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Amt Big Project]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="0" width="25" height="14" uuid="fd795af3-d7d3-4ed7-8913-d9e8a5f6e497"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="14" width="200" height="14" uuid="daa8c535-dc1d-4b18-b83c-cf5de303efb5"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Jenis Laporan]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="#,###" isBlankWhenNull="true">
				<reportElement x="252" y="70" width="164" height="14" uuid="d3d8e81b-e2be-4619-aa28-83a507839ba5"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{AmtBig}]]></textFieldExpression>
			</textField>
			<textField pattern="dd-MM-yyyy" isBlankWhenNull="true">
				<reportElement x="252" y="42" width="164" height="14" uuid="b7840853-e77f-47d4-9240-09ddb996d3b0"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{TglUpto}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="33" y="28" width="200" height="14" uuid="cca65a83-f61c-4a7d-b29c-a2f80fb51fa8"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tahun]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="28" width="19" height="14" uuid="0c001c35-7f1f-402d-baf0-b1b30cdeb926"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="126" width="25" height="14" uuid="c3dd8d90-37cb-41de-822b-93237376fa91"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="84" width="25" height="14" uuid="27e501e6-dbf6-4a64-ae42-8939db868654"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="42" width="19" height="14" uuid="3ce5fcc6-abb0-443a-92c3-001f610109cd"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="98" width="19" height="14" uuid="c4fd450b-f33c-4a6f-b0ab-18e05d99195f"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<textField pattern="dd-MM-yyyy HH:mm:ss">
				<reportElement x="252" y="98" width="164" height="14" uuid="96c62e9b-697e-494c-866a-51f904c56795"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="140" width="25" height="14" uuid="e851a06a-d908-497e-935c-3a6d4c0609fd"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="56" width="19" height="14" uuid="61f542c6-ac06-4519-b47e-6d31941b60bf"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="70" width="19" height="14" uuid="548104c4-5065-4cae-a4c8-58dc76d578a8"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="84" width="200" height="14" uuid="c031cb39-5cb9-446b-8c0b-d1a21d6521e0"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[SPV by]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="14" width="25" height="14" uuid="efe9f648-ef5b-466a-b691-8aaf437a5206"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="84" width="19" height="14" uuid="bc7fa523-812b-48e8-b137-1f5214dc0ef3"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="42" width="200" height="14" uuid="c0b06db6-8082-4b11-89f5-aec53b8d2ecf"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Tgl. Cut-off Sales Revenue]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="0" width="383" height="14" uuid="cfd2cb3e-cdf4-4d22-be7d-e6ebfee7c951"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(04047-07) FORECAST SALES ACS]]></text>
			</staticText>
			<staticText>
				<reportElement x="233" y="14" width="19" height="14" uuid="9ecd6226-8338-4b38-a185-7d25ca43cefc"/>
				<textElement textAlignment="Center">
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[:]]></text>
			</staticText>
			<textField>
				<reportElement x="252" y="28" width="164" height="14" uuid="8818e80a-f222-4407-9bed-5bc31303aece"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{Tahun}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="8" y="98" width="25" height="14" uuid="6a2c70b3-7932-4510-8575-622d759d9e80"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="42" width="25" height="14" uuid="dad85d25-103c-4562-b633-4b55a07a489b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="56" width="200" height="14" uuid="9042ecf5-fdb0-4fcd-84d2-7bc0622d3fca"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Batas Akhir Semester I]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="98" width="200" height="14" uuid="1ffc3313-836d-47bb-8274-adb67616cb5b"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Printed on]]></text>
			</staticText>
			<textField>
				<reportElement x="252" y="84" width="164" height="14" uuid="a83e3f9a-6e1d-4946-a752-ba9a517e4044"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{SpvBy}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="33" y="112" width="200" height="14" uuid="d505b0e6-d130-405a-89d7-60cbc5ac81a2"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="126" width="200" height="14" uuid="96f74c34-b2ec-414d-9ce1-c0b6077bcf21"/>
				<textElement>
					<font size="8" isBold="true" isItalic="true"/>
				</textElement>
				<text><![CDATA[Note : Amount in million (1,000,000)]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="56" width="25" height="14" uuid="c3438bb6-044a-4319-a1c7-db672717679b"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="252" y="14" width="164" height="14" uuid="3477d784-8f5b-4ac5-8792-ce7ccf85d57c"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Summary By Branch]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="28" width="25" height="14" uuid="4eb1aac5-e894-4186-82a9-b4acf2f35549"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="140" width="200" height="14" uuid="756cff35-306e-4f61-b23f-9f8ec6f944af"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="70" width="25" height="14" uuid="f54e43eb-7331-48b2-8829-1605cc22500f"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="112" width="25" height="14" uuid="e37af53b-7633-479c-a490-8911d0bb103d"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="33" y="154" width="200" height="14" uuid="aef19316-65bd-4d39-8580-dff31ab07dcc"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[TIDAK ADA DATA SESUAI KRITERIA]]></text>
			</staticText>
			<staticText>
				<reportElement x="8" y="154" width="25" height="14" uuid="e9cd3c42-611c-4f21-b04e-0d36d792391e"/>
				<textElement>
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="565" y="98" width="65" height="14" uuid="049c82d1-edd5-4a2e-b258-a8e9e136b373"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightL}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="416" y="56" width="84" height="14" uuid="f42b9773-c270-464e-b2f5-ea17587dd21f"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="565" y="70" width="65" height="14" uuid="9f394305-940e-499a-8fed-447100645bf3"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightH}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="416" y="70" width="84" height="14" uuid="77b2a343-ca13-487f-b4cf-7416fa7e1578"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="56" width="130" height="14" uuid="8227dae9-1b56-46f0-bc26-95852a4a3514"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Weighted Factor Pipeline (%)]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="98" width="84" height="14" uuid="7f86848e-340f-4ae9-b162-566ee3ae4278"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="565" y="84" width="65" height="14" uuid="691db704-817b-4cab-a0a8-af01276db39a"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$P{weightM}]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="500" y="84" width="65" height="14" uuid="3aa56e4f-238f-42c1-bcd5-aa6046f974f6"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(M) Medium :]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="70" width="65" height="14" uuid="80bdc529-4598-45a3-a955-a5d543c773b2"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(H) High :]]></text>
			</staticText>
			<staticText>
				<reportElement x="500" y="98" width="65" height="14" uuid="78159229-86e0-464b-ac72-175bb00e489d"/>
				<textElement>
					<font size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[(L) Low :]]></text>
			</staticText>
			<staticText>
				<reportElement x="416" y="84" width="84" height="14" uuid="ea8750a2-95b9-40b7-ba85-f5453c0c95ad"/>
				<textElement textAlignment="Center">
					<font size="8"/>
				</textElement>
				<text><![CDATA[]]></text>
			</staticText>
		</band>
	</noData>
</jasperReport>
