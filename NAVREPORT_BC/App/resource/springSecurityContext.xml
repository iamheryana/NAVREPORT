<?xml version="1.0" encoding="UTF-8"?>

<!-- Spring namespace-based configuration -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	       http://www.springframework.org/schema/aop   
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd                        
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <!-- Enable the @Secured annotation to secure service layer methods -->
    <global-method-security secured-annotations="enabled"/>
    <http auto-config="true">
        <form-login login-page="/ZkLoginDialog.zul" authentication-failure-url="/ZkLoginDialog.zul?login_error=Invalid User dan Password"
                    default-target-url="/LoginMid.zul"/>
        <logout logout-url="/j_spring_logout" logout-success-url="/index.zul"/>
        <intercept-url pattern="/pages/**" access="IS_AUTHENTICATED_REMEMBERED"/>
        <intercept-url pattern="/WEB-INF/pages/**" access="IS_AUTHENTICATED_REMEMBERED"/>
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        
<!--        After Re-Login -->
<!--         <session-management session-fixation-protection="newSession">  -->
<!--             <concurrency-control max-sessions="5"/> -->
<!--         </session-management> -->
        
<!--         Before Re-Login -->
        <session-management > 
            <concurrency-control max-sessions="5"/>
        </session-management>

    </http>
	
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="myUserDetailsService">
<!--             <password-encoder ref="passwordEncoder">
                <salt-source user-property="token"/>
            </password-encoder> -->
            <password-encoder hash="sha">
        		<salt-source user-property="username"/>
			</password-encoder>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="myUserDetailsService" class="solusi.hapis.policy.model.PolicyManager">
        <beans:property name="userService" ref="userService"/>
    </beans:bean>

    <beans:bean id="passwordEncoder" class="solusi.hapis.policy.PasswordEncoderImpl"></beans:bean>
<!--     <beans:bean id="LoginLoggingPolicyService" class="solusi.hapis.policy.LoginLoggingPolicyService" scope="session"> -->
<!--         <beans:property name="guiLoginLoggingPolicService" ref="guiLoginLoggingPolicService"/> -->
<!--     </beans:bean> -->
<!--     <aop:config> -->
<!--         <aop:aspect id="LoginLoggingAspect" ref="LoginLoggingPolicyService"> -->
<!--             <aop:pointcut id="authPointcut" -->
<!--                           expression="execution(public org.springframework.security.core.Authentication org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication))"/> -->
<!--             <aop:around pointcut-ref="authPointcut" method="loginLogging"/> -->
<!--         </aop:aspect> -->
<!--     </aop:config> -->
</beans:beans>


